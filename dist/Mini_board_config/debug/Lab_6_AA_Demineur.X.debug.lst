

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec 06 16:30:39 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2,minocg
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2,minocg
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,minocg
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,minocg
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,minocg
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1,minocg
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    50  0000                     
    51                           ; Version 2.10
    52                           ; Generated 31/07/2019 GMT
    53                           ; 
    54                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F45K20 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataBANK0
    87  001D4E                     __pidataBANK0:
    88                           	opt callstack 0
    89                           
    90                           ;initializer for _randx
    91  001D4E  0001               	dw	1
    92  001D50  0000               	dw	0
    93                           
    94                           	psect	idataBANK1
    95  001BB2                     __pidataBANK1:
    96                           	opt callstack 0
    97                           
    98                           ;initializer for _matCGRAM
    99  001BB2  08                 	db	8
   100  001BB3  04                 	db	4
   101  001BB4  04                 	db	4
   102  001BB5  0A                 	db	10
   103  001BB6  11                 	db	17
   104  001BB7  1F                 	db	31
   105  001BB8  11                 	db	17
   106  001BB9  00                 	db	0
   107  001BBA  1F                 	db	31
   108  001BBB  11                 	db	17
   109  001BBC  15                 	db	21
   110  001BBD  15                 	db	21
   111  001BBE  15                 	db	21
   112  001BBF  15                 	db	21
   113  001BC0  11                 	db	17
   114  001BC1  1F                 	db	31
   115  001BC2  02                 	db	2
   116  001BC3  04                 	db	4
   117  001BC4  04                 	db	4
   118  001BC5  0E                 	db	14
   119  001BC6  1F                 	db	31
   120  001BC7  1F                 	db	31
   121  001BC8  1F                 	db	31
   122  001BC9  0E                 	db	14
   123  001BCA  10                 	db	16
   124  001BCB  1B                 	db	27
   125  001BCC  1E                 	db	30
   126  001BCD  1F                 	db	31
   127  001BCE  14                 	db	20
   128  001BCF  10                 	db	16
   129  001BD0  10                 	db	16
   130  001BD1  1F                 	db	31
   131  001BD2  08                 	db	8
   132  001BD3  04                 	db	4
   133  001BD4  1F                 	db	31
   134  001BD5  10                 	db	16
   135  001BD6  1E                 	db	30
   136  001BD7  10                 	db	16
   137  001BD8  1F                 	db	31
   138  001BD9  00                 	db	0
   139  001BDA  04                 	db	4
   140  001BDB  0A                 	db	10
   141  001BDC  0E                 	db	14
   142  001BDD  11                 	db	17
   143  001BDE  1F                 	db	31
   144  001BDF  10                 	db	16
   145  001BE0  0E                 	db	14
   146  001BE1  00                 	db	0
   147  001BE2  08                 	db	8
   148  001BE3  04                 	db	4
   149  001BE4  0E                 	db	14
   150  001BE5  01                 	db	1
   151  001BE6  0F                 	db	15
   152  001BE7  11                 	db	17
   153  001BE8  0F                 	db	15
   154  001BE9  00                 	db	0
   155  001BEA  04                 	db	4
   156  001BEB  0A                 	db	10
   157  001BEC  0E                 	db	14
   158  001BED  01                 	db	1
   159  001BEE  0F                 	db	15
   160  001BEF  11                 	db	17
   161  001BF0  0F                 	db	15
   162  001BF1  00                 	db	0
   163                           
   164                           	psect	smallconst
   165  000600                     __psmallconst:
   166                           	opt callstack 0
   167  000600  00                 	db	0
   168  000601                     main@F2870:
   169                           	opt callstack 0
   170  000601  4C                 	db	76
   171  000602  61                 	db	97
   172  000603  62                 	db	98
   173  000604  36                 	db	54
   174  000605  20                 	db	32
   175  000606  41                 	db	65
   176  000607  6C                 	db	108
   177  000608  65                 	db	101
   178  000609  78                 	db	120
   179  00060A  61                 	db	97
   180  00060B  6E                 	db	110
   181  00060C  64                 	db	100
   182  00060D  72                 	db	114
   183  00060E  65                 	db	101
   184  00060F  20                 	db	32
   185  000610  41                 	db	65
   186  000611  6C                 	db	108
   187  000612  61                 	db	97
   188  000613  69                 	db	105
   189  000614  6E                 	db	110
   190  000615  00                 	db	0
   191  000616                     __end_ofmain@F2870:
   192                           	opt callstack 0
   193  0000                     _TRISCbits	set	3988
   194  0000                     _PORTAbits	set	3968
   195  0000                     _PORTD	set	3971
   196  0000                     _ANSELbits	set	3966
   197  0000                     _TRISA	set	3986
   198  0000                     _ANSEL	set	3966
   199  0000                     _TRISB	set	3987
   200  0000                     _ANSELH	set	3967
   201  0000                     _TRISD	set	3989
   202  0000                     _PORTBbits	set	3969
   203  0000                     _TMR1	set	4046
   204  0000                     _RCREG	set	4014
   205  0000                     _TXREG	set	4013
   206  0000                     _RCSTAbits	set	4011
   207  0000                     _TXSTAbits	set	4012
   208  0000                     _BAUDCONbits	set	4024
   209  0000                     _SPBRG	set	4015
   210  0000                     _SPBRGH	set	4016
   211  0000                     _ADCON2bits	set	4032
   212  0000                     _ADCON1	set	4033
   213  0000                     _T1CONbits	set	4045
   214  0000                     _ADRESH	set	4036
   215  0000                     _ADCON0bits	set	4034
   216  0000                     _RCIF	set	31989
   217                           
   218                           ; #config settings
   219  000616  00                 	db	0	; dummy byte at the end
   220  0000                     
   221                           	psect	cinit
   222  001AD0                     __pcinit:
   223                           	opt callstack 0
   224  001AD0                     start_initialization:
   225                           	opt callstack 0
   226  001AD0                     __initialization:
   227                           	opt callstack 0
   228                           
   229                           ; Initialize objects allocated to BANK1 (64 bytes)
   230                           ; load TBLPTR registers with __pidataBANK1
   231  001AD0  0EB2               	movlw	low __pidataBANK1
   232  001AD2  6EF6               	movwf	tblptrl,c
   233  001AD4  0E1B               	movlw	high __pidataBANK1
   234  001AD6  6EF7               	movwf	tblptrh,c
   235  001AD8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   236  001ADA  6EF8               	movwf	tblptru,c
   237  001ADC  EE01  F0A8         	lfsr	0,__pdataBANK1
   238  001AE0  EE10 F040          	lfsr	1,64
   239  001AE4                     copy_data0:
   240  001AE4  0009               	tblrd		*+
   241  001AE6  CFF5 FFEE          	movff	tablat,postinc0
   242  001AEA  50E5               	movf	postdec1,w,c
   243  001AEC  50E1               	movf	fsr1l,w,c
   244  001AEE  E1FA               	bnz	copy_data0
   245                           
   246                           ; Initialize objects allocated to BANK0 (4 bytes)
   247                           ; load TBLPTR registers with __pidataBANK0
   248  001AF0  0E4E               	movlw	low __pidataBANK0
   249  001AF2  6EF6               	movwf	tblptrl,c
   250  001AF4  0E1D               	movlw	high __pidataBANK0
   251  001AF6  6EF7               	movwf	tblptrh,c
   252  001AF8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   253  001AFA  6EF8               	movwf	tblptru,c
   254  001AFC  EE00  F0F3         	lfsr	0,__pdataBANK0
   255  001B00  EE10 F004          	lfsr	1,4
   256  001B04                     copy_data1:
   257  001B04  0009               	tblrd		*+
   258  001B06  CFF5 FFEE          	movff	tablat,postinc0
   259  001B0A  50E5               	movf	postdec1,w,c
   260  001B0C  50E1               	movf	fsr1l,w,c
   261  001B0E  E1FA               	bnz	copy_data1
   262                           
   263                           ; Clear objects allocated to BANK1 (168 bytes)
   264  001B10  EE01  F000         	lfsr	0,__pbssBANK1
   265  001B14  0EA8               	movlw	168
   266  001B16                     clear_0:
   267  001B16  6AEE               	clrf	postinc0,c
   268  001B18  06E8               	decf	wreg,f,c
   269  001B1A  E1FD               	bnz	clear_0
   270  001B1C                     end_of_initialization:
   271                           	opt callstack 0
   272  001B1C                     __end_of__initialization:
   273                           	opt callstack 0
   274  001B1C  0100               	movlb	0
   275  001B1E  EF0C  F003         	goto	_main	;jump to C main() function
   276                           
   277                           	psect	dataBANK0
   278  0000F3                     __pdataBANK0:
   279                           	opt callstack 0
   280  0000F3                     _randx:
   281                           	opt callstack 0
   282  0000F3                     	ds	4
   283                           
   284                           	psect	bssBANK1
   285  000100                     __pbssBANK1:
   286                           	opt callstack 0
   287  000100                     _m_tabVue:
   288                           	opt callstack 0
   289  000100                     	ds	84
   290  000154                     _m_tabMines:
   291                           	opt callstack 0
   292  000154                     	ds	84
   293                           
   294                           	psect	dataBANK1
   295  0001A8                     __pdataBANK1:
   296                           	opt callstack 0
   297  0001A8                     _matCGRAM:
   298                           	opt callstack 0
   299  0001A8                     	ds	64
   300                           
   301                           	psect	cstackBANK0
   302  000060                     __pcstackBANK0:
   303                           	opt callstack 0
   304  000060                     ??_getAnalog:
   305  000060                     ??_lcd_ecrireDonnees:
   306  000060                     ??_lcd_busy:
   307  000060                     ?___wmul:
   308                           	opt callstack 0
   309  000060                     ?___lmul:
   310                           	opt callstack 0
   311  000060                     ___wmul@multiplier:
   312                           	opt callstack 0
   313  000060                     srand@x:
   314                           	opt callstack 0
   315  000060                     ___lmul@multiplier:
   316                           	opt callstack 0
   317                           
   318                           ; 4 bytes @ 0x0
   319  000060                     	ds	1
   320  000061                     getAnalog@canal:
   321                           	opt callstack 0
   322  000061                     lcd_ecrireDonnees@donnee:
   323                           	opt callstack 0
   324  000061                     lcd_busy@adresse:
   325                           	opt callstack 0
   326                           
   327                           ; 1 bytes @ 0x1
   328  000061                     	ds	1
   329  000062                     ??_lcd_resetSequence:
   330  000062                     lcd_wrCom@commande:
   331                           	opt callstack 0
   332  000062                     lcd_wrData@caractere:
   333                           	opt callstack 0
   334  000062                     ___wmul@multiplicand:
   335                           	opt callstack 0
   336                           
   337                           ; 2 bytes @ 0x2
   338  000062                     	ds	1
   339  000063                     ??_lcd_initCGRam:
   340  000063                     lcd_gotoXY@y:
   341                           	opt callstack 0
   342  000063                     lcd_ecritChar@car:
   343                           	opt callstack 0
   344                           
   345                           ; 1 bytes @ 0x3
   346  000063                     	ds	1
   347  000064                     lcd_gotoXY@x:
   348                           	opt callstack 0
   349  000064                     lcd_ecritChar@posRam:
   350                           	opt callstack 0
   351  000064                     ___wmul@product:
   352                           	opt callstack 0
   353  000064                     ___lmul@multiplicand:
   354                           	opt callstack 0
   355                           
   356                           ; 4 bytes @ 0x4
   357  000064                     	ds	1
   358  000065                     lcd_initCGRam@i:
   359                           	opt callstack 0
   360  000065                     deplace@x:
   361                           	opt callstack 0
   362                           
   363                           ; 2 bytes @ 0x5
   364  000065                     	ds	1
   365  000066                     ??_initTabVue:
   366  000066                     enleveTuilesAutour@y:
   367                           	opt callstack 0
   368  000066                     lcd_initCGRam@j:
   369                           	opt callstack 0
   370  000066                     calculToucheCombien@ligne:
   371                           	opt callstack 0
   372  000066                     gagne@pMines:
   373                           	opt callstack 0
   374  000066                     lcd_putMessage@chaine:
   375                           	opt callstack 0
   376                           
   377                           ; 2 bytes @ 0x6
   378  000066                     	ds	1
   379  000067                     ??_enleveTuilesAutour:
   380  000067                     deplace@y:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x7
   384  000067                     	ds	1
   385  000068                     ??_gagne:
   386  000068                     lcd_putMessage@j:
   387                           	opt callstack 0
   388  000068                     initTabVue@i:
   389                           	opt callstack 0
   390  000068                     calculToucheCombien@colonne:
   391                           	opt callstack 0
   392  000068                     ___lmul@product:
   393                           	opt callstack 0
   394                           
   395                           ; 4 bytes @ 0x8
   396  000068                     	ds	1
   397  000069                     ??_deplace:
   398  000069                     afficheTabMines@k:
   399                           	opt callstack 0
   400  000069                     afficheTabVue@k:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0x9
   404  000069                     	ds	1
   405  00006A                     ??_calculToucheCombien:
   406  00006A                     initTabVue@k:
   407                           	opt callstack 0
   408  00006A                     deplace@tensionX:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0xA
   412  00006A                     	ds	1
   413  00006B                     gagne@nbCache:
   414                           	opt callstack 0
   415                           
   416                           ; 2 bytes @ 0xB
   417  00006B                     	ds	1
   418  00006C                     ?_rand:
   419                           	opt callstack 0
   420  00006C                     deplace@tensionY:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0xC
   424  00006C                     	ds	1
   425  00006D                     gagne@i:
   426                           	opt callstack 0
   427                           
   428                           ; 2 bytes @ 0xD
   429  00006D                     	ds	1
   430  00006E                     ?___awmod:
   431                           	opt callstack 0
   432  00006E                     ___awmod@dividend:
   433                           	opt callstack 0
   434                           
   435                           ; 2 bytes @ 0xE
   436  00006E                     	ds	1
   437  00006F                     calculToucheCombien@nombre:
   438                           	opt callstack 0
   439  00006F                     gagne@k:
   440                           	opt callstack 0
   441                           
   442                           ; 2 bytes @ 0xF
   443  00006F                     	ds	1
   444  000070                     calculToucheCombien@minLigne:
   445                           	opt callstack 0
   446  000070                     ___awmod@divisor:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x10
   450  000070                     	ds	1
   451  000071                     calculToucheCombien@maxLigne:
   452                           	opt callstack 0
   453                           
   454                           ; 1 bytes @ 0x11
   455  000071                     	ds	1
   456  000072                     calculToucheCombien@minCol:
   457                           	opt callstack 0
   458  000072                     ___awmod@counter:
   459                           	opt callstack 0
   460                           
   461                           ; 1 bytes @ 0x12
   462  000072                     	ds	1
   463  000073                     calculToucheCombien@maxCol:
   464                           	opt callstack 0
   465  000073                     enleveTuilesAutour@minY:
   466                           	opt callstack 0
   467  000073                     ___awmod@sign:
   468                           	opt callstack 0
   469                           
   470                           ; 1 bytes @ 0x13
   471  000073                     	ds	1
   472  000074                     calculToucheCombien@j:
   473                           	opt callstack 0
   474  000074                     enleveTuilesAutour@maxY:
   475                           	opt callstack 0
   476  000074                     rempliMines@nb:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x14
   480  000074                     	ds	1
   481  000075                     calculToucheCombien@m:
   482                           	opt callstack 0
   483  000075                     enleveTuilesAutour@minX:
   484                           	opt callstack 0
   485                           
   486                           ; 1 bytes @ 0x15
   487  000075                     	ds	1
   488  000076                     ??_rempliMines:
   489  000076                     ??_metToucheCombien:
   490  000076                     enleveTuilesAutour@maxX:
   491                           	opt callstack 0
   492                           
   493                           ; 1 bytes @ 0x16
   494  000076                     	ds	1
   495  000077                     enleveTuilesAutour@j:
   496                           	opt callstack 0
   497                           
   498                           ; 1 bytes @ 0x17
   499  000077                     	ds	1
   500  000078                     enleveTuilesAutour@m:
   501                           	opt callstack 0
   502                           
   503                           ; 1 bytes @ 0x18
   504  000078                     	ds	1
   505  000079                     metToucheCombien@chiffre:
   506                           	opt callstack 0
   507  000079                     enleveTuilesAutour@x:
   508                           	opt callstack 0
   509  000079                     rempliMines@tabSafe:
   510                           	opt callstack 0
   511                           
   512                           ; 80 bytes @ 0x19
   513  000079                     	ds	1
   514  00007A                     demine@y:
   515                           	opt callstack 0
   516  00007A                     metToucheCombien@j:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0x1A
   520  00007A                     	ds	1
   521  00007B                     ??_demine:
   522                           
   523                           ; 1 bytes @ 0x1B
   524  00007B                     	ds	1
   525  00007C                     metToucheCombien@m:
   526                           	opt callstack 0
   527                           
   528                           ; 2 bytes @ 0x1C
   529  00007C                     	ds	7
   530  000083                     demine@x:
   531                           	opt callstack 0
   532                           
   533                           ; 1 bytes @ 0x23
   534  000083                     	ds	70
   535  0000C9                     rempliMines@i:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0x69
   539  0000C9                     	ds	2
   540  0000CB                     rempliMines@testX:
   541                           	opt callstack 0
   542                           
   543                           ; 1 bytes @ 0x6B
   544  0000CB                     	ds	1
   545  0000CC                     rempliMines@testY:
   546                           	opt callstack 0
   547                           
   548                           ; 1 bytes @ 0x6C
   549  0000CC                     	ds	1
   550  0000CD                     rempliMines@j:
   551                           	opt callstack 0
   552                           
   553                           ; 2 bytes @ 0x6D
   554  0000CD                     	ds	2
   555  0000CF                     rempliMines@m:
   556                           	opt callstack 0
   557                           
   558                           ; 2 bytes @ 0x6F
   559  0000CF                     	ds	2
   560  0000D1                     ??_main:
   561                           
   562                           ; 1 bytes @ 0x71
   563  0000D1                     	ds	5
   564  0000D6                     main@afficheNom:
   565                           	opt callstack 0
   566                           
   567                           ; 21 bytes @ 0x76
   568  0000D6                     	ds	21
   569  0000EB                     main@etatAfterSW:
   570                           	opt callstack 0
   571                           
   572                           ; 1 bytes @ 0x8B
   573  0000EB                     	ds	1
   574  0000EC                     main@nbMines:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x8C
   578  0000EC                     	ds	2
   579  0000EE                     main@etatInitSW:
   580                           	opt callstack 0
   581                           
   582                           ; 1 bytes @ 0x8E
   583  0000EE                     	ds	1
   584  0000EF                     main@posX:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0x8F
   588  0000EF                     	ds	2
   589  0000F1                     main@posY:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x91
   593  0000F1                     	ds	2
   594                           
   595 ;;
   596 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   597 ;;
   598 ;; *************** function _main *****************
   599 ;; Defined at:
   600 ;;		line 79 in file "main.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;  afficheNom     21  118[BANK0 ] const unsigned char [21]
   605 ;;  posY            2  145[BANK0 ] int 
   606 ;;  posX            2  143[BANK0 ] int 
   607 ;;  nbMines         2  140[BANK0 ] int 
   608 ;;  etatInitSW      1  142[BANK0 ] unsigned char 
   609 ;;  etatAfterSW     1  139[BANK0 ] unsigned char 
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   619 ;;      Params:         0       0       0       0       0       0       0
   620 ;;      Locals:         0      29       0       0       0       0       0
   621 ;;      Temps:          0       5       0       0       0       0       0
   622 ;;      Totals:         0      34       0       0       0       0       0
   623 ;;Total ram usage:       34 bytes
   624 ;; Hardware stack levels required when called:    6
   625 ;; This function calls:
   626 ;;		___wmul
   627 ;;		_afficheTabMines
   628 ;;		_afficheTabVue
   629 ;;		_demine
   630 ;;		_deplace
   631 ;;		_gagne
   632 ;;		_initTabVue
   633 ;;		_initialisation
   634 ;;		_lcd_cacheCurseur
   635 ;;		_lcd_effaceAffichage
   636 ;;		_lcd_gotoXY
   637 ;;		_lcd_init
   638 ;;		_lcd_montreCurseur
   639 ;;		_lcd_putMessage
   640 ;;		_metToucheCombien
   641 ;;		_rempliMines
   642 ;;		_testEtat
   643 ;; This function is called by:
   644 ;;		Startup code after reset
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text0
   649  000618                     __ptext0:
   650                           	opt callstack 0
   651  000618                     _main:
   652                           	opt callstack 25
   653  000618                     
   654                           ;main.c: 82: const char afficheNom[] = "Lab6 Alexandre Alain";
   655  000618  0E01               	movlw	low main@F2870
   656  00061A  6EF6               	movwf	tblptrl,c
   657  00061C                     	if	1	;There is more than 1 active tblptr byte
   658  00061C  0E06               	movlw	high main@F2870
   659  00061E  6EF7               	movwf	tblptrh,c
   660  000620                     	endif
   661  000620                     	if	1	;There are 3 active tblptr bytes
   662  000620  0E00               	movlw	low (main@F2870 shr (0+16))
   663  000622  6EF8               	movwf	tblptru,c
   664  000624                     	endif
   665  000624  EE20  F0D6         	lfsr	2,main@afficheNom
   666  000628  0E14               	movlw	20
   667  00062A                     u1540:
   668  00062A  0009               	tblrd		*+
   669  00062C  CFF5 FFDE          	movff	tablat,postinc2
   670  000630  06E8               	decf	wreg,f,c
   671  000632  E2FB               	bc	u1540
   672  000634                     
   673                           ;main.c: 83: int posX = 10;
   674  000634  0E00               	movlw	0
   675  000636  0100               	movlb	0	; force () banked
   676  000638  6FF0               	movwf	(main@posX+1)& (0+255),b
   677  00063A  0E0A               	movlw	10
   678  00063C  6FEF               	movwf	main@posX& (0+255),b
   679  00063E                     
   680                           ; BSR set to: 0
   681                           ;main.c: 84: int posY = 3;
   682  00063E  0E00               	movlw	0
   683  000640  0100               	movlb	0	; force () banked
   684  000642  6FF2               	movwf	(main@posY+1)& (0+255),b
   685  000644  0E03               	movlw	3
   686  000646  6FF1               	movwf	main@posY& (0+255),b
   687  000648                     
   688                           ; BSR set to: 0
   689                           ;main.c: 85: bool etatInitSW = 0;
   690  000648  0E00               	movlw	0
   691  00064A  0100               	movlb	0	; force () banked
   692  00064C  6FEE               	movwf	main@etatInitSW& (0+255),b
   693  00064E                     
   694                           ; BSR set to: 0
   695                           ;main.c: 86: bool etatAfterSW = 0;
   696  00064E  0E00               	movlw	0
   697  000650  0100               	movlb	0	; force () banked
   698  000652  6FEB               	movwf	main@etatAfterSW& (0+255),b
   699  000654                     
   700                           ; BSR set to: 0
   701                           ;main.c: 87: int nbMines = 5;
   702  000654  0E00               	movlw	0
   703  000656  0100               	movlb	0	; force () banked
   704  000658  6FED               	movwf	(main@nbMines+1)& (0+255),b
   705  00065A  0E05               	movlw	5
   706  00065C  6FEC               	movwf	main@nbMines& (0+255),b
   707  00065E                     
   708                           ; BSR set to: 0
   709                           ;main.c: 90: initialisation();
   710  00065E  ECF9  F00D         	call	_initialisation	;wreg free
   711  000662                     
   712                           ;main.c: 91: lcd_init();
   713  000662  EC43  F00E         	call	_lcd_init	;wreg free
   714  000666                     
   715                           ;main.c: 93: etatInitSW = testEtat();
   716  000666  EC79  F00E         	call	_testEtat	;wreg free
   717  00066A  0100               	movlb	0	; force () banked
   718  00066C  6FEE               	movwf	main@etatInitSW& (0+255),b
   719  00066E                     
   720                           ; BSR set to: 0
   721                           ;main.c: 94: etatAfterSW = etatInitSW;
   722  00066E  C0EE  F0EB         	movff	main@etatInitSW,main@etatAfterSW
   723  000672                     
   724                           ; BSR set to: 0
   725                           ;main.c: 96: lcd_gotoXY(1, 1);
   726  000672  0E01               	movlw	1
   727  000674  0100               	movlb	0	; force () banked
   728  000676  6F63               	movwf	lcd_gotoXY@y& (0+255),b
   729  000678  0E01               	movlw	1
   730  00067A  EC39  F00C         	call	_lcd_gotoXY
   731  00067E                     
   732                           ;main.c: 97: lcd_putMessage(afficheNom);
   733  00067E  0ED6               	movlw	low main@afficheNom
   734  000680  0100               	movlb	0	; force () banked
   735  000682  6F66               	movwf	lcd_putMessage@chaine& (0+255),b
   736  000684  0E00               	movlw	high main@afficheNom
   737  000686  6F67               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   738  000688  EC91  F00D         	call	_lcd_putMessage	;wreg free
   739  00068C                     
   740                           ;main.c: 99: _delay((unsigned long)((2000)*(1000000/4000.0)));
   741  00068C  0E03               	movlw	3
   742  00068E  0100               	movlb	0	; force () banked
   743  000690  6FD2               	movwf	(??_main+1)& (0+255),b
   744  000692  0E8A               	movlw	138
   745  000694  6FD1               	movwf	??_main& (0+255),b
   746  000696  0E55               	movlw	85
   747  000698                     u1647:
   748  000698  2EE8               	decfsz	wreg,f,c
   749  00069A  D7FE               	bra	u1647
   750  00069C  2FD1               	decfsz	??_main& (0+255),f,b
   751  00069E  D7FC               	bra	u1647
   752  0006A0  2FD2               	decfsz	(??_main+1)& (0+255),f,b
   753  0006A2  D7FA               	bra	u1647
   754  0006A4  F000 F000          	nop2	
   755  0006A8                     
   756                           ;main.c: 101: lcd_effaceAffichage();
   757  0006A8  EC8D  F00E         	call	_lcd_effaceAffichage	;wreg free
   758  0006AC                     
   759                           ;main.c: 103: initTabVue();
   760  0006AC  EC88  F00A         	call	_initTabVue	;wreg free
   761  0006B0                     
   762                           ;main.c: 104: rempliMines(nbMines);
   763  0006B0  C0EC  F074         	movff	main@nbMines,rempliMines@nb
   764  0006B4  C0ED  F075         	movff	main@nbMines+1,rempliMines@nb+1
   765  0006B8  ECD7  F005         	call	_rempliMines	;wreg free
   766  0006BC                     
   767                           ;main.c: 105: metToucheCombien();
   768  0006BC  EC96  F008         	call	_metToucheCombien	;wreg free
   769  0006C0                     
   770                           ;main.c: 106: afficheTabVue();
   771  0006C0  ECA7  F00B         	call	_afficheTabVue	;wreg free
   772  0006C4                     l2476:
   773                           
   774                           ;main.c: 109: {;main.c: 111: deplace(&posX, &posY);
   775  0006C4  0EEF               	movlw	low main@posX
   776  0006C6  0100               	movlb	0	; force () banked
   777  0006C8  6F65               	movwf	deplace@x& (0+255),b
   778  0006CA  0E00               	movlw	high main@posX
   779  0006CC  6F66               	movwf	(deplace@x+1)& (0+255),b
   780  0006CE  0EF1               	movlw	low main@posY
   781  0006D0  0100               	movlb	0	; force () banked
   782  0006D2  6F67               	movwf	deplace@y& (0+255),b
   783  0006D4  0E00               	movlw	high main@posY
   784  0006D6  6F68               	movwf	(deplace@y+1)& (0+255),b
   785  0006D8  ECFA  F006         	call	_deplace	;wreg free
   786  0006DC                     
   787                           ;main.c: 113: etatInitSW = testEtat();
   788  0006DC  EC79  F00E         	call	_testEtat	;wreg free
   789  0006E0  0100               	movlb	0	; force () banked
   790  0006E2  6FEE               	movwf	main@etatInitSW& (0+255),b
   791  0006E4                     
   792                           ; BSR set to: 0
   793                           ;main.c: 115: if( (etatInitSW != etatAfterSW) && (etatAfterSW == 0) )
   794  0006E4  0100               	movlb	0	; force () banked
   795  0006E6  51EB               	movf	main@etatAfterSW& (0+255),w,b
   796  0006E8  0100               	movlb	0	; force () banked
   797  0006EA  19EE               	xorwf	main@etatInitSW& (0+255),w,b
   798  0006EC  B4D8               	btfsc	status,2,c
   799  0006EE  EF7B  F003         	goto	u1551
   800  0006F2  EF7D  F003         	goto	u1550
   801  0006F6                     u1551:
   802  0006F6  EFD2  F003         	goto	l2508
   803  0006FA                     u1550:
   804  0006FA                     
   805                           ; BSR set to: 0
   806  0006FA  0100               	movlb	0	; force () banked
   807  0006FC  51EB               	movf	main@etatAfterSW& (0+255),w,b
   808  0006FE  A4D8               	btfss	status,2,c
   809  000700  EF84  F003         	goto	u1561
   810  000704  EF86  F003         	goto	u1560
   811  000708                     u1561:
   812  000708  EFD2  F003         	goto	l2508
   813  00070C                     u1560:
   814  00070C                     
   815                           ; BSR set to: 0
   816                           ;main.c: 116: {;main.c: 118: if( (demine(posX, posY) == 0) || ( gagne(&nbMines) == 1) )
   817  00070C  C0F1  F07A         	movff	main@posY,demine@y
   818  000710  0100               	movlb	0	; force () banked
   819  000712  51EF               	movf	main@posX& (0+255),w,b
   820  000714  ECEF  F009         	call	_demine
   821  000718  0900               	iorlw	0
   822  00071A  B4D8               	btfsc	status,2,c
   823  00071C  EF92  F003         	goto	u1571
   824  000720  EF94  F003         	goto	u1570
   825  000724                     u1571:
   826  000724  EFA3  F003         	goto	l2488
   827  000728                     u1570:
   828  000728  0EEC               	movlw	low main@nbMines
   829  00072A  0100               	movlb	0	; force () banked
   830  00072C  6F66               	movwf	gagne@pMines& (0+255),b
   831  00072E  0E00               	movlw	high main@nbMines
   832  000730  6F67               	movwf	(gagne@pMines+1)& (0+255),b
   833  000732  EC50  F009         	call	_gagne	;wreg free
   834  000736  06E8               	decf	wreg,f,c
   835  000738  A4D8               	btfss	status,2,c
   836  00073A  EFA1  F003         	goto	u1581
   837  00073E  EFA3  F003         	goto	u1580
   838  000742                     u1581:
   839  000742  EFD0  F003         	goto	l2506
   840  000746                     u1580:
   841  000746                     l2488:
   842                           
   843                           ;main.c: 119: {;main.c: 120: lcd_cacheCurseur();
   844  000746  EC9C  F00E         	call	_lcd_cacheCurseur	;wreg free
   845  00074A                     
   846                           ;main.c: 121: afficheTabMines();
   847  00074A  ECF0  F00B         	call	_afficheTabMines	;wreg free
   848  00074E                     
   849                           ;main.c: 122: _delay((unsigned long)((500)*(1000000/4000.0)));
   850  00074E  0EA3               	movlw	163
   851  000750  0100               	movlb	0	; force () banked
   852  000752  6FD1               	movwf	??_main& (0+255),b
   853  000754  0E55               	movlw	85
   854  000756                     u1657:
   855  000756  2EE8               	decfsz	wreg,f,c
   856  000758  D7FE               	bra	u1657
   857  00075A  2FD1               	decfsz	??_main& (0+255),f,b
   858  00075C  D7FC               	bra	u1657
   859                           
   860                           ;main.c: 124: while(testEtat() != 1)
   861  00075E  EFBA  F003         	goto	l2496
   862  000762                     l2494:
   863                           
   864                           ;main.c: 125: {;main.c: 126: _delay((unsigned long)((100)*(1000000/4000.0)));
   865  000762  0E21               	movlw	33
   866  000764  0100               	movlb	0	; force () banked
   867  000766  6FD1               	movwf	??_main& (0+255),b
   868  000768  0E76               	movlw	118
   869  00076A                     u1667:
   870  00076A  2EE8               	decfsz	wreg,f,c
   871  00076C  D7FE               	bra	u1667
   872  00076E  2FD1               	decfsz	??_main& (0+255),f,b
   873  000770  D7FC               	bra	u1667
   874  000772  F000               	nop	
   875  000774                     l2496:
   876  000774  EC79  F00E         	call	_testEtat	;wreg free
   877  000778  06E8               	decf	wreg,f,c
   878  00077A  A4D8               	btfss	status,2,c
   879  00077C  EFC2  F003         	goto	u1591
   880  000780  EFC4  F003         	goto	u1590
   881  000784                     u1591:
   882  000784  EFB1  F003         	goto	l2494
   883  000788                     u1590:
   884  000788                     
   885                           ;main.c: 127: };main.c: 129: lcd_montreCurseur();
   886  000788  EC94  F00E         	call	_lcd_montreCurseur	;wreg free
   887  00078C                     
   888                           ;main.c: 130: initTabVue();
   889  00078C  EC88  F00A         	call	_initTabVue	;wreg free
   890  000790                     
   891                           ;main.c: 131: rempliMines(nbMines);
   892  000790  C0EC  F074         	movff	main@nbMines,rempliMines@nb
   893  000794  C0ED  F075         	movff	main@nbMines+1,rempliMines@nb+1
   894  000798  ECD7  F005         	call	_rempliMines	;wreg free
   895  00079C                     
   896                           ;main.c: 132: metToucheCombien();
   897  00079C  EC96  F008         	call	_metToucheCombien	;wreg free
   898  0007A0                     l2506:
   899                           
   900                           ;main.c: 133: };main.c: 135: afficheTabVue();
   901  0007A0  ECA7  F00B         	call	_afficheTabVue	;wreg free
   902  0007A4                     l2508:
   903                           
   904                           ;main.c: 136: };main.c: 138: etatAfterSW = etatInitSW;
   905  0007A4  C0EE  F0EB         	movff	main@etatInitSW,main@etatAfterSW
   906  0007A8                     
   907                           ;main.c: 140: if (PORTBbits.RB0 == 0)
   908  0007A8  B081               	btfsc	129,0,c	;volatile
   909  0007AA  EFD9  F003         	goto	u1601
   910  0007AE  EFDB  F003         	goto	u1600
   911  0007B2                     u1601:
   912  0007B2  EFA3  F004         	goto	l2520
   913  0007B6                     u1600:
   914  0007B6                     
   915                           ;main.c: 141: {;main.c: 142: if(m_tabVue[posY-1][posX-1] == 1)
   916  0007B6  C0F1  F060         	movff	main@posY,___wmul@multiplier
   917  0007BA  C0F2  F061         	movff	main@posY+1,___wmul@multiplier+1
   918  0007BE  0E00               	movlw	0
   919  0007C0  0100               	movlb	0	; force () banked
   920  0007C2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   921  0007C4  0E15               	movlw	21
   922  0007C6  6F62               	movwf	___wmul@multiplicand& (0+255),b
   923  0007C8  EC57  F00E         	call	___wmul	;wreg free
   924  0007CC  0EEA               	movlw	234
   925  0007CE  0100               	movlb	0	; force () banked
   926  0007D0  6FD1               	movwf	??_main& (0+255),b
   927  0007D2  0EFF               	movlw	255
   928  0007D4  6FD2               	movwf	(??_main+1)& (0+255),b
   929  0007D6  0E00               	movlw	low _m_tabVue
   930  0007D8  6FD3               	movwf	(??_main+2)& (0+255),b
   931  0007DA  0E01               	movlw	high _m_tabVue
   932  0007DC  6FD4               	movwf	(??_main+3)& (0+255),b
   933  0007DE  51D1               	movf	??_main& (0+255),w,b
   934  0007E0  27D3               	addwf	(??_main+2)& (0+255),f,b
   935  0007E2  51D2               	movf	(??_main+1)& (0+255),w,b
   936  0007E4  23D4               	addwfc	(??_main+3)& (0+255),f,b
   937  0007E6  0100               	movlb	0	; force () banked
   938  0007E8  5160               	movf	?___wmul& (0+255),w,b
   939  0007EA  0100               	movlb	0	; force () banked
   940  0007EC  27D3               	addwf	(??_main+2)& (0+255),f,b
   941  0007EE  0100               	movlb	0	; force () banked
   942  0007F0  5161               	movf	(?___wmul+1)& (0+255),w,b
   943  0007F2  0100               	movlb	0	; force () banked
   944  0007F4  23D4               	addwfc	(??_main+3)& (0+255),f,b
   945  0007F6  0100               	movlb	0	; force () banked
   946  0007F8  51EF               	movf	main@posX& (0+255),w,b
   947  0007FA  0100               	movlb	0	; force () banked
   948  0007FC  25D3               	addwf	(??_main+2)& (0+255),w,b
   949  0007FE  6ED9               	movwf	fsr2l,c
   950  000800  0100               	movlb	0	; force () banked
   951  000802  51F0               	movf	(main@posX+1)& (0+255),w,b
   952  000804  0100               	movlb	0	; force () banked
   953  000806  21D4               	addwfc	(??_main+3)& (0+255),w,b
   954  000808  6EDA               	movwf	fsr2h,c
   955  00080A  04DE               	decf	postinc2,w,c
   956  00080C  A4D8               	btfss	status,2,c
   957  00080E  EF0B  F004         	goto	u1611
   958  000812  EF0D  F004         	goto	u1610
   959  000816                     u1611:
   960  000816  EF3B  F004         	goto	l2516
   961  00081A                     u1610:
   962  00081A                     
   963                           ; BSR set to: 0
   964                           ;main.c: 143: {;main.c: 144: m_tabVue[posY-1][posX-1] = 3;
   965  00081A  C0F1  F060         	movff	main@posY,___wmul@multiplier
   966  00081E  C0F2  F061         	movff	main@posY+1,___wmul@multiplier+1
   967  000822  0E00               	movlw	0
   968  000824  0100               	movlb	0	; force () banked
   969  000826  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   970  000828  0E15               	movlw	21
   971  00082A  6F62               	movwf	___wmul@multiplicand& (0+255),b
   972  00082C  EC57  F00E         	call	___wmul	;wreg free
   973  000830  0EEA               	movlw	234
   974  000832  0100               	movlb	0	; force () banked
   975  000834  6FD1               	movwf	??_main& (0+255),b
   976  000836  0EFF               	movlw	255
   977  000838  6FD2               	movwf	(??_main+1)& (0+255),b
   978  00083A  0E00               	movlw	low _m_tabVue
   979  00083C  6FD3               	movwf	(??_main+2)& (0+255),b
   980  00083E  0E01               	movlw	high _m_tabVue
   981  000840  6FD4               	movwf	(??_main+3)& (0+255),b
   982  000842  51D1               	movf	??_main& (0+255),w,b
   983  000844  27D3               	addwf	(??_main+2)& (0+255),f,b
   984  000846  51D2               	movf	(??_main+1)& (0+255),w,b
   985  000848  23D4               	addwfc	(??_main+3)& (0+255),f,b
   986  00084A  0100               	movlb	0	; force () banked
   987  00084C  5160               	movf	?___wmul& (0+255),w,b
   988  00084E  0100               	movlb	0	; force () banked
   989  000850  27D3               	addwf	(??_main+2)& (0+255),f,b
   990  000852  0100               	movlb	0	; force () banked
   991  000854  5161               	movf	(?___wmul+1)& (0+255),w,b
   992  000856  0100               	movlb	0	; force () banked
   993  000858  23D4               	addwfc	(??_main+3)& (0+255),f,b
   994  00085A  0100               	movlb	0	; force () banked
   995  00085C  51EF               	movf	main@posX& (0+255),w,b
   996  00085E  0100               	movlb	0	; force () banked
   997  000860  25D3               	addwf	(??_main+2)& (0+255),w,b
   998  000862  6ED9               	movwf	fsr2l,c
   999  000864  0100               	movlb	0	; force () banked
  1000  000866  51F0               	movf	(main@posX+1)& (0+255),w,b
  1001  000868  0100               	movlb	0	; force () banked
  1002  00086A  21D4               	addwfc	(??_main+3)& (0+255),w,b
  1003  00086C  6EDA               	movwf	fsr2h,c
  1004  00086E  0E03               	movlw	3
  1005  000870  6EDF               	movwf	indf2,c
  1006                           
  1007                           ;main.c: 145: }
  1008  000872  EF9A  F004         	goto	l91
  1009  000876                     l2516:
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;main.c: 146: else if(m_tabVue[posY-1][posX-1] == 3)
  1013  000876  C0F1  F060         	movff	main@posY,___wmul@multiplier
  1014  00087A  C0F2  F061         	movff	main@posY+1,___wmul@multiplier+1
  1015  00087E  0E00               	movlw	0
  1016  000880  0100               	movlb	0	; force () banked
  1017  000882  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1018  000884  0E15               	movlw	21
  1019  000886  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1020  000888  EC57  F00E         	call	___wmul	;wreg free
  1021  00088C  0EEA               	movlw	234
  1022  00088E  0100               	movlb	0	; force () banked
  1023  000890  6FD1               	movwf	??_main& (0+255),b
  1024  000892  0EFF               	movlw	255
  1025  000894  6FD2               	movwf	(??_main+1)& (0+255),b
  1026  000896  0E00               	movlw	low _m_tabVue
  1027  000898  6FD3               	movwf	(??_main+2)& (0+255),b
  1028  00089A  0E01               	movlw	high _m_tabVue
  1029  00089C  6FD4               	movwf	(??_main+3)& (0+255),b
  1030  00089E  51D1               	movf	??_main& (0+255),w,b
  1031  0008A0  27D3               	addwf	(??_main+2)& (0+255),f,b
  1032  0008A2  51D2               	movf	(??_main+1)& (0+255),w,b
  1033  0008A4  23D4               	addwfc	(??_main+3)& (0+255),f,b
  1034  0008A6  0100               	movlb	0	; force () banked
  1035  0008A8  5160               	movf	?___wmul& (0+255),w,b
  1036  0008AA  0100               	movlb	0	; force () banked
  1037  0008AC  27D3               	addwf	(??_main+2)& (0+255),f,b
  1038  0008AE  0100               	movlb	0	; force () banked
  1039  0008B0  5161               	movf	(?___wmul+1)& (0+255),w,b
  1040  0008B2  0100               	movlb	0	; force () banked
  1041  0008B4  23D4               	addwfc	(??_main+3)& (0+255),f,b
  1042  0008B6  0100               	movlb	0	; force () banked
  1043  0008B8  51EF               	movf	main@posX& (0+255),w,b
  1044  0008BA  0100               	movlb	0	; force () banked
  1045  0008BC  25D3               	addwf	(??_main+2)& (0+255),w,b
  1046  0008BE  6ED9               	movwf	fsr2l,c
  1047  0008C0  0100               	movlb	0	; force () banked
  1048  0008C2  51F0               	movf	(main@posX+1)& (0+255),w,b
  1049  0008C4  0100               	movlb	0	; force () banked
  1050  0008C6  21D4               	addwfc	(??_main+3)& (0+255),w,b
  1051  0008C8  6EDA               	movwf	fsr2h,c
  1052  0008CA  0E03               	movlw	3
  1053  0008CC  18DE               	xorwf	postinc2,w,c
  1054  0008CE  A4D8               	btfss	status,2,c
  1055  0008D0  EF6C  F004         	goto	u1621
  1056  0008D4  EF6E  F004         	goto	u1620
  1057  0008D8                     u1621:
  1058  0008D8  EF9A  F004         	goto	l91
  1059  0008DC                     u1620:
  1060  0008DC                     
  1061                           ; BSR set to: 0
  1062                           ;main.c: 147: {;main.c: 148: m_tabVue[posY-1][posX-1] = 1;
  1063  0008DC  C0F1  F060         	movff	main@posY,___wmul@multiplier
  1064  0008E0  C0F2  F061         	movff	main@posY+1,___wmul@multiplier+1
  1065  0008E4  0E00               	movlw	0
  1066  0008E6  0100               	movlb	0	; force () banked
  1067  0008E8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1068  0008EA  0E15               	movlw	21
  1069  0008EC  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1070  0008EE  EC57  F00E         	call	___wmul	;wreg free
  1071  0008F2  0EEA               	movlw	234
  1072  0008F4  0100               	movlb	0	; force () banked
  1073  0008F6  6FD1               	movwf	??_main& (0+255),b
  1074  0008F8  0EFF               	movlw	255
  1075  0008FA  6FD2               	movwf	(??_main+1)& (0+255),b
  1076  0008FC  0E00               	movlw	low _m_tabVue
  1077  0008FE  6FD3               	movwf	(??_main+2)& (0+255),b
  1078  000900  0E01               	movlw	high _m_tabVue
  1079  000902  6FD4               	movwf	(??_main+3)& (0+255),b
  1080  000904  51D1               	movf	??_main& (0+255),w,b
  1081  000906  27D3               	addwf	(??_main+2)& (0+255),f,b
  1082  000908  51D2               	movf	(??_main+1)& (0+255),w,b
  1083  00090A  23D4               	addwfc	(??_main+3)& (0+255),f,b
  1084  00090C  0100               	movlb	0	; force () banked
  1085  00090E  5160               	movf	?___wmul& (0+255),w,b
  1086  000910  0100               	movlb	0	; force () banked
  1087  000912  27D3               	addwf	(??_main+2)& (0+255),f,b
  1088  000914  0100               	movlb	0	; force () banked
  1089  000916  5161               	movf	(?___wmul+1)& (0+255),w,b
  1090  000918  0100               	movlb	0	; force () banked
  1091  00091A  23D4               	addwfc	(??_main+3)& (0+255),f,b
  1092  00091C  0100               	movlb	0	; force () banked
  1093  00091E  51EF               	movf	main@posX& (0+255),w,b
  1094  000920  0100               	movlb	0	; force () banked
  1095  000922  25D3               	addwf	(??_main+2)& (0+255),w,b
  1096  000924  6ED9               	movwf	fsr2l,c
  1097  000926  0100               	movlb	0	; force () banked
  1098  000928  51F0               	movf	(main@posX+1)& (0+255),w,b
  1099  00092A  0100               	movlb	0	; force () banked
  1100  00092C  21D4               	addwfc	(??_main+3)& (0+255),w,b
  1101  00092E  6EDA               	movwf	fsr2h,c
  1102  000930  0E01               	movlw	1
  1103  000932  6EDF               	movwf	indf2,c
  1104  000934                     l91:
  1105                           
  1106                           ; BSR set to: 0
  1107                           ;main.c: 149: };main.c: 151: afficheTabVue();
  1108  000934  ECA7  F00B         	call	_afficheTabVue	;wreg free
  1109  000938                     l93:
  1110  000938  A081               	btfss	129,0,c	;volatile
  1111  00093A  EFA1  F004         	goto	u1631
  1112  00093E  EFA3  F004         	goto	u1630
  1113  000942                     u1631:
  1114  000942  EF9C  F004         	goto	l93
  1115  000946                     u1630:
  1116  000946                     l2520:
  1117                           
  1118                           ;main.c: 155: };main.c: 157: _delay((unsigned long)((100)*(1000000/4000.0)));
  1119  000946  0E21               	movlw	33
  1120  000948  0100               	movlb	0	; force () banked
  1121  00094A  6FD1               	movwf	??_main& (0+255),b
  1122  00094C  0E76               	movlw	118
  1123  00094E                     u1677:
  1124  00094E  2EE8               	decfsz	wreg,f,c
  1125  000950  D7FE               	bra	u1677
  1126  000952  2FD1               	decfsz	??_main& (0+255),f,b
  1127  000954  D7FC               	bra	u1677
  1128  000956  F000               	nop	
  1129  000958  EF62  F003         	goto	l2476
  1130  00095C  EF00  F000         	goto	start
  1131  000960                     __end_of_main:
  1132                           	opt callstack 0
  1133                           
  1134 ;; *************** function _testEtat *****************
  1135 ;; Defined at:
  1136 ;;		line 457 in file "main.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      unsigned char 
  1143 ;; Registers used:
  1144 ;;		wreg
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1150 ;;      Params:         0       0       0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0
  1153 ;;      Totals:         0       0       0       0       0       0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text1
  1164  001CF2                     __ptext1:
  1165                           	opt callstack 0
  1166  001CF2                     _testEtat:
  1167                           	opt callstack 30
  1168  001CF2                     
  1169                           ;main.c: 459: if(PORTBbits.RB1 == 0)
  1170  001CF2  B281               	btfsc	129,1,c	;volatile
  1171  001CF4  EF7E  F00E         	goto	u1161
  1172  001CF8  EF80  F00E         	goto	u1160
  1173  001CFC                     u1161:
  1174  001CFC  EF83  F00E         	goto	l2224
  1175  001D00                     u1160:
  1176  001D00                     
  1177                           ;main.c: 460: {;main.c: 461: return 1;
  1178  001D00  0E01               	movlw	1
  1179  001D02  EF84  F00E         	goto	l195
  1180  001D06                     l2224:
  1181                           
  1182                           ;main.c: 463: else;main.c: 464: {;main.c: 465: return 0;
  1183  001D06  0E00               	movlw	0
  1184  001D08                     l195:
  1185  001D08  0012               	return		;funcret
  1186  001D0A                     __end_of_testEtat:
  1187                           	opt callstack 0
  1188                           
  1189 ;; *************** function _rempliMines *****************
  1190 ;; Defined at:
  1191 ;;		line 217 in file "main.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  nb              2   20[BANK0 ] int 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  m               2  111[BANK0 ] int 
  1196 ;;  i               2  105[BANK0 ] int 
  1197 ;;  j               2  109[BANK0 ] int 
  1198 ;;  tabSafe        80   25[BANK0 ] unsigned char [20][4]
  1199 ;;  testY           1  108[BANK0 ] unsigned char 
  1200 ;;  testX           1  107[BANK0 ] unsigned char 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1210 ;;      Params:         0       2       0       0       0       0       0
  1211 ;;      Locals:         0      88       0       0       0       0       0
  1212 ;;      Temps:          0       3       0       0       0       0       0
  1213 ;;      Totals:         0      93       0       0       0       0       0
  1214 ;;Total ram usage:       93 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    2
  1217 ;; This function calls:
  1218 ;;		___awmod
  1219 ;;		___wmul
  1220 ;;		_rand
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text2
  1227  000BAE                     __ptext2:
  1228                           	opt callstack 0
  1229  000BAE                     _rempliMines:
  1230                           	opt callstack 28
  1231  000BAE                     
  1232                           ;main.c: 219: bool tabSafe[4][20];;main.c: 220: char testX = 0;
  1233  000BAE  0E00               	movlw	0
  1234  000BB0  0100               	movlb	0	; force () banked
  1235  000BB2  6FCB               	movwf	rempliMines@testX& (0+255),b
  1236                           
  1237                           ;main.c: 221: char testY = 0;
  1238  000BB4  0E00               	movlw	0
  1239  000BB6  0100               	movlb	0	; force () banked
  1240  000BB8  6FCC               	movwf	rempliMines@testY& (0+255),b
  1241                           
  1242                           ;main.c: 224: for(int j = 0 ; j < 20 ; j++)
  1243  000BBA  0E00               	movlw	0
  1244  000BBC  0100               	movlb	0	; force () banked
  1245  000BBE  6FCE               	movwf	(rempliMines@j+1)& (0+255),b
  1246  000BC0  0E00               	movlw	0
  1247  000BC2  6FCD               	movwf	rempliMines@j& (0+255),b
  1248  000BC4                     
  1249                           ; BSR set to: 0
  1250  000BC4  0100               	movlb	0	; force () banked
  1251  000BC6  BFCE               	btfsc	(rempliMines@j+1)& (0+255),7,b
  1252  000BC8  EFEF  F005         	goto	u1211
  1253  000BCC  51CE               	movf	(rempliMines@j+1)& (0+255),w,b
  1254  000BCE  E109               	bnz	u1210
  1255  000BD0  0E14               	movlw	20
  1256  000BD2  5DCD               	subwf	rempliMines@j& (0+255),w,b
  1257  000BD4  A0D8               	btfss	status,0,c
  1258  000BD6  EFEF  F005         	goto	u1211
  1259  000BDA  EFF1  F005         	goto	u1210
  1260  000BDE                     u1211:
  1261  000BDE  EFF3  F005         	goto	l2256
  1262  000BE2                     u1210:
  1263  000BE2  EF75  F006         	goto	l2272
  1264  000BE6                     l2256:
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;main.c: 225: {;main.c: 226: for(int m = 0; m < 4 ; m++)
  1268  000BE6  0E00               	movlw	0
  1269  000BE8  0100               	movlb	0	; force () banked
  1270  000BEA  6FD0               	movwf	(rempliMines@m+1)& (0+255),b
  1271  000BEC  0E00               	movlw	0
  1272  000BEE  6FCF               	movwf	rempliMines@m& (0+255),b
  1273  000BF0                     
  1274                           ; BSR set to: 0
  1275  000BF0  0100               	movlb	0	; force () banked
  1276  000BF2  BFD0               	btfsc	(rempliMines@m+1)& (0+255),7,b
  1277  000BF4  EF05  F006         	goto	u1221
  1278  000BF8  51D0               	movf	(rempliMines@m+1)& (0+255),w,b
  1279  000BFA  E109               	bnz	u1220
  1280  000BFC  0E04               	movlw	4
  1281  000BFE  5DCF               	subwf	rempliMines@m& (0+255),w,b
  1282  000C00  A0D8               	btfss	status,0,c
  1283  000C02  EF05  F006         	goto	u1221
  1284  000C06  EF07  F006         	goto	u1220
  1285  000C0A                     u1221:
  1286  000C0A  EF09  F006         	goto	l2262
  1287  000C0E                     u1220:
  1288  000C0E  EF63  F006         	goto	l2268
  1289  000C12                     l2262:
  1290                           
  1291                           ; BSR set to: 0
  1292                           ;main.c: 227: {;main.c: 228: tabSafe[m][j] = 0;
  1293  000C12  C0CF  F060         	movff	rempliMines@m,___wmul@multiplier
  1294  000C16  C0D0  F061         	movff	rempliMines@m+1,___wmul@multiplier+1
  1295  000C1A  0E00               	movlw	0
  1296  000C1C  0100               	movlb	0	; force () banked
  1297  000C1E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1298  000C20  0E14               	movlw	20
  1299  000C22  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1300  000C24  EC57  F00E         	call	___wmul	;wreg free
  1301  000C28  0E79               	movlw	low rempliMines@tabSafe
  1302  000C2A  0100               	movlb	0	; force () banked
  1303  000C2C  6F76               	movwf	??_rempliMines& (0+255),b
  1304  000C2E  0E00               	movlw	high rempliMines@tabSafe
  1305  000C30  6F77               	movwf	(??_rempliMines+1)& (0+255),b
  1306  000C32  0100               	movlb	0	; force () banked
  1307  000C34  5160               	movf	?___wmul& (0+255),w,b
  1308  000C36  0100               	movlb	0	; force () banked
  1309  000C38  2776               	addwf	??_rempliMines& (0+255),f,b
  1310  000C3A  0100               	movlb	0	; force () banked
  1311  000C3C  5161               	movf	(?___wmul+1)& (0+255),w,b
  1312  000C3E  0100               	movlb	0	; force () banked
  1313  000C40  2377               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1314  000C42  0100               	movlb	0	; force () banked
  1315  000C44  51CD               	movf	rempliMines@j& (0+255),w,b
  1316  000C46  0100               	movlb	0	; force () banked
  1317  000C48  2576               	addwf	??_rempliMines& (0+255),w,b
  1318  000C4A  6ED9               	movwf	fsr2l,c
  1319  000C4C  0100               	movlb	0	; force () banked
  1320  000C4E  51CE               	movf	(rempliMines@j+1)& (0+255),w,b
  1321  000C50  0100               	movlb	0	; force () banked
  1322  000C52  2177               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1323  000C54  6EDA               	movwf	fsr2h,c
  1324  000C56  0E00               	movlw	0
  1325  000C58  6EDF               	movwf	indf2,c
  1326                           
  1327                           ;main.c: 229: m_tabMines[m][j] = ' ';
  1328  000C5A  C0CF  F060         	movff	rempliMines@m,___wmul@multiplier
  1329  000C5E  C0D0  F061         	movff	rempliMines@m+1,___wmul@multiplier+1
  1330  000C62  0E00               	movlw	0
  1331  000C64  0100               	movlb	0	; force () banked
  1332  000C66  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1333  000C68  0E15               	movlw	21
  1334  000C6A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1335  000C6C  EC57  F00E         	call	___wmul	;wreg free
  1336  000C70  0E54               	movlw	low _m_tabMines
  1337  000C72  0100               	movlb	0	; force () banked
  1338  000C74  6F76               	movwf	??_rempliMines& (0+255),b
  1339  000C76  0E01               	movlw	high _m_tabMines
  1340  000C78  6F77               	movwf	(??_rempliMines+1)& (0+255),b
  1341  000C7A  0100               	movlb	0	; force () banked
  1342  000C7C  5160               	movf	?___wmul& (0+255),w,b
  1343  000C7E  0100               	movlb	0	; force () banked
  1344  000C80  2776               	addwf	??_rempliMines& (0+255),f,b
  1345  000C82  0100               	movlb	0	; force () banked
  1346  000C84  5161               	movf	(?___wmul+1)& (0+255),w,b
  1347  000C86  0100               	movlb	0	; force () banked
  1348  000C88  2377               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1349  000C8A  0100               	movlb	0	; force () banked
  1350  000C8C  51CD               	movf	rempliMines@j& (0+255),w,b
  1351  000C8E  0100               	movlb	0	; force () banked
  1352  000C90  2576               	addwf	??_rempliMines& (0+255),w,b
  1353  000C92  6ED9               	movwf	fsr2l,c
  1354  000C94  0100               	movlb	0	; force () banked
  1355  000C96  51CE               	movf	(rempliMines@j+1)& (0+255),w,b
  1356  000C98  0100               	movlb	0	; force () banked
  1357  000C9A  2177               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1358  000C9C  6EDA               	movwf	fsr2h,c
  1359  000C9E  0E20               	movlw	32
  1360  000CA0  6EDF               	movwf	indf2,c
  1361  000CA2                     
  1362                           ; BSR set to: 0
  1363  000CA2  0100               	movlb	0	; force () banked
  1364  000CA4  4BCF               	infsnz	rempliMines@m& (0+255),f,b
  1365  000CA6  2BD0               	incf	(rempliMines@m+1)& (0+255),f,b
  1366  000CA8                     
  1367                           ; BSR set to: 0
  1368  000CA8  0100               	movlb	0	; force () banked
  1369  000CAA  BFD0               	btfsc	(rempliMines@m+1)& (0+255),7,b
  1370  000CAC  EF61  F006         	goto	u1231
  1371  000CB0  51D0               	movf	(rempliMines@m+1)& (0+255),w,b
  1372  000CB2  E109               	bnz	u1230
  1373  000CB4  0E04               	movlw	4
  1374  000CB6  5DCF               	subwf	rempliMines@m& (0+255),w,b
  1375  000CB8  A0D8               	btfss	status,0,c
  1376  000CBA  EF61  F006         	goto	u1231
  1377  000CBE  EF63  F006         	goto	u1230
  1378  000CC2                     u1231:
  1379  000CC2  EF09  F006         	goto	l2262
  1380  000CC6                     u1230:
  1381  000CC6                     l2268:
  1382                           
  1383                           ; BSR set to: 0
  1384  000CC6  0100               	movlb	0	; force () banked
  1385  000CC8  4BCD               	infsnz	rempliMines@j& (0+255),f,b
  1386  000CCA  2BCE               	incf	(rempliMines@j+1)& (0+255),f,b
  1387  000CCC                     
  1388                           ; BSR set to: 0
  1389  000CCC  0100               	movlb	0	; force () banked
  1390  000CCE  BFCE               	btfsc	(rempliMines@j+1)& (0+255),7,b
  1391  000CD0  EF73  F006         	goto	u1241
  1392  000CD4  51CE               	movf	(rempliMines@j+1)& (0+255),w,b
  1393  000CD6  E109               	bnz	u1240
  1394  000CD8  0E14               	movlw	20
  1395  000CDA  5DCD               	subwf	rempliMines@j& (0+255),w,b
  1396  000CDC  A0D8               	btfss	status,0,c
  1397  000CDE  EF73  F006         	goto	u1241
  1398  000CE2  EF75  F006         	goto	u1240
  1399  000CE6                     u1241:
  1400  000CE6  EFF3  F005         	goto	l2256
  1401  000CEA                     u1240:
  1402  000CEA                     l2272:
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;main.c: 230: };main.c: 231: };main.c: 234: for(int i = 0 ; i < nb ; i++)
  1406  000CEA  0E00               	movlw	0
  1407  000CEC  0100               	movlb	0	; force () banked
  1408  000CEE  6FCA               	movwf	(rempliMines@i+1)& (0+255),b
  1409  000CF0  0E00               	movlw	0
  1410  000CF2  6FC9               	movwf	rempliMines@i& (0+255),b
  1411  000CF4  EFE5  F006         	goto	l2282
  1412  000CF8                     l2274:
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;main.c: 237: {;main.c: 238: testX = rand()%20;
  1416  000CF8  EC13  F00D         	call	_rand	;wreg free
  1417  000CFC  C06C  F06E         	movff	?_rand,___awmod@dividend
  1418  000D00  C06D  F06F         	movff	?_rand+1,___awmod@dividend+1
  1419  000D04  0E00               	movlw	0
  1420  000D06  0100               	movlb	0	; force () banked
  1421  000D08  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  1422  000D0A  0E14               	movlw	20
  1423  000D0C  6F70               	movwf	___awmod@divisor& (0+255),b
  1424  000D0E  ECFD  F00A         	call	___awmod	;wreg free
  1425  000D12  0100               	movlb	0	; force () banked
  1426  000D14  516E               	movf	?___awmod& (0+255),w,b
  1427  000D16  0100               	movlb	0	; force () banked
  1428  000D18  6FCB               	movwf	rempliMines@testX& (0+255),b
  1429                           
  1430                           ;main.c: 239: testY = rand()%4;
  1431  000D1A  EC13  F00D         	call	_rand	;wreg free
  1432  000D1E  0100               	movlb	0	; force () banked
  1433  000D20  516C               	movf	?_rand& (0+255),w,b
  1434  000D22  0B03               	andlw	3
  1435  000D24  0100               	movlb	0	; force () banked
  1436  000D26  6FCC               	movwf	rempliMines@testY& (0+255),b
  1437  000D28                     
  1438                           ; BSR set to: 0
  1439                           ;main.c: 240: };main.c: 241: while(tabSafe[testY][testX] == 1);
  1440  000D28  0100               	movlb	0	; force () banked
  1441  000D2A  51CC               	movf	rempliMines@testY& (0+255),w,b
  1442  000D2C  0D14               	mullw	20
  1443  000D2E  0E79               	movlw	low rempliMines@tabSafe
  1444  000D30  0100               	movlb	0	; force () banked
  1445  000D32  6F76               	movwf	??_rempliMines& (0+255),b
  1446  000D34  0E00               	movlw	high rempliMines@tabSafe
  1447  000D36  6F77               	movwf	(??_rempliMines+1)& (0+255),b
  1448  000D38  50F3               	movf	243,w,c
  1449  000D3A  2776               	addwf	??_rempliMines& (0+255),f,b
  1450  000D3C  50F4               	movf	244,w,c
  1451  000D3E  2377               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1452  000D40  0100               	movlb	0	; force () banked
  1453  000D42  51CB               	movf	rempliMines@testX& (0+255),w,b
  1454  000D44  0100               	movlb	0	; force () banked
  1455  000D46  2576               	addwf	??_rempliMines& (0+255),w,b
  1456  000D48  6ED9               	movwf	fsr2l,c
  1457  000D4A  0100               	movlb	0	; force () banked
  1458  000D4C  0E00               	movlw	0
  1459  000D4E  0100               	movlb	0	; force () banked
  1460  000D50  2177               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1461  000D52  6EDA               	movwf	fsr2h,c
  1462  000D54  04DE               	decf	postinc2,w,c
  1463  000D56  B4D8               	btfsc	status,2,c
  1464  000D58  EFB0  F006         	goto	u1251
  1465  000D5C  EFB2  F006         	goto	u1250
  1466  000D60                     u1251:
  1467  000D60  EF7C  F006         	goto	l2274
  1468  000D64                     u1250:
  1469  000D64                     
  1470                           ; BSR set to: 0
  1471                           ;main.c: 243: tabSafe[testY][testX] = 1;
  1472  000D64  0100               	movlb	0	; force () banked
  1473  000D66  51CC               	movf	rempliMines@testY& (0+255),w,b
  1474  000D68  0D14               	mullw	20
  1475  000D6A  0E79               	movlw	low rempliMines@tabSafe
  1476  000D6C  0100               	movlb	0	; force () banked
  1477  000D6E  6F76               	movwf	??_rempliMines& (0+255),b
  1478  000D70  0E00               	movlw	high rempliMines@tabSafe
  1479  000D72  6F77               	movwf	(??_rempliMines+1)& (0+255),b
  1480  000D74  50F3               	movf	243,w,c
  1481  000D76  2776               	addwf	??_rempliMines& (0+255),f,b
  1482  000D78  50F4               	movf	244,w,c
  1483  000D7A  2377               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1484  000D7C  0100               	movlb	0	; force () banked
  1485  000D7E  51CB               	movf	rempliMines@testX& (0+255),w,b
  1486  000D80  0100               	movlb	0	; force () banked
  1487  000D82  2576               	addwf	??_rempliMines& (0+255),w,b
  1488  000D84  6ED9               	movwf	fsr2l,c
  1489  000D86  0100               	movlb	0	; force () banked
  1490  000D88  0E00               	movlw	0
  1491  000D8A  0100               	movlb	0	; force () banked
  1492  000D8C  2177               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1493  000D8E  6EDA               	movwf	fsr2h,c
  1494  000D90  0E01               	movlw	1
  1495  000D92  6EDF               	movwf	indf2,c
  1496                           
  1497                           ;main.c: 244: m_tabMines[testY][testX] = 2;
  1498  000D94  0100               	movlb	0	; force () banked
  1499  000D96  51CC               	movf	rempliMines@testY& (0+255),w,b
  1500  000D98  0D15               	mullw	21
  1501  000D9A  0E54               	movlw	low _m_tabMines
  1502  000D9C  0100               	movlb	0	; force () banked
  1503  000D9E  6F76               	movwf	??_rempliMines& (0+255),b
  1504  000DA0  0E01               	movlw	high _m_tabMines
  1505  000DA2  6F77               	movwf	(??_rempliMines+1)& (0+255),b
  1506  000DA4  50F3               	movf	243,w,c
  1507  000DA6  2776               	addwf	??_rempliMines& (0+255),f,b
  1508  000DA8  50F4               	movf	244,w,c
  1509  000DAA  2377               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1510  000DAC  0100               	movlb	0	; force () banked
  1511  000DAE  51CB               	movf	rempliMines@testX& (0+255),w,b
  1512  000DB0  0100               	movlb	0	; force () banked
  1513  000DB2  2576               	addwf	??_rempliMines& (0+255),w,b
  1514  000DB4  6ED9               	movwf	fsr2l,c
  1515  000DB6  0100               	movlb	0	; force () banked
  1516  000DB8  0E00               	movlw	0
  1517  000DBA  0100               	movlb	0	; force () banked
  1518  000DBC  2177               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1519  000DBE  6EDA               	movwf	fsr2h,c
  1520  000DC0  0E02               	movlw	2
  1521  000DC2  6EDF               	movwf	indf2,c
  1522  000DC4                     
  1523                           ; BSR set to: 0
  1524  000DC4  0100               	movlb	0	; force () banked
  1525  000DC6  4BC9               	infsnz	rempliMines@i& (0+255),f,b
  1526  000DC8  2BCA               	incf	(rempliMines@i+1)& (0+255),f,b
  1527  000DCA                     l2282:
  1528                           
  1529                           ; BSR set to: 0
  1530  000DCA  0100               	movlb	0	; force () banked
  1531  000DCC  5174               	movf	rempliMines@nb& (0+255),w,b
  1532  000DCE  0100               	movlb	0	; force () banked
  1533  000DD0  5DC9               	subwf	rempliMines@i& (0+255),w,b
  1534  000DD2  51CA               	movf	(rempliMines@i+1)& (0+255),w,b
  1535  000DD4  0A80               	xorlw	128
  1536  000DD6  0100               	movlb	0	; force () banked
  1537  000DD8  6F76               	movwf	??_rempliMines& (0+255),b
  1538  000DDA  0100               	movlb	0	; force () banked
  1539  000DDC  5175               	movf	(rempliMines@nb+1)& (0+255),w,b
  1540  000DDE  0A80               	xorlw	128
  1541  000DE0  0100               	movlb	0	; force () banked
  1542  000DE2  5976               	subwfb	??_rempliMines& (0+255),w,b
  1543  000DE4  A0D8               	btfss	status,0,c
  1544  000DE6  EFF7  F006         	goto	u1261
  1545  000DEA  EFF9  F006         	goto	u1260
  1546  000DEE                     u1261:
  1547  000DEE  EF7C  F006         	goto	l2274
  1548  000DF2                     u1260:
  1549  000DF2                     
  1550                           ; BSR set to: 0
  1551  000DF2  0012               	return		;funcret
  1552  000DF4                     __end_of_rempliMines:
  1553                           	opt callstack 0
  1554                           
  1555 ;; *************** function _rand *****************
  1556 ;; Defined at:
  1557 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;		None
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  2   12[BANK0 ] int 
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1571 ;;      Params:         0       2       0       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0       0
  1574 ;;      Totals:         0       2       0       0       0       0       0
  1575 ;;Total ram usage:        2 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:    1
  1578 ;; This function calls:
  1579 ;;		___lmul
  1580 ;; This function is called by:
  1581 ;;		_rempliMines
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text3
  1586  001A26                     __ptext3:
  1587                           	opt callstack 0
  1588  001A26                     _rand:
  1589                           	opt callstack 28
  1590  001A26  C0F3  F060         	movff	_randx,___lmul@multiplier
  1591  001A2A  C0F4  F061         	movff	_randx+1,___lmul@multiplier+1
  1592  001A2E  C0F5  F062         	movff	_randx+2,___lmul@multiplier+2
  1593  001A32  C0F6  F063         	movff	_randx+3,___lmul@multiplier+3
  1594  001A36  0E6D               	movlw	109
  1595  001A38  0100               	movlb	0	; () banked
  1596  001A3A  6F64               	movwf	___lmul@multiplicand& (0+255),b
  1597  001A3C  0E4E               	movlw	78
  1598  001A3E  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1599  001A40  0EC6               	movlw	198
  1600  001A42  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1601  001A44  0E41               	movlw	65
  1602  001A46  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1603  001A48  EC72  F00C         	call	___lmul	;wreg free
  1604  001A4C  C060  F0F3         	movff	?___lmul,_randx
  1605  001A50  C061  F0F4         	movff	?___lmul+1,_randx+1
  1606  001A54  C062  F0F5         	movff	?___lmul+2,_randx+2
  1607  001A58  C063  F0F6         	movff	?___lmul+3,_randx+3
  1608  001A5C  0E39               	movlw	57
  1609  001A5E  0100               	movlb	0	; () banked
  1610  001A60  27F3               	addwf	_randx& (0+255),f,b
  1611  001A62  0E30               	movlw	48
  1612  001A64  23F4               	addwfc	(_randx+1)& (0+255),f,b
  1613  001A66  0E00               	movlw	0
  1614  001A68  23F5               	addwfc	(_randx+2)& (0+255),f,b
  1615  001A6A  0E00               	movlw	0
  1616  001A6C  23F6               	addwfc	(_randx+3)& (0+255),f,b
  1617  001A6E                     
  1618                           ; BSR set to: 0
  1619  001A6E  0EFF               	movlw	255
  1620  001A70  15F5               	andwf	(_randx+2)& (0+255),w,b
  1621  001A72  6F6C               	movwf	?_rand& (0+255),b
  1622  001A74  0E7F               	movlw	127
  1623  001A76  15F6               	andwf	(_randx+3)& (0+255),w,b
  1624  001A78  6F6D               	movwf	(?_rand+1)& (0+255),b
  1625  001A7A                     
  1626                           ; BSR set to: 0
  1627  001A7A  0012               	return		;funcret
  1628  001A7C                     __end_of_rand:
  1629                           	opt callstack 0
  1630                           
  1631 ;; *************** function ___lmul *****************
  1632 ;; Defined at:
  1633 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1636 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  product         4    8[BANK0 ] unsigned long 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  4    0[BANK0 ] unsigned long 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1648 ;;      Params:         0       8       0       0       0       0       0
  1649 ;;      Locals:         0       4       0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0       0       0
  1651 ;;      Totals:         0      12       0       0       0       0       0
  1652 ;;Total ram usage:       12 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_rand
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text4
  1662  0018E4                     __ptext4:
  1663                           	opt callstack 0
  1664  0018E4                     ___lmul:
  1665                           	opt callstack 28
  1666  0018E4  0E00               	movlw	0
  1667  0018E6  0100               	movlb	0	; () banked
  1668  0018E8  6F68               	movwf	___lmul@product& (0+255),b
  1669  0018EA  0E00               	movlw	0
  1670  0018EC  6F69               	movwf	(___lmul@product+1)& (0+255),b
  1671  0018EE  0E00               	movlw	0
  1672  0018F0  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  1673  0018F2  0E00               	movlw	0
  1674  0018F4  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  1675  0018F6                     l1970:
  1676                           
  1677                           ; BSR set to: 0
  1678  0018F6  A160               	btfss	___lmul@multiplier& (0+255),0,b
  1679  0018F8  EF80  F00C         	goto	u881
  1680  0018FC  EF82  F00C         	goto	u880
  1681  001900                     u881:
  1682  001900  EF8A  F00C         	goto	l1974
  1683  001904                     u880:
  1684  001904                     
  1685                           ; BSR set to: 0
  1686  001904  5164               	movf	___lmul@multiplicand& (0+255),w,b
  1687  001906  2768               	addwf	___lmul@product& (0+255),f,b
  1688  001908  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1689  00190A  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  1690  00190C  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1691  00190E  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  1692  001910  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1693  001912  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  1694  001914                     l1974:
  1695                           
  1696                           ; BSR set to: 0
  1697  001914  90D8               	bcf	status,0,c
  1698  001916  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  1699  001918  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1700  00191A  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1701  00191C  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1702  00191E                     
  1703                           ; BSR set to: 0
  1704  00191E  90D8               	bcf	status,0,c
  1705  001920  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1706  001922  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1707  001924  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1708  001926  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  1709  001928  5160               	movf	___lmul@multiplier& (0+255),w,b
  1710  00192A  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1711  00192C  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1712  00192E  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1713  001930  A4D8               	btfss	status,2,c
  1714  001932  EF9D  F00C         	goto	u891
  1715  001936  EF9F  F00C         	goto	u890
  1716  00193A                     u891:
  1717  00193A  EF7B  F00C         	goto	l1970
  1718  00193E                     u890:
  1719  00193E                     
  1720                           ; BSR set to: 0
  1721  00193E  C068  F060         	movff	___lmul@product,?___lmul
  1722  001942  C069  F061         	movff	___lmul@product+1,?___lmul+1
  1723  001946  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  1724  00194A  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  1725  00194E                     
  1726                           ; BSR set to: 0
  1727  00194E  0012               	return		;funcret
  1728  001950                     __end_of___lmul:
  1729                           	opt callstack 0
  1730                           
  1731 ;; *************** function ___awmod *****************
  1732 ;; Defined at:
  1733 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  dividend        2   14[BANK0 ] int 
  1736 ;;  divisor         2   16[BANK0 ] int 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  sign            1   19[BANK0 ] unsigned char 
  1739 ;;  counter         1   18[BANK0 ] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  2   14[BANK0 ] int 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1749 ;;      Params:         0       4       0       0       0       0       0
  1750 ;;      Locals:         0       2       0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0
  1752 ;;      Totals:         0       6       0       0       0       0       0
  1753 ;;Total ram usage:        6 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; This function calls:
  1756 ;;		Nothing
  1757 ;; This function is called by:
  1758 ;;		_rempliMines
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text5
  1763  0015FA                     __ptext5:
  1764                           	opt callstack 0
  1765  0015FA                     ___awmod:
  1766                           	opt callstack 29
  1767  0015FA  0E00               	movlw	0
  1768  0015FC  0100               	movlb	0	; () banked
  1769  0015FE  6F73               	movwf	___awmod@sign& (0+255),b
  1770  001600                     
  1771                           ; BSR set to: 0
  1772  001600  BF6F               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1773  001602  EF07  F00B         	goto	u1100
  1774  001606  EF05  F00B         	goto	u1101
  1775  00160A                     u1101:
  1776  00160A  EF0D  F00B         	goto	l2164
  1777  00160E                     u1100:
  1778  00160E                     
  1779                           ; BSR set to: 0
  1780  00160E  6D6E               	negf	___awmod@dividend& (0+255),b
  1781  001610  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  1782  001612  B0D8               	btfsc	status,0,c
  1783  001614  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  1784  001616                     
  1785                           ; BSR set to: 0
  1786  001616  0E01               	movlw	1
  1787  001618  6F73               	movwf	___awmod@sign& (0+255),b
  1788  00161A                     l2164:
  1789                           
  1790                           ; BSR set to: 0
  1791  00161A  BF71               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1792  00161C  EF14  F00B         	goto	u1110
  1793  001620  EF12  F00B         	goto	u1111
  1794  001624                     u1111:
  1795  001624  EF18  F00B         	goto	l2168
  1796  001628                     u1110:
  1797  001628                     
  1798                           ; BSR set to: 0
  1799  001628  6D70               	negf	___awmod@divisor& (0+255),b
  1800  00162A  1F71               	comf	(___awmod@divisor+1)& (0+255),f,b
  1801  00162C  B0D8               	btfsc	status,0,c
  1802  00162E  2B71               	incf	(___awmod@divisor+1)& (0+255),f,b
  1803  001630                     l2168:
  1804                           
  1805                           ; BSR set to: 0
  1806  001630  5170               	movf	___awmod@divisor& (0+255),w,b
  1807  001632  1171               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1808  001634  B4D8               	btfsc	status,2,c
  1809  001636  EF1F  F00B         	goto	u1121
  1810  00163A  EF21  F00B         	goto	u1120
  1811  00163E                     u1121:
  1812  00163E  EF45  F00B         	goto	l2184
  1813  001642                     u1120:
  1814  001642                     
  1815                           ; BSR set to: 0
  1816  001642  0E01               	movlw	1
  1817  001644  6F72               	movwf	___awmod@counter& (0+255),b
  1818  001646  EF29  F00B         	goto	l2174
  1819  00164A                     l2172:
  1820                           
  1821                           ; BSR set to: 0
  1822  00164A  90D8               	bcf	status,0,c
  1823  00164C  3770               	rlcf	___awmod@divisor& (0+255),f,b
  1824  00164E  3771               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1825  001650  2B72               	incf	___awmod@counter& (0+255),f,b
  1826  001652                     l2174:
  1827                           
  1828                           ; BSR set to: 0
  1829  001652  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1830  001654  EF2E  F00B         	goto	u1131
  1831  001658  EF30  F00B         	goto	u1130
  1832  00165C                     u1131:
  1833  00165C  EF25  F00B         	goto	l2172
  1834  001660                     u1130:
  1835  001660                     l2176:
  1836                           
  1837                           ; BSR set to: 0
  1838  001660  5170               	movf	___awmod@divisor& (0+255),w,b
  1839  001662  5D6E               	subwf	___awmod@dividend& (0+255),w,b
  1840  001664  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  1841  001666  596F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1842  001668  A0D8               	btfss	status,0,c
  1843  00166A  EF39  F00B         	goto	u1141
  1844  00166E  EF3B  F00B         	goto	u1140
  1845  001672                     u1141:
  1846  001672  EF3F  F00B         	goto	l2180
  1847  001676                     u1140:
  1848  001676                     
  1849                           ; BSR set to: 0
  1850  001676  5170               	movf	___awmod@divisor& (0+255),w,b
  1851  001678  5F6E               	subwf	___awmod@dividend& (0+255),f,b
  1852  00167A  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  1853  00167C  5B6F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1854  00167E                     l2180:
  1855                           
  1856                           ; BSR set to: 0
  1857  00167E  90D8               	bcf	status,0,c
  1858  001680  3371               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1859  001682  3370               	rrcf	___awmod@divisor& (0+255),f,b
  1860  001684                     
  1861                           ; BSR set to: 0
  1862  001684  2F72               	decfsz	___awmod@counter& (0+255),f,b
  1863  001686  EF30  F00B         	goto	l2176
  1864  00168A                     l2184:
  1865                           
  1866                           ; BSR set to: 0
  1867  00168A  5173               	movf	___awmod@sign& (0+255),w,b
  1868  00168C  B4D8               	btfsc	status,2,c
  1869  00168E  EF4B  F00B         	goto	u1151
  1870  001692  EF4D  F00B         	goto	u1150
  1871  001696                     u1151:
  1872  001696  EF51  F00B         	goto	l2188
  1873  00169A                     u1150:
  1874  00169A                     
  1875                           ; BSR set to: 0
  1876  00169A  6D6E               	negf	___awmod@dividend& (0+255),b
  1877  00169C  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  1878  00169E  B0D8               	btfsc	status,0,c
  1879  0016A0  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  1880  0016A2                     l2188:
  1881                           
  1882                           ; BSR set to: 0
  1883  0016A2  C06E  F06E         	movff	___awmod@dividend,?___awmod
  1884  0016A6  C06F  F06F         	movff	___awmod@dividend+1,?___awmod+1
  1885  0016AA                     
  1886                           ; BSR set to: 0
  1887  0016AA  0012               	return		;funcret
  1888  0016AC                     __end_of___awmod:
  1889                           	opt callstack 0
  1890                           
  1891 ;; *************** function _metToucheCombien *****************
  1892 ;; Defined at:
  1893 ;;		line 257 in file "main.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  m               2   28[BANK0 ] int 
  1898 ;;  j               2   26[BANK0 ] int 
  1899 ;;  chiffre         1   25[BANK0 ] unsigned char 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1909 ;;      Params:         0       0       0       0       0       0       0
  1910 ;;      Locals:         0       5       0       0       0       0       0
  1911 ;;      Temps:          0       3       0       0       0       0       0
  1912 ;;      Totals:         0       8       0       0       0       0       0
  1913 ;;Total ram usage:        8 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    2
  1916 ;; This function calls:
  1917 ;;		___wmul
  1918 ;;		_calculToucheCombien
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text6
  1925  00112C                     __ptext6:
  1926                           	opt callstack 0
  1927  00112C                     _metToucheCombien:
  1928                           	opt callstack 28
  1929  00112C                     
  1930                           ;main.c: 259: char chiffre = 0;
  1931  00112C  0E00               	movlw	0
  1932  00112E  0100               	movlb	0	; force () banked
  1933  001130  6F79               	movwf	metToucheCombien@chiffre& (0+255),b
  1934                           
  1935                           ;main.c: 261: for(int j = 0 ; j < 20 ; j++)
  1936  001132  0E00               	movlw	0
  1937  001134  0100               	movlb	0	; force () banked
  1938  001136  6F7B               	movwf	(metToucheCombien@j+1)& (0+255),b
  1939  001138  0E00               	movlw	0
  1940  00113A  6F7A               	movwf	metToucheCombien@j& (0+255),b
  1941  00113C                     
  1942                           ; BSR set to: 0
  1943  00113C  0100               	movlb	0	; force () banked
  1944  00113E  BF7B               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  1945  001140  EFAB  F008         	goto	u1271
  1946  001144  517B               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1947  001146  E109               	bnz	u1270
  1948  001148  0E14               	movlw	20
  1949  00114A  5D7A               	subwf	metToucheCombien@j& (0+255),w,b
  1950  00114C  A0D8               	btfss	status,0,c
  1951  00114E  EFAB  F008         	goto	u1271
  1952  001152  EFAD  F008         	goto	u1270
  1953  001156                     u1271:
  1954  001156  EFAF  F008         	goto	l2290
  1955  00115A                     u1270:
  1956  00115A  EF4F  F009         	goto	l135
  1957  00115E                     l2290:
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;main.c: 262: {;main.c: 263: for(int m = 0; m < 4 ; m++)
  1961  00115E  0E00               	movlw	0
  1962  001160  0100               	movlb	0	; force () banked
  1963  001162  6F7D               	movwf	(metToucheCombien@m+1)& (0+255),b
  1964  001164  0E00               	movlw	0
  1965  001166  6F7C               	movwf	metToucheCombien@m& (0+255),b
  1966  001168                     
  1967                           ; BSR set to: 0
  1968  001168  0100               	movlb	0	; force () banked
  1969  00116A  BF7D               	btfsc	(metToucheCombien@m+1)& (0+255),7,b
  1970  00116C  EFC1  F008         	goto	u1281
  1971  001170  517D               	movf	(metToucheCombien@m+1)& (0+255),w,b
  1972  001172  E109               	bnz	u1280
  1973  001174  0E04               	movlw	4
  1974  001176  5D7C               	subwf	metToucheCombien@m& (0+255),w,b
  1975  001178  A0D8               	btfss	status,0,c
  1976  00117A  EFC1  F008         	goto	u1281
  1977  00117E  EFC3  F008         	goto	u1280
  1978  001182                     u1281:
  1979  001182  EFC5  F008         	goto	l2296
  1980  001186                     u1280:
  1981  001186  EF3D  F009         	goto	l2308
  1982  00118A                     l2296:
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;main.c: 264: {;main.c: 265: chiffre = calculToucheCombien(m, j);
  1986  00118A  C07C  F066         	movff	metToucheCombien@m,calculToucheCombien@ligne
  1987  00118E  C07D  F067         	movff	metToucheCombien@m+1,calculToucheCombien@ligne+1
  1988  001192  C07A  F068         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1989  001196  C07B  F069         	movff	metToucheCombien@j+1,calculToucheCombien@colonne+1
  1990  00119A  ECD9  F007         	call	_calculToucheCombien	;wreg free
  1991  00119E  0100               	movlb	0	; force () banked
  1992  0011A0  6F79               	movwf	metToucheCombien@chiffre& (0+255),b
  1993  0011A2                     
  1994                           ; BSR set to: 0
  1995                           ;main.c: 268: if( chiffre != 0 && m_tabMines[m][j] != 2)
  1996  0011A2  0100               	movlb	0	; force () banked
  1997  0011A4  5179               	movf	metToucheCombien@chiffre& (0+255),w,b
  1998  0011A6  B4D8               	btfsc	status,2,c
  1999  0011A8  EFD8  F008         	goto	u1291
  2000  0011AC  EFDA  F008         	goto	u1290
  2001  0011B0                     u1291:
  2002  0011B0  EF2B  F009         	goto	l2304
  2003  0011B4                     u1290:
  2004  0011B4                     
  2005                           ; BSR set to: 0
  2006  0011B4  C07C  F060         	movff	metToucheCombien@m,___wmul@multiplier
  2007  0011B8  C07D  F061         	movff	metToucheCombien@m+1,___wmul@multiplier+1
  2008  0011BC  0E00               	movlw	0
  2009  0011BE  0100               	movlb	0	; force () banked
  2010  0011C0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2011  0011C2  0E15               	movlw	21
  2012  0011C4  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2013  0011C6  EC57  F00E         	call	___wmul	;wreg free
  2014  0011CA  0E54               	movlw	low _m_tabMines
  2015  0011CC  0100               	movlb	0	; force () banked
  2016  0011CE  6F76               	movwf	??_metToucheCombien& (0+255),b
  2017  0011D0  0E01               	movlw	high _m_tabMines
  2018  0011D2  6F77               	movwf	(??_metToucheCombien+1)& (0+255),b
  2019  0011D4  0100               	movlb	0	; force () banked
  2020  0011D6  5160               	movf	?___wmul& (0+255),w,b
  2021  0011D8  0100               	movlb	0	; force () banked
  2022  0011DA  2776               	addwf	??_metToucheCombien& (0+255),f,b
  2023  0011DC  0100               	movlb	0	; force () banked
  2024  0011DE  5161               	movf	(?___wmul+1)& (0+255),w,b
  2025  0011E0  0100               	movlb	0	; force () banked
  2026  0011E2  2377               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  2027  0011E4  0100               	movlb	0	; force () banked
  2028  0011E6  517A               	movf	metToucheCombien@j& (0+255),w,b
  2029  0011E8  0100               	movlb	0	; force () banked
  2030  0011EA  2576               	addwf	??_metToucheCombien& (0+255),w,b
  2031  0011EC  6ED9               	movwf	fsr2l,c
  2032  0011EE  0100               	movlb	0	; force () banked
  2033  0011F0  517B               	movf	(metToucheCombien@j+1)& (0+255),w,b
  2034  0011F2  0100               	movlb	0	; force () banked
  2035  0011F4  2177               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  2036  0011F6  6EDA               	movwf	fsr2h,c
  2037  0011F8  0E02               	movlw	2
  2038  0011FA  18DE               	xorwf	postinc2,w,c
  2039  0011FC  B4D8               	btfsc	status,2,c
  2040  0011FE  EF03  F009         	goto	u1301
  2041  001202  EF05  F009         	goto	u1300
  2042  001206                     u1301:
  2043  001206  EF2B  F009         	goto	l2304
  2044  00120A                     u1300:
  2045  00120A                     
  2046                           ; BSR set to: 0
  2047                           ;main.c: 269: {;main.c: 270: m_tabMines[m][j] = 48 + chiffre;
  2048  00120A  C07C  F060         	movff	metToucheCombien@m,___wmul@multiplier
  2049  00120E  C07D  F061         	movff	metToucheCombien@m+1,___wmul@multiplier+1
  2050  001212  0E00               	movlw	0
  2051  001214  0100               	movlb	0	; force () banked
  2052  001216  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2053  001218  0E15               	movlw	21
  2054  00121A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2055  00121C  EC57  F00E         	call	___wmul	;wreg free
  2056  001220  0E54               	movlw	low _m_tabMines
  2057  001222  0100               	movlb	0	; force () banked
  2058  001224  6F76               	movwf	??_metToucheCombien& (0+255),b
  2059  001226  0E01               	movlw	high _m_tabMines
  2060  001228  6F77               	movwf	(??_metToucheCombien+1)& (0+255),b
  2061  00122A  0100               	movlb	0	; force () banked
  2062  00122C  5160               	movf	?___wmul& (0+255),w,b
  2063  00122E  0100               	movlb	0	; force () banked
  2064  001230  2776               	addwf	??_metToucheCombien& (0+255),f,b
  2065  001232  0100               	movlb	0	; force () banked
  2066  001234  5161               	movf	(?___wmul+1)& (0+255),w,b
  2067  001236  0100               	movlb	0	; force () banked
  2068  001238  2377               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  2069  00123A  0100               	movlb	0	; force () banked
  2070  00123C  517A               	movf	metToucheCombien@j& (0+255),w,b
  2071  00123E  0100               	movlb	0	; force () banked
  2072  001240  2576               	addwf	??_metToucheCombien& (0+255),w,b
  2073  001242  6ED9               	movwf	fsr2l,c
  2074  001244  0100               	movlb	0	; force () banked
  2075  001246  517B               	movf	(metToucheCombien@j+1)& (0+255),w,b
  2076  001248  0100               	movlb	0	; force () banked
  2077  00124A  2177               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  2078  00124C  6EDA               	movwf	fsr2h,c
  2079  00124E  0100               	movlb	0	; force () banked
  2080  001250  5179               	movf	metToucheCombien@chiffre& (0+255),w,b
  2081  001252  0F30               	addlw	48
  2082  001254  6EDF               	movwf	indf2,c
  2083  001256                     l2304:
  2084                           
  2085                           ; BSR set to: 0
  2086  001256  0100               	movlb	0	; force () banked
  2087  001258  4B7C               	infsnz	metToucheCombien@m& (0+255),f,b
  2088  00125A  2B7D               	incf	(metToucheCombien@m+1)& (0+255),f,b
  2089  00125C                     
  2090                           ; BSR set to: 0
  2091  00125C  0100               	movlb	0	; force () banked
  2092  00125E  BF7D               	btfsc	(metToucheCombien@m+1)& (0+255),7,b
  2093  001260  EF3B  F009         	goto	u1311
  2094  001264  517D               	movf	(metToucheCombien@m+1)& (0+255),w,b
  2095  001266  E109               	bnz	u1310
  2096  001268  0E04               	movlw	4
  2097  00126A  5D7C               	subwf	metToucheCombien@m& (0+255),w,b
  2098  00126C  A0D8               	btfss	status,0,c
  2099  00126E  EF3B  F009         	goto	u1311
  2100  001272  EF3D  F009         	goto	u1310
  2101  001276                     u1311:
  2102  001276  EFC5  F008         	goto	l2296
  2103  00127A                     u1310:
  2104  00127A                     l2308:
  2105                           
  2106                           ; BSR set to: 0
  2107  00127A  0100               	movlb	0	; force () banked
  2108  00127C  4B7A               	infsnz	metToucheCombien@j& (0+255),f,b
  2109  00127E  2B7B               	incf	(metToucheCombien@j+1)& (0+255),f,b
  2110  001280                     
  2111                           ; BSR set to: 0
  2112  001280  0100               	movlb	0	; force () banked
  2113  001282  BF7B               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  2114  001284  EF4D  F009         	goto	u1321
  2115  001288  517B               	movf	(metToucheCombien@j+1)& (0+255),w,b
  2116  00128A  E109               	bnz	u1320
  2117  00128C  0E14               	movlw	20
  2118  00128E  5D7A               	subwf	metToucheCombien@j& (0+255),w,b
  2119  001290  A0D8               	btfss	status,0,c
  2120  001292  EF4D  F009         	goto	u1321
  2121  001296  EF4F  F009         	goto	u1320
  2122  00129A                     u1321:
  2123  00129A  EFAF  F008         	goto	l2290
  2124  00129E                     u1320:
  2125  00129E                     l135:
  2126                           
  2127                           ; BSR set to: 0
  2128  00129E  0012               	return		;funcret
  2129  0012A0                     __end_of_metToucheCombien:
  2130                           	opt callstack 0
  2131                           
  2132 ;; *************** function _calculToucheCombien *****************
  2133 ;; Defined at:
  2134 ;;		line 282 in file "main.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  ligne           2    6[BANK0 ] int 
  2137 ;;  colonne         2    8[BANK0 ] int 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  m               1   21[BANK0 ] char 
  2140 ;;  j               1   20[BANK0 ] char 
  2141 ;;  maxCol          1   19[BANK0 ] char 
  2142 ;;  minCol          1   18[BANK0 ] char 
  2143 ;;  maxLigne        1   17[BANK0 ] char 
  2144 ;;  minLigne        1   16[BANK0 ] char 
  2145 ;;  nombre          1   15[BANK0 ] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      unsigned char 
  2148 ;; Registers used:
  2149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2155 ;;      Params:         0       4       0       0       0       0       0
  2156 ;;      Locals:         0       7       0       0       0       0       0
  2157 ;;      Temps:          0       5       0       0       0       0       0
  2158 ;;      Totals:         0      16       0       0       0       0       0
  2159 ;;Total ram usage:       16 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    1
  2162 ;; This function calls:
  2163 ;;		___wmul
  2164 ;; This function is called by:
  2165 ;;		_metToucheCombien
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           	psect	text7
  2170  000FB2                     __ptext7:
  2171                           	opt callstack 0
  2172  000FB2                     _calculToucheCombien:
  2173                           	opt callstack 28
  2174  000FB2                     
  2175                           ;main.c: 284: unsigned char nombre = 0;
  2176  000FB2  0E00               	movlw	0
  2177  000FB4  0100               	movlb	0	; force () banked
  2178  000FB6  6F6F               	movwf	calculToucheCombien@nombre& (0+255),b
  2179  000FB8                     
  2180                           ; BSR set to: 0
  2181                           ;main.c: 285: signed char minLigne = -1;
  2182  000FB8  0100               	movlb	0	; force () banked
  2183  000FBA  6970               	setf	calculToucheCombien@minLigne& (0+255),b
  2184                           
  2185                           ;main.c: 286: signed char maxLigne = 2;
  2186  000FBC  0E02               	movlw	2
  2187  000FBE  0100               	movlb	0	; force () banked
  2188  000FC0  6F71               	movwf	calculToucheCombien@maxLigne& (0+255),b
  2189  000FC2                     
  2190                           ; BSR set to: 0
  2191                           ;main.c: 287: signed char minCol = -1;
  2192  000FC2  0100               	movlb	0	; force () banked
  2193  000FC4  6972               	setf	calculToucheCombien@minCol& (0+255),b
  2194                           
  2195                           ;main.c: 288: signed char maxCol = 2;
  2196  000FC6  0E02               	movlw	2
  2197  000FC8  0100               	movlb	0	; force () banked
  2198  000FCA  6F73               	movwf	calculToucheCombien@maxCol& (0+255),b
  2199  000FCC                     
  2200                           ; BSR set to: 0
  2201                           ;main.c: 290: if(ligne == 0)
  2202  000FCC  0100               	movlb	0	; force () banked
  2203  000FCE  5166               	movf	calculToucheCombien@ligne& (0+255),w,b
  2204  000FD0  1167               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2205  000FD2  A4D8               	btfss	status,2,c
  2206  000FD4  EFEE  F007         	goto	u911
  2207  000FD8  EFF0  F007         	goto	u910
  2208  000FDC                     u911:
  2209  000FDC  EFF2  F007         	goto	l2020
  2210  000FE0                     u910:
  2211  000FE0                     
  2212                           ; BSR set to: 0
  2213                           ;main.c: 291: minLigne++;
  2214  000FE0  0100               	movlb	0	; force () banked
  2215  000FE2  2B70               	incf	calculToucheCombien@minLigne& (0+255),f,b
  2216  000FE4                     l2020:
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;main.c: 292: if(ligne == 3)
  2220  000FE4  0E03               	movlw	3
  2221  000FE6  0100               	movlb	0	; force () banked
  2222  000FE8  1966               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  2223  000FEA  1167               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2224  000FEC  A4D8               	btfss	status,2,c
  2225  000FEE  EFFB  F007         	goto	u921
  2226  000FF2  EFFD  F007         	goto	u920
  2227  000FF6                     u921:
  2228  000FF6  EFFF  F007         	goto	l2024
  2229  000FFA                     u920:
  2230  000FFA                     
  2231                           ; BSR set to: 0
  2232                           ;main.c: 293: maxLigne--;
  2233  000FFA  0100               	movlb	0	; force () banked
  2234  000FFC  0771               	decf	calculToucheCombien@maxLigne& (0+255),f,b
  2235  000FFE                     l2024:
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;main.c: 294: if(colonne == 0)
  2239  000FFE  0100               	movlb	0	; force () banked
  2240  001000  5168               	movf	calculToucheCombien@colonne& (0+255),w,b
  2241  001002  1169               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2242  001004  A4D8               	btfss	status,2,c
  2243  001006  EF07  F008         	goto	u931
  2244  00100A  EF09  F008         	goto	u930
  2245  00100E                     u931:
  2246  00100E  EF0B  F008         	goto	l2028
  2247  001012                     u930:
  2248  001012                     
  2249                           ; BSR set to: 0
  2250                           ;main.c: 295: minCol++;
  2251  001012  0100               	movlb	0	; force () banked
  2252  001014  2B72               	incf	calculToucheCombien@minCol& (0+255),f,b
  2253  001016                     l2028:
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;main.c: 296: if(colonne == 19)
  2257  001016  0E13               	movlw	19
  2258  001018  0100               	movlb	0	; force () banked
  2259  00101A  1968               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  2260  00101C  1169               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2261  00101E  A4D8               	btfss	status,2,c
  2262  001020  EF14  F008         	goto	u941
  2263  001024  EF16  F008         	goto	u940
  2264  001028                     u941:
  2265  001028  EF18  F008         	goto	l2032
  2266  00102C                     u940:
  2267  00102C                     
  2268                           ; BSR set to: 0
  2269                           ;main.c: 297: maxCol--;
  2270  00102C  0100               	movlb	0	; force () banked
  2271  00102E  0773               	decf	calculToucheCombien@maxCol& (0+255),f,b
  2272  001030                     l2032:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;main.c: 300: for(signed char j = minCol ; j < maxCol ; j++)
  2276  001030  C072  F074         	movff	calculToucheCombien@minCol,calculToucheCombien@j
  2277  001034  EF82  F008         	goto	l2042
  2278  001038                     l143:
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;main.c: 301: {;main.c: 302: for(signed char m = minLigne; m < maxLigne ; m++)
  2282  001038  C070  F075         	movff	calculToucheCombien@minLigne,calculToucheCombien@m
  2283  00103C  EF6F  F008         	goto	l2038
  2284  001040                     l2034:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;main.c: 303: {;main.c: 304: if( m_tabMines[ligne+m][colonne+j] == 2)
  2288  001040  C074  F06A         	movff	calculToucheCombien@j,??_calculToucheCombien
  2289  001044  0100               	movlb	0	; force () banked
  2290  001046  6B6B               	clrf	(??_calculToucheCombien+1)& (0+255),b
  2291  001048  BF6A               	btfsc	??_calculToucheCombien& (0+255),7,b
  2292  00104A  076B               	decf	(??_calculToucheCombien+1)& (0+255),f,b
  2293  00104C  0100               	movlb	0	; force () banked
  2294  00104E  5175               	movf	calculToucheCombien@m& (0+255),w,b
  2295  001050  0100               	movlb	0	; force () banked
  2296  001052  6F60               	movwf	___wmul@multiplier& (0+255),b
  2297  001054  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  2298  001056  BF60               	btfsc	___wmul@multiplier& (0+255),7,b
  2299  001058  0761               	decf	(___wmul@multiplier+1)& (0+255),f,b
  2300  00105A  0E00               	movlw	0
  2301  00105C  0100               	movlb	0	; force () banked
  2302  00105E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2303  001060  0E15               	movlw	21
  2304  001062  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2305  001064  EC57  F00E         	call	___wmul	;wreg free
  2306  001068  0E54               	movlw	low _m_tabMines
  2307  00106A  0100               	movlb	0	; force () banked
  2308  00106C  6F6C               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2309  00106E  0E01               	movlw	high _m_tabMines
  2310  001070  6F6D               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2311  001072  0100               	movlb	0	; force () banked
  2312  001074  5160               	movf	?___wmul& (0+255),w,b
  2313  001076  0100               	movlb	0	; force () banked
  2314  001078  276C               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2315  00107A  0100               	movlb	0	; force () banked
  2316  00107C  5161               	movf	(?___wmul+1)& (0+255),w,b
  2317  00107E  0100               	movlb	0	; force () banked
  2318  001080  236D               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2319  001082  C066  F060         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2320  001086  C067  F061         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2321  00108A  0E00               	movlw	0
  2322  00108C  0100               	movlb	0	; force () banked
  2323  00108E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2324  001090  0E15               	movlw	21
  2325  001092  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2326  001094  EC57  F00E         	call	___wmul	;wreg free
  2327  001098  0100               	movlb	0	; force () banked
  2328  00109A  5160               	movf	?___wmul& (0+255),w,b
  2329  00109C  0100               	movlb	0	; force () banked
  2330  00109E  276C               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2331  0010A0  0100               	movlb	0	; force () banked
  2332  0010A2  5161               	movf	(?___wmul+1)& (0+255),w,b
  2333  0010A4  0100               	movlb	0	; force () banked
  2334  0010A6  236D               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2335  0010A8  516A               	movf	??_calculToucheCombien& (0+255),w,b
  2336  0010AA  276C               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2337  0010AC  516B               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2338  0010AE  236D               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2339  0010B0  0100               	movlb	0	; force () banked
  2340  0010B2  5168               	movf	calculToucheCombien@colonne& (0+255),w,b
  2341  0010B4  0100               	movlb	0	; force () banked
  2342  0010B6  256C               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2343  0010B8  6ED9               	movwf	fsr2l,c
  2344  0010BA  0100               	movlb	0	; force () banked
  2345  0010BC  5169               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2346  0010BE  0100               	movlb	0	; force () banked
  2347  0010C0  216D               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2348  0010C2  6EDA               	movwf	fsr2h,c
  2349  0010C4  0E02               	movlw	2
  2350  0010C6  18DE               	xorwf	postinc2,w,c
  2351  0010C8  A4D8               	btfss	status,2,c
  2352  0010CA  EF69  F008         	goto	u951
  2353  0010CE  EF6B  F008         	goto	u950
  2354  0010D2                     u951:
  2355  0010D2  EF6D  F008         	goto	l146
  2356  0010D6                     u950:
  2357  0010D6                     
  2358                           ; BSR set to: 0
  2359                           ;main.c: 305: {;main.c: 306: nombre++;
  2360  0010D6  0100               	movlb	0	; force () banked
  2361  0010D8  2B6F               	incf	calculToucheCombien@nombre& (0+255),f,b
  2362  0010DA                     l146:
  2363                           
  2364                           ; BSR set to: 0
  2365  0010DA  0100               	movlb	0	; force () banked
  2366  0010DC  2B75               	incf	calculToucheCombien@m& (0+255),f,b
  2367  0010DE                     l2038:
  2368                           
  2369                           ; BSR set to: 0
  2370  0010DE  0100               	movlb	0	; force () banked
  2371  0010E0  5175               	movf	calculToucheCombien@m& (0+255),w,b
  2372  0010E2  0A80               	xorlw	128
  2373  0010E4  0100               	movlb	0	; force () banked
  2374  0010E6  6F6A               	movwf	??_calculToucheCombien& (0+255),b
  2375  0010E8  0100               	movlb	0	; force () banked
  2376  0010EA  5171               	movf	calculToucheCombien@maxLigne& (0+255),w,b
  2377  0010EC  0A80               	xorlw	128
  2378  0010EE  0100               	movlb	0	; force () banked
  2379  0010F0  5D6A               	subwf	??_calculToucheCombien& (0+255),w,b
  2380  0010F2  A0D8               	btfss	status,0,c
  2381  0010F4  EF7E  F008         	goto	u961
  2382  0010F8  EF80  F008         	goto	u960
  2383  0010FC                     u961:
  2384  0010FC  EF20  F008         	goto	l2034
  2385  001100                     u960:
  2386  001100                     
  2387                           ; BSR set to: 0
  2388  001100  0100               	movlb	0	; force () banked
  2389  001102  2B74               	incf	calculToucheCombien@j& (0+255),f,b
  2390  001104                     l2042:
  2391                           
  2392                           ; BSR set to: 0
  2393  001104  0100               	movlb	0	; force () banked
  2394  001106  5174               	movf	calculToucheCombien@j& (0+255),w,b
  2395  001108  0A80               	xorlw	128
  2396  00110A  0100               	movlb	0	; force () banked
  2397  00110C  6F6A               	movwf	??_calculToucheCombien& (0+255),b
  2398  00110E  0100               	movlb	0	; force () banked
  2399  001110  5173               	movf	calculToucheCombien@maxCol& (0+255),w,b
  2400  001112  0A80               	xorlw	128
  2401  001114  0100               	movlb	0	; force () banked
  2402  001116  5D6A               	subwf	??_calculToucheCombien& (0+255),w,b
  2403  001118  A0D8               	btfss	status,0,c
  2404  00111A  EF91  F008         	goto	u971
  2405  00111E  EF93  F008         	goto	u970
  2406  001122                     u971:
  2407  001122  EF1C  F008         	goto	l143
  2408  001126                     u970:
  2409  001126                     
  2410                           ; BSR set to: 0
  2411                           ;main.c: 307: };main.c: 308: };main.c: 309: };main.c: 311: return nombre;
  2412  001126  0100               	movlb	0	; force () banked
  2413  001128  516F               	movf	calculToucheCombien@nombre& (0+255),w,b
  2414  00112A                     
  2415                           ; BSR set to: 0
  2416  00112A  0012               	return		;funcret
  2417  00112C                     __end_of_calculToucheCombien:
  2418                           	opt callstack 0
  2419                           
  2420 ;; *************** function _lcd_montreCurseur *****************
  2421 ;; Defined at:
  2422 ;;		line 412 in file "Lcd4Lignes.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;		None
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2436 ;;      Params:         0       0       0       0       0       0       0
  2437 ;;      Locals:         0       0       0       0       0       0       0
  2438 ;;      Temps:          0       0       0       0       0       0       0
  2439 ;;      Totals:         0       0       0       0       0       0       0
  2440 ;;Total ram usage:        0 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    3
  2443 ;; This function calls:
  2444 ;;		_lcd_wrCom
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text8
  2451  001D28                     __ptext8:
  2452                           	opt callstack 0
  2453  001D28                     _lcd_montreCurseur:
  2454                           	opt callstack 27
  2455  001D28                     
  2456                           ;Lcd4Lignes.c: 414: lcd_wrCom(0x0F);
  2457  001D28  0E0F               	movlw	15
  2458  001D2A  ECA8  F00C         	call	_lcd_wrCom
  2459  001D2E  0012               	return		;funcret
  2460  001D30                     __end_of_lcd_montreCurseur:
  2461                           	opt callstack 0
  2462                           
  2463 ;; *************** function _lcd_init *****************
  2464 ;; Defined at:
  2465 ;;		line 258 in file "Lcd4Lignes.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;		None
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;		None
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2479 ;;      Params:         0       0       0       0       0       0       0
  2480 ;;      Locals:         0       0       0       0       0       0       0
  2481 ;;      Temps:          0       0       0       0       0       0       0
  2482 ;;      Totals:         0       0       0       0       0       0       0
  2483 ;;Total ram usage:        0 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; Hardware stack levels required when called:    5
  2486 ;; This function calls:
  2487 ;;		_lcd_initCGRam
  2488 ;;		_lcd_resetSequence
  2489 ;;		_lcd_wrCom
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text9
  2496  001C86                     __ptext9:
  2497                           	opt callstack 0
  2498  001C86                     _lcd_init:
  2499                           	opt callstack 25
  2500  001C86                     
  2501                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  2502  001C86  ECDE  F00C         	call	_lcd_resetSequence	;wreg free
  2503                           
  2504                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  2505  001C8A  0E28               	movlw	40
  2506  001C8C  ECA8  F00C         	call	_lcd_wrCom
  2507                           
  2508                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  2509  001C90  0E0F               	movlw	15
  2510  001C92  ECA8  F00C         	call	_lcd_wrCom
  2511                           
  2512                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  2513  001C96  0E01               	movlw	1
  2514  001C98  ECA8  F00C         	call	_lcd_wrCom
  2515                           
  2516                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  2517  001C9C  0E06               	movlw	6
  2518  001C9E  ECA8  F00C         	call	_lcd_wrCom
  2519                           
  2520                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  2521  001CA2  0E80               	movlw	128
  2522  001CA4  ECA8  F00C         	call	_lcd_wrCom
  2523  001CA8                     
  2524                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  2525  001CA8  EC56  F00B         	call	_lcd_initCGRam	;wreg free
  2526  001CAC  0012               	return		;funcret
  2527  001CAE                     __end_of_lcd_init:
  2528                           	opt callstack 0
  2529                           
  2530 ;; *************** function _lcd_resetSequence *****************
  2531 ;; Defined at:
  2532 ;;		line 221 in file "Lcd4Lignes.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2546 ;;      Params:         0       0       0       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0       0       0
  2548 ;;      Temps:          0       1       0       0       0       0       0
  2549 ;;      Totals:         0       1       0       0       0       0       0
  2550 ;;Total ram usage:        1 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    1
  2553 ;; This function calls:
  2554 ;;		_lcd_ecrireDonnees
  2555 ;;		_lcd_strobeEnableBit
  2556 ;; This function is called by:
  2557 ;;		_lcd_init
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text10
  2562  0019BC                     __ptext10:
  2563                           	opt callstack 0
  2564  0019BC                     _lcd_resetSequence:
  2565                           	opt callstack 28
  2566  0019BC                     
  2567                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  2568  0019BC  0E00               	movlw	0
  2569  0019BE  6E95               	movwf	149,c	;volatile
  2570  0019C0                     
  2571                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  2572  0019C0  0E0D               	movlw	13
  2573  0019C2  0100               	movlb	0	; force () banked
  2574  0019C4  6F62               	movwf	??_lcd_resetSequence& (0+255),b
  2575  0019C6  0EFB               	movlw	251
  2576  0019C8                     u1687:
  2577  0019C8  2EE8               	decfsz	wreg,f,c
  2578  0019CA  D7FE               	bra	u1687
  2579  0019CC  2F62               	decfsz	??_lcd_resetSequence& (0+255),f,b
  2580  0019CE  D7FC               	bra	u1687
  2581  0019D0  F000 F000          	nop2	
  2582  0019D4                     
  2583                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  2584  0019D4  9080               	bcf	128,0,c	;volatile
  2585  0019D6                     
  2586                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  2587  0019D6  9280               	bcf	128,1,c	;volatile
  2588  0019D8                     
  2589                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  2590  0019D8  0E03               	movlw	3
  2591  0019DA  EC6B  F00E         	call	_lcd_ecrireDonnees
  2592  0019DE                     
  2593                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  2594  0019DE  ECA0  F00E         	call	_lcd_strobeEnableBit	;wreg free
  2595  0019E2                     
  2596                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2597  0019E2  0E03               	movlw	3
  2598  0019E4                     u1697:
  2599  0019E4  2EE8               	decfsz	wreg,f,c
  2600  0019E6  D7FE               	bra	u1697
  2601  0019E8  F000               	nop	
  2602  0019EA                     
  2603                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  2604  0019EA  0E03               	movlw	3
  2605  0019EC  EC6B  F00E         	call	_lcd_ecrireDonnees
  2606  0019F0                     
  2607                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  2608  0019F0  ECA0  F00E         	call	_lcd_strobeEnableBit	;wreg free
  2609  0019F4                     
  2610                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2611  0019F4  0E03               	movlw	3
  2612  0019F6                     u1707:
  2613  0019F6  2EE8               	decfsz	wreg,f,c
  2614  0019F8  D7FE               	bra	u1707
  2615  0019FA  F000               	nop	
  2616  0019FC                     
  2617                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  2618  0019FC  0E03               	movlw	3
  2619  0019FE  EC6B  F00E         	call	_lcd_ecrireDonnees
  2620  001A02                     
  2621                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  2622  001A02  ECA0  F00E         	call	_lcd_strobeEnableBit	;wreg free
  2623  001A06                     
  2624                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2625  001A06  0E03               	movlw	3
  2626  001A08                     u1717:
  2627  001A08  2EE8               	decfsz	wreg,f,c
  2628  001A0A  D7FE               	bra	u1717
  2629  001A0C  F000               	nop	
  2630  001A0E                     
  2631                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  2632  001A0E  0E02               	movlw	2
  2633  001A10  EC6B  F00E         	call	_lcd_ecrireDonnees
  2634  001A14                     
  2635                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  2636  001A14  ECA0  F00E         	call	_lcd_strobeEnableBit	;wreg free
  2637  001A18                     
  2638                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2639  001A18  0E03               	movlw	3
  2640  001A1A                     u1727:
  2641  001A1A  2EE8               	decfsz	wreg,f,c
  2642  001A1C  D7FE               	bra	u1727
  2643  001A1E  F000               	nop	
  2644  001A20                     
  2645                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  2646  001A20  0E0F               	movlw	15
  2647  001A22  6E95               	movwf	149,c	;volatile
  2648  001A24  0012               	return		;funcret
  2649  001A26                     __end_of_lcd_resetSequence:
  2650                           	opt callstack 0
  2651                           
  2652 ;; *************** function _lcd_initCGRam *****************
  2653 ;; Defined at:
  2654 ;;		line 417 in file "Lcd4Lignes.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  j               1    6[BANK0 ] unsigned char 
  2659 ;;  i               1    5[BANK0 ] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2669 ;;      Params:         0       0       0       0       0       0       0
  2670 ;;      Locals:         0       2       0       0       0       0       0
  2671 ;;      Temps:          0       2       0       0       0       0       0
  2672 ;;      Totals:         0       4       0       0       0       0       0
  2673 ;;Total ram usage:        4 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; Hardware stack levels required when called:    4
  2676 ;; This function calls:
  2677 ;;		_lcd_curseurHome
  2678 ;;		_lcd_wrCom
  2679 ;;		_lcd_wrData
  2680 ;; This function is called by:
  2681 ;;		_lcd_init
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text11
  2686  0016AC                     __ptext11:
  2687                           	opt callstack 0
  2688  0016AC                     _lcd_initCGRam:
  2689                           	opt callstack 25
  2690  0016AC                     
  2691                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2692  0016AC  0E40               	movlw	64
  2693  0016AE  ECA8  F00C         	call	_lcd_wrCom
  2694  0016B2                     
  2695                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2696  0016B2  0E00               	movlw	0
  2697  0016B4  0100               	movlb	0	; force () banked
  2698  0016B6  6F65               	movwf	lcd_initCGRam@i& (0+255),b
  2699  0016B8                     
  2700                           ; BSR set to: 0
  2701  0016B8  0E07               	movlw	7
  2702  0016BA  0100               	movlb	0	; force () banked
  2703  0016BC  6565               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2704  0016BE  EF63  F00B         	goto	u1061
  2705  0016C2  EF65  F00B         	goto	u1060
  2706  0016C6                     u1061:
  2707  0016C6  EF67  F00B         	goto	l2138
  2708  0016CA                     u1060:
  2709  0016CA  EFA4  F00B         	goto	l2154
  2710  0016CE                     l2138:
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2714  0016CE  0E00               	movlw	0
  2715  0016D0  0100               	movlb	0	; force () banked
  2716  0016D2  6F66               	movwf	lcd_initCGRam@j& (0+255),b
  2717  0016D4                     
  2718                           ; BSR set to: 0
  2719  0016D4  0E07               	movlw	7
  2720  0016D6  0100               	movlb	0	; force () banked
  2721  0016D8  6566               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2722  0016DA  EF71  F00B         	goto	u1071
  2723  0016DE  EF73  F00B         	goto	u1070
  2724  0016E2                     u1071:
  2725  0016E2  EF75  F00B         	goto	l2144
  2726  0016E6                     u1070:
  2727  0016E6  EF99  F00B         	goto	l2150
  2728  0016EA                     l2144:
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2732  0016EA  0100               	movlb	0	; force () banked
  2733  0016EC  5165               	movf	lcd_initCGRam@i& (0+255),w,b
  2734  0016EE  0D08               	mullw	8
  2735  0016F0  0EA8               	movlw	low _matCGRAM
  2736  0016F2  0100               	movlb	0	; force () banked
  2737  0016F4  6F63               	movwf	??_lcd_initCGRam& (0+255),b
  2738  0016F6  0E01               	movlw	high _matCGRAM
  2739  0016F8  6F64               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2740  0016FA  50F3               	movf	243,w,c
  2741  0016FC  2763               	addwf	??_lcd_initCGRam& (0+255),f,b
  2742  0016FE  50F4               	movf	244,w,c
  2743  001700  2364               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2744  001702  0100               	movlb	0	; force () banked
  2745  001704  5166               	movf	lcd_initCGRam@j& (0+255),w,b
  2746  001706  0100               	movlb	0	; force () banked
  2747  001708  2563               	addwf	??_lcd_initCGRam& (0+255),w,b
  2748  00170A  6ED9               	movwf	fsr2l,c
  2749  00170C  0100               	movlb	0	; force () banked
  2750  00170E  0E00               	movlw	0
  2751  001710  0100               	movlb	0	; force () banked
  2752  001712  2164               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2753  001714  6EDA               	movwf	fsr2h,c
  2754  001716  50DF               	movf	indf2,w,c
  2755  001718  EC13  F00E         	call	_lcd_wrData
  2756  00171C  0100               	movlb	0	; force () banked
  2757  00171E  2B66               	incf	lcd_initCGRam@j& (0+255),f,b
  2758  001720                     
  2759                           ; BSR set to: 0
  2760  001720  0E07               	movlw	7
  2761  001722  0100               	movlb	0	; force () banked
  2762  001724  6566               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2763  001726  EF97  F00B         	goto	u1081
  2764  00172A  EF99  F00B         	goto	u1080
  2765  00172E                     u1081:
  2766  00172E  EF75  F00B         	goto	l2144
  2767  001732                     u1080:
  2768  001732                     l2150:
  2769                           
  2770                           ; BSR set to: 0
  2771  001732  0100               	movlb	0	; force () banked
  2772  001734  2B65               	incf	lcd_initCGRam@i& (0+255),f,b
  2773  001736                     
  2774                           ; BSR set to: 0
  2775  001736  0E07               	movlw	7
  2776  001738  0100               	movlb	0	; force () banked
  2777  00173A  6565               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2778  00173C  EFA2  F00B         	goto	u1091
  2779  001740  EFA4  F00B         	goto	u1090
  2780  001744                     u1091:
  2781  001744  EF67  F00B         	goto	l2138
  2782  001748                     u1090:
  2783  001748                     l2154:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2787  001748  EC98  F00E         	call	_lcd_curseurHome	;wreg free
  2788  00174C  0012               	return		;funcret
  2789  00174E                     __end_of_lcd_initCGRam:
  2790                           	opt callstack 0
  2791                           
  2792 ;; *************** function _lcd_curseurHome *****************
  2793 ;; Defined at:
  2794 ;;		line 288 in file "Lcd4Lignes.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2808 ;;      Params:         0       0       0       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0
  2811 ;;      Totals:         0       0       0       0       0       0       0
  2812 ;;Total ram usage:        0 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    3
  2815 ;; This function calls:
  2816 ;;		_lcd_wrCom
  2817 ;; This function is called by:
  2818 ;;		_lcd_initCGRam
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text12
  2823  001D30                     __ptext12:
  2824                           	opt callstack 0
  2825  001D30                     _lcd_curseurHome:
  2826                           	opt callstack 25
  2827  001D30                     
  2828                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2829  001D30  0E02               	movlw	2
  2830  001D32  ECA8  F00C         	call	_lcd_wrCom
  2831  001D36  0012               	return		;funcret
  2832  001D38                     __end_of_lcd_curseurHome:
  2833                           	opt callstack 0
  2834                           
  2835 ;; *************** function _lcd_cacheCurseur *****************
  2836 ;; Defined at:
  2837 ;;		line 401 in file "Lcd4Lignes.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2851 ;;      Params:         0       0       0       0       0       0       0
  2852 ;;      Locals:         0       0       0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0
  2854 ;;      Totals:         0       0       0       0       0       0       0
  2855 ;;Total ram usage:        0 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    3
  2858 ;; This function calls:
  2859 ;;		_lcd_wrCom
  2860 ;; This function is called by:
  2861 ;;		_main
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text13
  2866  001D38                     __ptext13:
  2867                           	opt callstack 0
  2868  001D38                     _lcd_cacheCurseur:
  2869                           	opt callstack 27
  2870  001D38                     
  2871                           ;Lcd4Lignes.c: 403: lcd_wrCom(0x0C);
  2872  001D38  0E0C               	movlw	12
  2873  001D3A  ECA8  F00C         	call	_lcd_wrCom
  2874  001D3E  0012               	return		;funcret
  2875  001D40                     __end_of_lcd_cacheCurseur:
  2876                           	opt callstack 0
  2877                           
  2878 ;; *************** function _initialisation *****************
  2879 ;; Defined at:
  2880 ;;		line 488 in file "main.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		wreg, status,2, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2894 ;;      Params:         0       0       0       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0       0       0
  2897 ;;      Totals:         0       0       0       0       0       0       0
  2898 ;;Total ram usage:        0 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    1
  2901 ;; This function calls:
  2902 ;;		_srand
  2903 ;; This function is called by:
  2904 ;;		_main
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text14
  2909  001BF2                     __ptext14:
  2910                           	opt callstack 0
  2911  001BF2                     _initialisation:
  2912                           	opt callstack 29
  2913  001BF2                     
  2914                           ;main.c: 490: TRISD = 0;
  2915  001BF2  0E00               	movlw	0
  2916  001BF4  6E95               	movwf	149,c	;volatile
  2917                           
  2918                           ;main.c: 492: ANSELH = 0;
  2919  001BF6  0E00               	movlw	0
  2920  001BF8  6E7F               	movwf	127,c	;volatile
  2921  001BFA                     
  2922                           ;main.c: 493: TRISB = 0xFF;
  2923  001BFA  6893               	setf	147,c	;volatile
  2924                           
  2925                           ;main.c: 495: ANSEL = 0;
  2926  001BFC  0E00               	movlw	0
  2927  001BFE  6E7E               	movwf	126,c	;volatile
  2928                           
  2929                           ;main.c: 496: TRISA = 0;
  2930  001C00  0E00               	movlw	0
  2931  001C02  6E92               	movwf	146,c	;volatile
  2932  001C04                     
  2933                           ;main.c: 500: T1CONbits.TMR1ON = 1;
  2934  001C04  80CD               	bsf	205,0,c	;volatile
  2935  001C06                     
  2936                           ;main.c: 501: srand(TMR1);
  2937  001C06  CFCE F060          	movff	4046,srand@x	;volatile
  2938  001C0A  CFCF F061          	movff	4047,srand@x+1	;volatile
  2939  001C0E  EC85  F00E         	call	_srand	;wreg free
  2940  001C12                     
  2941                           ;main.c: 504: ANSELbits.ANS7 = 1;
  2942  001C12  8E7E               	bsf	126,7,c	;volatile
  2943  001C14                     
  2944                           ;main.c: 506: ADCON0bits.ADON = 1;
  2945  001C14  80C2               	bsf	194,0,c	;volatile
  2946  001C16                     
  2947                           ;main.c: 507: ADCON1 = 0;
  2948  001C16  0E00               	movlw	0
  2949  001C18  6EC1               	movwf	193,c	;volatile
  2950  001C1A                     
  2951                           ;main.c: 509: ADCON2bits.ADFM = 0;
  2952  001C1A  9EC0               	bcf	192,7,c	;volatile
  2953  001C1C                     
  2954                           ;main.c: 510: ADCON2bits.ACQT = 0;
  2955  001C1C  0EC7               	movlw	-57
  2956  001C1E  16C0               	andwf	192,f,c	;volatile
  2957  001C20                     
  2958                           ;main.c: 511: ADCON2bits.ADCS = 0;
  2959  001C20  0EF8               	movlw	-8
  2960  001C22  16C0               	andwf	192,f,c	;volatile
  2961  001C24  0012               	return		;funcret
  2962  001C26                     __end_of_initialisation:
  2963                           	opt callstack 0
  2964                           
  2965 ;; *************** function _srand *****************
  2966 ;; Defined at:
  2967 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  x               2    0[BANK0 ] unsigned int 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;		None
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      void 
  2974 ;; Registers used:
  2975 ;;		status,2
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2981 ;;      Params:         0       2       0       0       0       0       0
  2982 ;;      Locals:         0       0       0       0       0       0       0
  2983 ;;      Temps:          0       0       0       0       0       0       0
  2984 ;;      Totals:         0       2       0       0       0       0       0
  2985 ;;Total ram usage:        2 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_initialisation
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text15
  2995  001D0A                     __ptext15:
  2996                           	opt callstack 0
  2997  001D0A                     _srand:
  2998                           	opt callstack 29
  2999  001D0A  C060  F0F3         	movff	srand@x,_randx
  3000  001D0E  C061  F0F4         	movff	srand@x+1,_randx+1
  3001  001D12  0100               	movlb	0	; () banked
  3002  001D14  6BF5               	clrf	(_randx+2)& (0+255),b
  3003  001D16  6BF6               	clrf	(_randx+3)& (0+255),b
  3004  001D18                     
  3005                           ; BSR set to: 0
  3006  001D18  0012               	return		;funcret
  3007  001D1A                     __end_of_srand:
  3008                           	opt callstack 0
  3009                           
  3010 ;; *************** function _initTabVue *****************
  3011 ;; Defined at:
  3012 ;;		line 199 in file "main.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  k               2   10[BANK0 ] int 
  3017 ;;  i               2    8[BANK0 ] int 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3027 ;;      Params:         0       0       0       0       0       0       0
  3028 ;;      Locals:         0       4       0       0       0       0       0
  3029 ;;      Temps:          0       2       0       0       0       0       0
  3030 ;;      Totals:         0       6       0       0       0       0       0
  3031 ;;Total ram usage:        6 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    1
  3034 ;; This function calls:
  3035 ;;		___wmul
  3036 ;; This function is called by:
  3037 ;;		_main
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text16
  3042  001510                     __ptext16:
  3043                           	opt callstack 0
  3044  001510                     _initTabVue:
  3045                           	opt callstack 29
  3046  001510                     
  3047                           ;main.c: 201: for(int i = 0 ; i < 4 ; i++)
  3048  001510  0E00               	movlw	0
  3049  001512  0100               	movlb	0	; force () banked
  3050  001514  6F69               	movwf	(initTabVue@i+1)& (0+255),b
  3051  001516  0E00               	movlw	0
  3052  001518  6F68               	movwf	initTabVue@i& (0+255),b
  3053  00151A                     
  3054                           ; BSR set to: 0
  3055  00151A  0100               	movlb	0	; force () banked
  3056  00151C  BF69               	btfsc	(initTabVue@i+1)& (0+255),7,b
  3057  00151E  EF9A  F00A         	goto	u1171
  3058  001522  5169               	movf	(initTabVue@i+1)& (0+255),w,b
  3059  001524  E109               	bnz	u1170
  3060  001526  0E04               	movlw	4
  3061  001528  5D68               	subwf	initTabVue@i& (0+255),w,b
  3062  00152A  A0D8               	btfss	status,0,c
  3063  00152C  EF9A  F00A         	goto	u1171
  3064  001530  EF9C  F00A         	goto	u1170
  3065  001534                     u1171:
  3066  001534  EF9E  F00A         	goto	l2234
  3067  001538                     u1170:
  3068  001538  EFFC  F00A         	goto	l115
  3069  00153C                     l2234:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;main.c: 202: {;main.c: 203: for(int k = 0 ; k < 20 ; k++)
  3073  00153C  0E00               	movlw	0
  3074  00153E  0100               	movlb	0	; force () banked
  3075  001540  6F6B               	movwf	(initTabVue@k+1)& (0+255),b
  3076  001542  0E00               	movlw	0
  3077  001544  6F6A               	movwf	initTabVue@k& (0+255),b
  3078  001546                     
  3079                           ; BSR set to: 0
  3080  001546  0100               	movlb	0	; force () banked
  3081  001548  BF6B               	btfsc	(initTabVue@k+1)& (0+255),7,b
  3082  00154A  EFB0  F00A         	goto	u1181
  3083  00154E  516B               	movf	(initTabVue@k+1)& (0+255),w,b
  3084  001550  E109               	bnz	u1180
  3085  001552  0E14               	movlw	20
  3086  001554  5D6A               	subwf	initTabVue@k& (0+255),w,b
  3087  001556  A0D8               	btfss	status,0,c
  3088  001558  EFB0  F00A         	goto	u1181
  3089  00155C  EFB2  F00A         	goto	u1180
  3090  001560                     u1181:
  3091  001560  EFB4  F00A         	goto	l2240
  3092  001564                     u1180:
  3093  001564  EFEA  F00A         	goto	l2246
  3094  001568                     l2240:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;main.c: 204: {;main.c: 205: m_tabVue[i][k] = 1;
  3098  001568  C068  F060         	movff	initTabVue@i,___wmul@multiplier
  3099  00156C  C069  F061         	movff	initTabVue@i+1,___wmul@multiplier+1
  3100  001570  0E00               	movlw	0
  3101  001572  0100               	movlb	0	; force () banked
  3102  001574  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3103  001576  0E15               	movlw	21
  3104  001578  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3105  00157A  EC57  F00E         	call	___wmul	;wreg free
  3106  00157E  0E00               	movlw	low _m_tabVue
  3107  001580  0100               	movlb	0	; force () banked
  3108  001582  6F66               	movwf	??_initTabVue& (0+255),b
  3109  001584  0E01               	movlw	high _m_tabVue
  3110  001586  6F67               	movwf	(??_initTabVue+1)& (0+255),b
  3111  001588  0100               	movlb	0	; force () banked
  3112  00158A  5160               	movf	?___wmul& (0+255),w,b
  3113  00158C  0100               	movlb	0	; force () banked
  3114  00158E  2766               	addwf	??_initTabVue& (0+255),f,b
  3115  001590  0100               	movlb	0	; force () banked
  3116  001592  5161               	movf	(?___wmul+1)& (0+255),w,b
  3117  001594  0100               	movlb	0	; force () banked
  3118  001596  2367               	addwfc	(??_initTabVue+1)& (0+255),f,b
  3119  001598  0100               	movlb	0	; force () banked
  3120  00159A  516A               	movf	initTabVue@k& (0+255),w,b
  3121  00159C  0100               	movlb	0	; force () banked
  3122  00159E  2566               	addwf	??_initTabVue& (0+255),w,b
  3123  0015A0  6ED9               	movwf	fsr2l,c
  3124  0015A2  0100               	movlb	0	; force () banked
  3125  0015A4  516B               	movf	(initTabVue@k+1)& (0+255),w,b
  3126  0015A6  0100               	movlb	0	; force () banked
  3127  0015A8  2167               	addwfc	(??_initTabVue+1)& (0+255),w,b
  3128  0015AA  6EDA               	movwf	fsr2h,c
  3129  0015AC  0E01               	movlw	1
  3130  0015AE  6EDF               	movwf	indf2,c
  3131  0015B0                     
  3132                           ; BSR set to: 0
  3133  0015B0  0100               	movlb	0	; force () banked
  3134  0015B2  4B6A               	infsnz	initTabVue@k& (0+255),f,b
  3135  0015B4  2B6B               	incf	(initTabVue@k+1)& (0+255),f,b
  3136  0015B6                     
  3137                           ; BSR set to: 0
  3138  0015B6  0100               	movlb	0	; force () banked
  3139  0015B8  BF6B               	btfsc	(initTabVue@k+1)& (0+255),7,b
  3140  0015BA  EFE8  F00A         	goto	u1191
  3141  0015BE  516B               	movf	(initTabVue@k+1)& (0+255),w,b
  3142  0015C0  E109               	bnz	u1190
  3143  0015C2  0E14               	movlw	20
  3144  0015C4  5D6A               	subwf	initTabVue@k& (0+255),w,b
  3145  0015C6  A0D8               	btfss	status,0,c
  3146  0015C8  EFE8  F00A         	goto	u1191
  3147  0015CC  EFEA  F00A         	goto	u1190
  3148  0015D0                     u1191:
  3149  0015D0  EFB4  F00A         	goto	l2240
  3150  0015D4                     u1190:
  3151  0015D4                     l2246:
  3152                           
  3153                           ; BSR set to: 0
  3154  0015D4  0100               	movlb	0	; force () banked
  3155  0015D6  4B68               	infsnz	initTabVue@i& (0+255),f,b
  3156  0015D8  2B69               	incf	(initTabVue@i+1)& (0+255),f,b
  3157  0015DA                     
  3158                           ; BSR set to: 0
  3159  0015DA  0100               	movlb	0	; force () banked
  3160  0015DC  BF69               	btfsc	(initTabVue@i+1)& (0+255),7,b
  3161  0015DE  EFFA  F00A         	goto	u1201
  3162  0015E2  5169               	movf	(initTabVue@i+1)& (0+255),w,b
  3163  0015E4  E109               	bnz	u1200
  3164  0015E6  0E04               	movlw	4
  3165  0015E8  5D68               	subwf	initTabVue@i& (0+255),w,b
  3166  0015EA  A0D8               	btfss	status,0,c
  3167  0015EC  EFFA  F00A         	goto	u1201
  3168  0015F0  EFFC  F00A         	goto	u1200
  3169  0015F4                     u1201:
  3170  0015F4  EF9E  F00A         	goto	l2234
  3171  0015F8                     u1200:
  3172  0015F8                     l115:
  3173                           
  3174                           ; BSR set to: 0
  3175  0015F8  0012               	return		;funcret
  3176  0015FA                     __end_of_initTabVue:
  3177                           	opt callstack 0
  3178                           
  3179 ;; *************** function _gagne *****************
  3180 ;; Defined at:
  3181 ;;		line 430 in file "main.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  pMines          2    6[BANK0 ] PTR int 
  3184 ;;		 -> main@nbMines(2), 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  k               2   15[BANK0 ] int 
  3187 ;;  i               2   13[BANK0 ] int 
  3188 ;;  nbCache         2   11[BANK0 ] int 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      unsigned char 
  3191 ;; Registers used:
  3192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3198 ;;      Params:         0       2       0       0       0       0       0
  3199 ;;      Locals:         0       6       0       0       0       0       0
  3200 ;;      Temps:          0       3       0       0       0       0       0
  3201 ;;      Totals:         0      11       0       0       0       0       0
  3202 ;;Total ram usage:       11 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    1
  3205 ;; This function calls:
  3206 ;;		___wmul
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text17
  3213  0012A0                     __ptext17:
  3214                           	opt callstack 0
  3215  0012A0                     _gagne:
  3216                           	opt callstack 29
  3217  0012A0                     
  3218                           ;main.c: 432: int nbCache = 0;
  3219  0012A0  0E00               	movlw	0
  3220  0012A2  0100               	movlb	0	; force () banked
  3221  0012A4  6F6C               	movwf	(gagne@nbCache+1)& (0+255),b
  3222  0012A6  0E00               	movlw	0
  3223  0012A8  6F6B               	movwf	gagne@nbCache& (0+255),b
  3224                           
  3225                           ;main.c: 434: for(int i = 0 ; i < 4 ; i++)
  3226  0012AA  0E00               	movlw	0
  3227  0012AC  0100               	movlb	0	; force () banked
  3228  0012AE  6F6E               	movwf	(gagne@i+1)& (0+255),b
  3229  0012B0  0E00               	movlw	0
  3230  0012B2  6F6D               	movwf	gagne@i& (0+255),b
  3231  0012B4                     
  3232                           ; BSR set to: 0
  3233  0012B4  0100               	movlb	0	; force () banked
  3234  0012B6  BF6E               	btfsc	(gagne@i+1)& (0+255),7,b
  3235  0012B8  EF67  F009         	goto	u1451
  3236  0012BC  516E               	movf	(gagne@i+1)& (0+255),w,b
  3237  0012BE  E109               	bnz	u1450
  3238  0012C0  0E04               	movlw	4
  3239  0012C2  5D6D               	subwf	gagne@i& (0+255),w,b
  3240  0012C4  A0D8               	btfss	status,0,c
  3241  0012C6  EF67  F009         	goto	u1451
  3242  0012CA  EF69  F009         	goto	u1450
  3243  0012CE                     u1451:
  3244  0012CE  EF6B  F009         	goto	l2382
  3245  0012D2                     u1450:
  3246  0012D2  EFD2  F009         	goto	l2398
  3247  0012D6                     l2382:
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;main.c: 435: {;main.c: 436: for(int k =0 ; k < 20 ; k++)
  3251  0012D6  0E00               	movlw	0
  3252  0012D8  0100               	movlb	0	; force () banked
  3253  0012DA  6F70               	movwf	(gagne@k+1)& (0+255),b
  3254  0012DC  0E00               	movlw	0
  3255  0012DE  6F6F               	movwf	gagne@k& (0+255),b
  3256  0012E0                     
  3257                           ; BSR set to: 0
  3258  0012E0  0100               	movlb	0	; force () banked
  3259  0012E2  BF70               	btfsc	(gagne@k+1)& (0+255),7,b
  3260  0012E4  EF7D  F009         	goto	u1461
  3261  0012E8  5170               	movf	(gagne@k+1)& (0+255),w,b
  3262  0012EA  E109               	bnz	u1460
  3263  0012EC  0E14               	movlw	20
  3264  0012EE  5D6F               	subwf	gagne@k& (0+255),w,b
  3265  0012F0  A0D8               	btfss	status,0,c
  3266  0012F2  EF7D  F009         	goto	u1461
  3267  0012F6  EF7F  F009         	goto	u1460
  3268  0012FA                     u1461:
  3269  0012FA  EF81  F009         	goto	l2388
  3270  0012FE                     u1460:
  3271  0012FE  EFC0  F009         	goto	l2394
  3272  001302                     l2388:
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;main.c: 437: {;main.c: 438: if(m_tabVue[i][k] == 1)
  3276  001302  C06D  F060         	movff	gagne@i,___wmul@multiplier
  3277  001306  C06E  F061         	movff	gagne@i+1,___wmul@multiplier+1
  3278  00130A  0E00               	movlw	0
  3279  00130C  0100               	movlb	0	; force () banked
  3280  00130E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3281  001310  0E15               	movlw	21
  3282  001312  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3283  001314  EC57  F00E         	call	___wmul	;wreg free
  3284  001318  0E00               	movlw	low _m_tabVue
  3285  00131A  0100               	movlb	0	; force () banked
  3286  00131C  6F68               	movwf	??_gagne& (0+255),b
  3287  00131E  0E01               	movlw	high _m_tabVue
  3288  001320  6F69               	movwf	(??_gagne+1)& (0+255),b
  3289  001322  0100               	movlb	0	; force () banked
  3290  001324  5160               	movf	?___wmul& (0+255),w,b
  3291  001326  0100               	movlb	0	; force () banked
  3292  001328  2768               	addwf	??_gagne& (0+255),f,b
  3293  00132A  0100               	movlb	0	; force () banked
  3294  00132C  5161               	movf	(?___wmul+1)& (0+255),w,b
  3295  00132E  0100               	movlb	0	; force () banked
  3296  001330  2369               	addwfc	(??_gagne+1)& (0+255),f,b
  3297  001332  0100               	movlb	0	; force () banked
  3298  001334  516F               	movf	gagne@k& (0+255),w,b
  3299  001336  0100               	movlb	0	; force () banked
  3300  001338  2568               	addwf	??_gagne& (0+255),w,b
  3301  00133A  6ED9               	movwf	fsr2l,c
  3302  00133C  0100               	movlb	0	; force () banked
  3303  00133E  5170               	movf	(gagne@k+1)& (0+255),w,b
  3304  001340  0100               	movlb	0	; force () banked
  3305  001342  2169               	addwfc	(??_gagne+1)& (0+255),w,b
  3306  001344  6EDA               	movwf	fsr2h,c
  3307  001346  04DE               	decf	postinc2,w,c
  3308  001348  A4D8               	btfss	status,2,c
  3309  00134A  EFA9  F009         	goto	u1471
  3310  00134E  EFAB  F009         	goto	u1470
  3311  001352                     u1471:
  3312  001352  EFAE  F009         	goto	l188
  3313  001356                     u1470:
  3314  001356                     
  3315                           ; BSR set to: 0
  3316                           ;main.c: 439: nbCache++;
  3317  001356  0100               	movlb	0	; force () banked
  3318  001358  4B6B               	infsnz	gagne@nbCache& (0+255),f,b
  3319  00135A  2B6C               	incf	(gagne@nbCache+1)& (0+255),f,b
  3320  00135C                     l188:
  3321                           
  3322                           ; BSR set to: 0
  3323  00135C  0100               	movlb	0	; force () banked
  3324  00135E  4B6F               	infsnz	gagne@k& (0+255),f,b
  3325  001360  2B70               	incf	(gagne@k+1)& (0+255),f,b
  3326  001362                     
  3327                           ; BSR set to: 0
  3328  001362  0100               	movlb	0	; force () banked
  3329  001364  BF70               	btfsc	(gagne@k+1)& (0+255),7,b
  3330  001366  EFBE  F009         	goto	u1481
  3331  00136A  5170               	movf	(gagne@k+1)& (0+255),w,b
  3332  00136C  E109               	bnz	u1480
  3333  00136E  0E14               	movlw	20
  3334  001370  5D6F               	subwf	gagne@k& (0+255),w,b
  3335  001372  A0D8               	btfss	status,0,c
  3336  001374  EFBE  F009         	goto	u1481
  3337  001378  EFC0  F009         	goto	u1480
  3338  00137C                     u1481:
  3339  00137C  EF81  F009         	goto	l2388
  3340  001380                     u1480:
  3341  001380                     l2394:
  3342                           
  3343                           ; BSR set to: 0
  3344  001380  0100               	movlb	0	; force () banked
  3345  001382  4B6D               	infsnz	gagne@i& (0+255),f,b
  3346  001384  2B6E               	incf	(gagne@i+1)& (0+255),f,b
  3347  001386                     
  3348                           ; BSR set to: 0
  3349  001386  0100               	movlb	0	; force () banked
  3350  001388  BF6E               	btfsc	(gagne@i+1)& (0+255),7,b
  3351  00138A  EFD0  F009         	goto	u1491
  3352  00138E  516E               	movf	(gagne@i+1)& (0+255),w,b
  3353  001390  E109               	bnz	u1490
  3354  001392  0E04               	movlw	4
  3355  001394  5D6D               	subwf	gagne@i& (0+255),w,b
  3356  001396  A0D8               	btfss	status,0,c
  3357  001398  EFD0  F009         	goto	u1491
  3358  00139C  EFD2  F009         	goto	u1490
  3359  0013A0                     u1491:
  3360  0013A0  EF6B  F009         	goto	l2382
  3361  0013A4                     u1490:
  3362  0013A4                     l2398:
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;main.c: 440: };main.c: 441: };main.c: 443: if(nbCache == *pMines)
  3366  0013A4  C066  FFD9         	movff	gagne@pMines,fsr2l
  3367  0013A8  C067  FFDA         	movff	gagne@pMines+1,fsr2h
  3368  0013AC  0100               	movlb	0	; force () banked
  3369  0013AE  516B               	movf	gagne@nbCache& (0+255),w,b
  3370  0013B0  18DE               	xorwf	postinc2,w,c
  3371  0013B2  E107               	bnz	u1501
  3372  0013B4  516C               	movf	(gagne@nbCache+1)& (0+255),w,b
  3373  0013B6  18DE               	xorwf	postinc2,w,c
  3374  0013B8  A4D8               	btfss	status,2,c
  3375  0013BA  EFE1  F009         	goto	u1501
  3376  0013BE  EFE3  F009         	goto	u1500
  3377  0013C2                     u1501:
  3378  0013C2  EFED  F009         	goto	l2408
  3379  0013C6                     u1500:
  3380  0013C6                     
  3381                           ; BSR set to: 0
  3382                           ;main.c: 444: {;main.c: 445: (*pMines)++;
  3383  0013C6  C066  FFD9         	movff	gagne@pMines,fsr2l
  3384  0013CA  C067  FFDA         	movff	gagne@pMines+1,fsr2h
  3385  0013CE  2ADE               	incf	postinc2,f,c
  3386  0013D0  0E00               	movlw	0
  3387  0013D2  22DD               	addwfc	postdec2,f,c
  3388  0013D4                     
  3389                           ; BSR set to: 0
  3390                           ;main.c: 446: return 1;
  3391  0013D4  0E01               	movlw	1
  3392  0013D6  EFEE  F009         	goto	l190
  3393  0013DA                     l2408:
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;main.c: 448: else;main.c: 449: return 0;
  3397  0013DA  0E00               	movlw	0
  3398  0013DC                     l190:
  3399                           
  3400                           ; BSR set to: 0
  3401  0013DC  0012               	return		;funcret
  3402  0013DE                     __end_of_gagne:
  3403                           	opt callstack 0
  3404                           
  3405 ;; *************** function _deplace *****************
  3406 ;; Defined at:
  3407 ;;		line 320 in file "main.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  x               2    5[BANK0 ] PTR unsigned char 
  3410 ;;		 -> main@posX(2), 
  3411 ;;  y               2    7[BANK0 ] PTR unsigned char 
  3412 ;;		 -> main@posY(2), 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  tensionY        2   12[BANK0 ] int 
  3415 ;;  tensionX        2   10[BANK0 ] int 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3425 ;;      Params:         0       4       0       0       0       0       0
  3426 ;;      Locals:         0       4       0       0       0       0       0
  3427 ;;      Temps:          0       1       0       0       0       0       0
  3428 ;;      Totals:         0       9       0       0       0       0       0
  3429 ;;Total ram usage:        9 bytes
  3430 ;; Hardware stack levels used:    1
  3431 ;; Hardware stack levels required when called:    4
  3432 ;; This function calls:
  3433 ;;		_getAnalog
  3434 ;;		_lcd_gotoXY
  3435 ;; This function is called by:
  3436 ;;		_main
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text18
  3441  000DF4                     __ptext18:
  3442                           	opt callstack 0
  3443  000DF4                     _deplace:
  3444                           	opt callstack 26
  3445  000DF4                     
  3446                           ;main.c: 323: int tensionX;;main.c: 324: int tensionY;;main.c: 326: tensionX = getAnalog
      +                          (7);
  3447  000DF4  0E07               	movlw	7
  3448  000DF6  EC2D  F00E         	call	_getAnalog
  3449  000DFA  0100               	movlb	0	; force () banked
  3450  000DFC  6F69               	movwf	??_deplace& (0+255),b
  3451  000DFE  5169               	movf	??_deplace& (0+255),w,b
  3452  000E00  0100               	movlb	0	; force () banked
  3453  000E02  6F6A               	movwf	deplace@tensionX& (0+255),b
  3454  000E04  6B6B               	clrf	(deplace@tensionX+1)& (0+255),b
  3455                           
  3456                           ;main.c: 327: tensionY = getAnalog(6);
  3457  000E06  0E06               	movlw	6
  3458  000E08  EC2D  F00E         	call	_getAnalog
  3459  000E0C  0100               	movlb	0	; force () banked
  3460  000E0E  6F69               	movwf	??_deplace& (0+255),b
  3461  000E10  5169               	movf	??_deplace& (0+255),w,b
  3462  000E12  0100               	movlb	0	; force () banked
  3463  000E14  6F6C               	movwf	deplace@tensionY& (0+255),b
  3464  000E16  6B6D               	clrf	(deplace@tensionY+1)& (0+255),b
  3465  000E18                     
  3466                           ; BSR set to: 0
  3467                           ;main.c: 330: if(tensionX > 200)
  3468  000E18  0100               	movlb	0	; force () banked
  3469  000E1A  BF6B               	btfsc	(deplace@tensionX+1)& (0+255),7,b
  3470  000E1C  EF19  F007         	goto	u1351
  3471  000E20  516B               	movf	(deplace@tensionX+1)& (0+255),w,b
  3472  000E22  E109               	bnz	u1350
  3473  000E24  0EC9               	movlw	201
  3474  000E26  5D6A               	subwf	deplace@tensionX& (0+255),w,b
  3475  000E28  A0D8               	btfss	status,0,c
  3476  000E2A  EF19  F007         	goto	u1351
  3477  000E2E  EF1B  F007         	goto	u1350
  3478  000E32                     u1351:
  3479  000E32  EF2A  F007         	goto	l2334
  3480  000E36                     u1350:
  3481  000E36                     
  3482                           ; BSR set to: 0
  3483                           ;main.c: 331: {;main.c: 332: *x = *x + 1;
  3484  000E36  C065  FFD9         	movff	deplace@x,fsr2l
  3485  000E3A  C066  FFDA         	movff	deplace@x+1,fsr2h
  3486  000E3E  50DF               	movf	indf2,w,c
  3487  000E40  0100               	movlb	0	; force () banked
  3488  000E42  6F69               	movwf	??_deplace& (0+255),b
  3489  000E44  2969               	incf	??_deplace& (0+255),w,b
  3490  000E46  C065  FFD9         	movff	deplace@x,fsr2l
  3491  000E4A  C066  FFDA         	movff	deplace@x+1,fsr2h
  3492  000E4E  6EDF               	movwf	indf2,c
  3493                           
  3494                           ;main.c: 333: }
  3495  000E50  EF46  F007         	goto	l153
  3496  000E54                     l2334:
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;main.c: 334: else if(tensionX < 50)
  3500  000E54  0100               	movlb	0	; force () banked
  3501  000E56  BF6B               	btfsc	(deplace@tensionX+1)& (0+255),7,b
  3502  000E58  EF39  F007         	goto	u1360
  3503  000E5C  516B               	movf	(deplace@tensionX+1)& (0+255),w,b
  3504  000E5E  E107               	bnz	u1361
  3505  000E60  0E32               	movlw	50
  3506  000E62  5D6A               	subwf	deplace@tensionX& (0+255),w,b
  3507  000E64  B0D8               	btfsc	status,0,c
  3508  000E66  EF37  F007         	goto	u1361
  3509  000E6A  EF39  F007         	goto	u1360
  3510  000E6E                     u1361:
  3511  000E6E  EF46  F007         	goto	l153
  3512  000E72                     u1360:
  3513  000E72                     
  3514                           ; BSR set to: 0
  3515                           ;main.c: 335: {;main.c: 336: *x = *x - 1;
  3516  000E72  C065  FFD9         	movff	deplace@x,fsr2l
  3517  000E76  C066  FFDA         	movff	deplace@x+1,fsr2h
  3518  000E7A  50DF               	movf	indf2,w,c
  3519  000E7C  0100               	movlb	0	; force () banked
  3520  000E7E  6F69               	movwf	??_deplace& (0+255),b
  3521  000E80  0569               	decf	??_deplace& (0+255),w,b
  3522  000E82  C065  FFD9         	movff	deplace@x,fsr2l
  3523  000E86  C066  FFDA         	movff	deplace@x+1,fsr2h
  3524  000E8A  6EDF               	movwf	indf2,c
  3525  000E8C                     l153:
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;main.c: 337: };main.c: 340: if(*x == 21)
  3529  000E8C  C065  FFD9         	movff	deplace@x,fsr2l
  3530  000E90  C066  FFDA         	movff	deplace@x+1,fsr2h
  3531  000E94  0E15               	movlw	21
  3532  000E96  18DE               	xorwf	postinc2,w,c
  3533  000E98  A4D8               	btfss	status,2,c
  3534  000E9A  EF51  F007         	goto	u1371
  3535  000E9E  EF53  F007         	goto	u1370
  3536  000EA2                     u1371:
  3537  000EA2  EF59  F007         	goto	l2340
  3538  000EA6                     u1370:
  3539  000EA6                     
  3540                           ; BSR set to: 0
  3541                           ;main.c: 341: *x = 1;
  3542  000EA6  C065  FFD9         	movff	deplace@x,fsr2l
  3543  000EAA  C066  FFDA         	movff	deplace@x+1,fsr2h
  3544  000EAE  0E01               	movlw	1
  3545  000EB0  6EDF               	movwf	indf2,c
  3546  000EB2                     l2340:
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;main.c: 342: if(*x == 0)
  3550  000EB2  C065  FFD9         	movff	deplace@x,fsr2l
  3551  000EB6  C066  FFDA         	movff	deplace@x+1,fsr2h
  3552  000EBA  50DF               	movf	indf2,w,c
  3553  000EBC  A4D8               	btfss	status,2,c
  3554  000EBE  EF63  F007         	goto	u1381
  3555  000EC2  EF65  F007         	goto	u1380
  3556  000EC6                     u1381:
  3557  000EC6  EF6B  F007         	goto	l2344
  3558  000ECA                     u1380:
  3559  000ECA                     
  3560                           ; BSR set to: 0
  3561                           ;main.c: 343: *x = 20;
  3562  000ECA  C065  FFD9         	movff	deplace@x,fsr2l
  3563  000ECE  C066  FFDA         	movff	deplace@x+1,fsr2h
  3564  000ED2  0E14               	movlw	20
  3565  000ED4  6EDF               	movwf	indf2,c
  3566  000ED6                     l2344:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;main.c: 346: if(tensionY > 200)
  3570  000ED6  0100               	movlb	0	; force () banked
  3571  000ED8  BF6D               	btfsc	(deplace@tensionY+1)& (0+255),7,b
  3572  000EDA  EF78  F007         	goto	u1391
  3573  000EDE  516D               	movf	(deplace@tensionY+1)& (0+255),w,b
  3574  000EE0  E109               	bnz	u1390
  3575  000EE2  0EC9               	movlw	201
  3576  000EE4  5D6C               	subwf	deplace@tensionY& (0+255),w,b
  3577  000EE6  A0D8               	btfss	status,0,c
  3578  000EE8  EF78  F007         	goto	u1391
  3579  000EEC  EF7A  F007         	goto	u1390
  3580  000EF0                     u1391:
  3581  000EF0  EF89  F007         	goto	l2348
  3582  000EF4                     u1390:
  3583  000EF4                     
  3584                           ; BSR set to: 0
  3585                           ;main.c: 347: {;main.c: 348: *y = *y - 1;
  3586  000EF4  C067  FFD9         	movff	deplace@y,fsr2l
  3587  000EF8  C068  FFDA         	movff	deplace@y+1,fsr2h
  3588  000EFC  50DF               	movf	indf2,w,c
  3589  000EFE  0100               	movlb	0	; force () banked
  3590  000F00  6F69               	movwf	??_deplace& (0+255),b
  3591  000F02  0569               	decf	??_deplace& (0+255),w,b
  3592  000F04  C067  FFD9         	movff	deplace@y,fsr2l
  3593  000F08  C068  FFDA         	movff	deplace@y+1,fsr2h
  3594  000F0C  6EDF               	movwf	indf2,c
  3595                           
  3596                           ;main.c: 349: }
  3597  000F0E  EFA5  F007         	goto	l158
  3598  000F12                     l2348:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;main.c: 350: else if(tensionY < 50)
  3602  000F12  0100               	movlb	0	; force () banked
  3603  000F14  BF6D               	btfsc	(deplace@tensionY+1)& (0+255),7,b
  3604  000F16  EF98  F007         	goto	u1400
  3605  000F1A  516D               	movf	(deplace@tensionY+1)& (0+255),w,b
  3606  000F1C  E107               	bnz	u1401
  3607  000F1E  0E32               	movlw	50
  3608  000F20  5D6C               	subwf	deplace@tensionY& (0+255),w,b
  3609  000F22  B0D8               	btfsc	status,0,c
  3610  000F24  EF96  F007         	goto	u1401
  3611  000F28  EF98  F007         	goto	u1400
  3612  000F2C                     u1401:
  3613  000F2C  EFA5  F007         	goto	l158
  3614  000F30                     u1400:
  3615  000F30                     
  3616                           ; BSR set to: 0
  3617                           ;main.c: 351: {;main.c: 352: *y = *y + 1;
  3618  000F30  C067  FFD9         	movff	deplace@y,fsr2l
  3619  000F34  C068  FFDA         	movff	deplace@y+1,fsr2h
  3620  000F38  50DF               	movf	indf2,w,c
  3621  000F3A  0100               	movlb	0	; force () banked
  3622  000F3C  6F69               	movwf	??_deplace& (0+255),b
  3623  000F3E  2969               	incf	??_deplace& (0+255),w,b
  3624  000F40  C067  FFD9         	movff	deplace@y,fsr2l
  3625  000F44  C068  FFDA         	movff	deplace@y+1,fsr2h
  3626  000F48  6EDF               	movwf	indf2,c
  3627  000F4A                     l158:
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;main.c: 353: };main.c: 356: if(*y == 5)
  3631  000F4A  C067  FFD9         	movff	deplace@y,fsr2l
  3632  000F4E  C068  FFDA         	movff	deplace@y+1,fsr2h
  3633  000F52  0E05               	movlw	5
  3634  000F54  18DE               	xorwf	postinc2,w,c
  3635  000F56  A4D8               	btfss	status,2,c
  3636  000F58  EFB0  F007         	goto	u1411
  3637  000F5C  EFB2  F007         	goto	u1410
  3638  000F60                     u1411:
  3639  000F60  EFB8  F007         	goto	l2354
  3640  000F64                     u1410:
  3641  000F64                     
  3642                           ; BSR set to: 0
  3643                           ;main.c: 357: *y = 1;
  3644  000F64  C067  FFD9         	movff	deplace@y,fsr2l
  3645  000F68  C068  FFDA         	movff	deplace@y+1,fsr2h
  3646  000F6C  0E01               	movlw	1
  3647  000F6E  6EDF               	movwf	indf2,c
  3648  000F70                     l2354:
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;main.c: 358: if(*y == 0)
  3652  000F70  C067  FFD9         	movff	deplace@y,fsr2l
  3653  000F74  C068  FFDA         	movff	deplace@y+1,fsr2h
  3654  000F78  50DF               	movf	indf2,w,c
  3655  000F7A  A4D8               	btfss	status,2,c
  3656  000F7C  EFC2  F007         	goto	u1421
  3657  000F80  EFC4  F007         	goto	u1420
  3658  000F84                     u1421:
  3659  000F84  EFCA  F007         	goto	l2358
  3660  000F88                     u1420:
  3661  000F88                     
  3662                           ; BSR set to: 0
  3663                           ;main.c: 359: *y = 4;
  3664  000F88  C067  FFD9         	movff	deplace@y,fsr2l
  3665  000F8C  C068  FFDA         	movff	deplace@y+1,fsr2h
  3666  000F90  0E04               	movlw	4
  3667  000F92  6EDF               	movwf	indf2,c
  3668  000F94                     l2358:
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;main.c: 361: lcd_gotoXY(*x, *y);
  3672  000F94  C067  FFD9         	movff	deplace@y,fsr2l
  3673  000F98  C068  FFDA         	movff	deplace@y+1,fsr2h
  3674  000F9C  50DF               	movf	indf2,w,c
  3675  000F9E  0100               	movlb	0	; force () banked
  3676  000FA0  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  3677  000FA2  C065  FFD9         	movff	deplace@x,fsr2l
  3678  000FA6  C066  FFDA         	movff	deplace@x+1,fsr2h
  3679  000FAA  50DF               	movf	indf2,w,c
  3680  000FAC  EC39  F00C         	call	_lcd_gotoXY
  3681  000FB0  0012               	return		;funcret
  3682  000FB2                     __end_of_deplace:
  3683                           	opt callstack 0
  3684                           
  3685 ;; *************** function _getAnalog *****************
  3686 ;; Defined at:
  3687 ;;		line 474 in file "main.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;  canal           1    wreg     unsigned char 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;  canal           1    1[BANK0 ] unsigned char 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      unsigned char 
  3694 ;; Registers used:
  3695 ;;		wreg, status,2, status,0
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3701 ;;      Params:         0       0       0       0       0       0       0
  3702 ;;      Locals:         0       1       0       0       0       0       0
  3703 ;;      Temps:          0       1       0       0       0       0       0
  3704 ;;      Totals:         0       2       0       0       0       0       0
  3705 ;;Total ram usage:        2 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; This function calls:
  3708 ;;		Nothing
  3709 ;; This function is called by:
  3710 ;;		_deplace
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text19
  3715  001C5A                     __ptext19:
  3716                           	opt callstack 0
  3717  001C5A                     _getAnalog:
  3718                           	opt callstack 29
  3719                           
  3720                           ;incstack = 0
  3721                           ;getAnalog@canal stored from wreg
  3722  001C5A  0100               	movlb	0	; force () banked
  3723  001C5C  6F61               	movwf	getAnalog@canal& (0+255),b
  3724  001C5E                     
  3725                           ;main.c: 476: ADCON0bits.CHS = canal;
  3726  001C5E  C061  F060         	movff	getAnalog@canal,??_getAnalog
  3727  001C62  0100               	movlb	0	; force () banked
  3728  001C64  4760               	rlncf	??_getAnalog& (0+255),f,b
  3729  001C66  4760               	rlncf	??_getAnalog& (0+255),f,b
  3730  001C68  50C2               	movf	194,w,c	;volatile
  3731  001C6A  1960               	xorwf	??_getAnalog& (0+255),w,b
  3732  001C6C  0BC3               	andlw	-61
  3733  001C6E  1960               	xorwf	??_getAnalog& (0+255),w,b
  3734  001C70  6EC2               	movwf	194,c	;volatile
  3735  001C72                     
  3736                           ;main.c: 478: ADCON0bits.GO_DONE = 1;
  3737  001C72  82C2               	bsf	194,1,c	;volatile
  3738  001C74                     l199:
  3739  001C74  B2C2               	btfsc	194,1,c	;volatile
  3740  001C76  EF3F  F00E         	goto	u981
  3741  001C7A  EF41  F00E         	goto	u980
  3742  001C7E                     u981:
  3743  001C7E  EF3A  F00E         	goto	l199
  3744  001C82                     u980:
  3745  001C82                     
  3746                           ;main.c: 480: return ADRESH;
  3747  001C82  50C4               	movf	196,w,c	;volatile
  3748  001C84  0012               	return		;funcret
  3749  001C86                     __end_of_getAnalog:
  3750                           	opt callstack 0
  3751                           
  3752 ;; *************** function _demine *****************
  3753 ;; Defined at:
  3754 ;;		line 372 in file "main.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  x               1    wreg     unsigned char 
  3757 ;;  y               1   26[BANK0 ] unsigned char 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  x               1   35[BANK0 ] unsigned char 
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  1    wreg      unsigned char 
  3762 ;; Registers used:
  3763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3769 ;;      Params:         0       1       0       0       0       0       0
  3770 ;;      Locals:         0       1       0       0       0       0       0
  3771 ;;      Temps:          0       8       0       0       0       0       0
  3772 ;;      Totals:         0      10       0       0       0       0       0
  3773 ;;Total ram usage:       10 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:    2
  3776 ;; This function calls:
  3777 ;;		_enleveTuilesAutour
  3778 ;; This function is called by:
  3779 ;;		_main
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783                           	psect	text20
  3784  0013DE                     __ptext20:
  3785                           	opt callstack 0
  3786  0013DE                     _demine:
  3787                           	opt callstack 28
  3788                           
  3789                           ;incstack = 0
  3790                           ;demine@x stored from wreg
  3791  0013DE  0100               	movlb	0	; force () banked
  3792  0013E0  6F83               	movwf	demine@x& (0+255),b
  3793  0013E2                     
  3794                           ;main.c: 375: if(m_tabMines[y-1][x-1] == 2)
  3795  0013E2  0100               	movlb	0	; force () banked
  3796  0013E4  517A               	movf	demine@y& (0+255),w,b
  3797  0013E6  0D15               	mullw	21
  3798  0013E8  0EEA               	movlw	234
  3799  0013EA  0100               	movlb	0	; force () banked
  3800  0013EC  6F7B               	movwf	??_demine& (0+255),b
  3801  0013EE  0EFF               	movlw	255
  3802  0013F0  6F7C               	movwf	(??_demine+1)& (0+255),b
  3803  0013F2  0E54               	movlw	low _m_tabMines
  3804  0013F4  6F7D               	movwf	(??_demine+2)& (0+255),b
  3805  0013F6  0E01               	movlw	high _m_tabMines
  3806  0013F8  6F7E               	movwf	(??_demine+3)& (0+255),b
  3807  0013FA  517B               	movf	??_demine& (0+255),w,b
  3808  0013FC  277D               	addwf	(??_demine+2)& (0+255),f,b
  3809  0013FE  517C               	movf	(??_demine+1)& (0+255),w,b
  3810  001400  237E               	addwfc	(??_demine+3)& (0+255),f,b
  3811  001402  50F3               	movf	243,w,c
  3812  001404  277D               	addwf	(??_demine+2)& (0+255),f,b
  3813  001406  50F4               	movf	244,w,c
  3814  001408  237E               	addwfc	(??_demine+3)& (0+255),f,b
  3815  00140A  0100               	movlb	0	; force () banked
  3816  00140C  5183               	movf	demine@x& (0+255),w,b
  3817  00140E  0100               	movlb	0	; force () banked
  3818  001410  257D               	addwf	(??_demine+2)& (0+255),w,b
  3819  001412  6ED9               	movwf	fsr2l,c
  3820  001414  0100               	movlb	0	; force () banked
  3821  001416  0E00               	movlw	0
  3822  001418  0100               	movlb	0	; force () banked
  3823  00141A  217E               	addwfc	(??_demine+3)& (0+255),w,b
  3824  00141C  6EDA               	movwf	fsr2h,c
  3825  00141E  0E02               	movlw	2
  3826  001420  18DE               	xorwf	postinc2,w,c
  3827  001422  A4D8               	btfss	status,2,c
  3828  001424  EF16  F00A         	goto	u1431
  3829  001428  EF18  F00A         	goto	u1430
  3830  00142C                     u1431:
  3831  00142C  EF1B  F00A         	goto	l2366
  3832  001430                     u1430:
  3833  001430                     
  3834                           ; BSR set to: 0
  3835                           ;main.c: 376: return 0;
  3836  001430  0E00               	movlw	0
  3837  001432  EF87  F00A         	goto	l166
  3838  001436                     l2366:
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;main.c: 378: m_tabVue[y-1][x-1] = m_tabMines[y-1][x-1];
  3842  001436  0100               	movlb	0	; force () banked
  3843  001438  517A               	movf	demine@y& (0+255),w,b
  3844  00143A  0D15               	mullw	21
  3845  00143C  0EEA               	movlw	234
  3846  00143E  0100               	movlb	0	; force () banked
  3847  001440  6F7B               	movwf	??_demine& (0+255),b
  3848  001442  0EFF               	movlw	255
  3849  001444  6F7C               	movwf	(??_demine+1)& (0+255),b
  3850  001446  0E54               	movlw	low _m_tabMines
  3851  001448  6F7D               	movwf	(??_demine+2)& (0+255),b
  3852  00144A  0E01               	movlw	high _m_tabMines
  3853  00144C  6F7E               	movwf	(??_demine+3)& (0+255),b
  3854  00144E  517B               	movf	??_demine& (0+255),w,b
  3855  001450  277D               	addwf	(??_demine+2)& (0+255),f,b
  3856  001452  517C               	movf	(??_demine+1)& (0+255),w,b
  3857  001454  237E               	addwfc	(??_demine+3)& (0+255),f,b
  3858  001456  50F3               	movf	243,w,c
  3859  001458  277D               	addwf	(??_demine+2)& (0+255),f,b
  3860  00145A  50F4               	movf	244,w,c
  3861  00145C  237E               	addwfc	(??_demine+3)& (0+255),f,b
  3862  00145E  0100               	movlb	0	; force () banked
  3863  001460  5183               	movf	demine@x& (0+255),w,b
  3864  001462  0100               	movlb	0	; force () banked
  3865  001464  257D               	addwf	(??_demine+2)& (0+255),w,b
  3866  001466  6ED9               	movwf	fsr2l,c
  3867  001468  0100               	movlb	0	; force () banked
  3868  00146A  0E00               	movlw	0
  3869  00146C  0100               	movlb	0	; force () banked
  3870  00146E  217E               	addwfc	(??_demine+3)& (0+255),w,b
  3871  001470  6EDA               	movwf	fsr2h,c
  3872  001472  0100               	movlb	0	; force () banked
  3873  001474  517A               	movf	demine@y& (0+255),w,b
  3874  001476  0D15               	mullw	21
  3875  001478  0EEA               	movlw	234
  3876  00147A  0100               	movlb	0	; force () banked
  3877  00147C  6F7F               	movwf	(??_demine+4)& (0+255),b
  3878  00147E  0EFF               	movlw	255
  3879  001480  6F80               	movwf	(??_demine+5)& (0+255),b
  3880  001482  0E00               	movlw	low _m_tabVue
  3881  001484  6F81               	movwf	(??_demine+6)& (0+255),b
  3882  001486  0E01               	movlw	high _m_tabVue
  3883  001488  6F82               	movwf	(??_demine+7)& (0+255),b
  3884  00148A  517F               	movf	(??_demine+4)& (0+255),w,b
  3885  00148C  2781               	addwf	(??_demine+6)& (0+255),f,b
  3886  00148E  5180               	movf	(??_demine+5)& (0+255),w,b
  3887  001490  2382               	addwfc	(??_demine+7)& (0+255),f,b
  3888  001492  50F3               	movf	243,w,c
  3889  001494  2781               	addwf	(??_demine+6)& (0+255),f,b
  3890  001496  50F4               	movf	244,w,c
  3891  001498  2382               	addwfc	(??_demine+7)& (0+255),f,b
  3892  00149A  0100               	movlb	0	; force () banked
  3893  00149C  5183               	movf	demine@x& (0+255),w,b
  3894  00149E  0100               	movlb	0	; force () banked
  3895  0014A0  2581               	addwf	(??_demine+6)& (0+255),w,b
  3896  0014A2  6EE1               	movwf	fsr1l,c
  3897  0014A4  0100               	movlb	0	; force () banked
  3898  0014A6  0E00               	movlw	0
  3899  0014A8  0100               	movlb	0	; force () banked
  3900  0014AA  2182               	addwfc	(??_demine+7)& (0+255),w,b
  3901  0014AC  6EE2               	movwf	fsr1h,c
  3902  0014AE  CFDF FFE7          	movff	indf2,indf1
  3903  0014B2                     
  3904                           ; BSR set to: 0
  3905                           ;main.c: 380: if(m_tabMines[y-1][x-1] == ' ')
  3906  0014B2  0100               	movlb	0	; force () banked
  3907  0014B4  517A               	movf	demine@y& (0+255),w,b
  3908  0014B6  0D15               	mullw	21
  3909  0014B8  0EEA               	movlw	234
  3910  0014BA  0100               	movlb	0	; force () banked
  3911  0014BC  6F7B               	movwf	??_demine& (0+255),b
  3912  0014BE  0EFF               	movlw	255
  3913  0014C0  6F7C               	movwf	(??_demine+1)& (0+255),b
  3914  0014C2  0E54               	movlw	low _m_tabMines
  3915  0014C4  6F7D               	movwf	(??_demine+2)& (0+255),b
  3916  0014C6  0E01               	movlw	high _m_tabMines
  3917  0014C8  6F7E               	movwf	(??_demine+3)& (0+255),b
  3918  0014CA  517B               	movf	??_demine& (0+255),w,b
  3919  0014CC  277D               	addwf	(??_demine+2)& (0+255),f,b
  3920  0014CE  517C               	movf	(??_demine+1)& (0+255),w,b
  3921  0014D0  237E               	addwfc	(??_demine+3)& (0+255),f,b
  3922  0014D2  50F3               	movf	243,w,c
  3923  0014D4  277D               	addwf	(??_demine+2)& (0+255),f,b
  3924  0014D6  50F4               	movf	244,w,c
  3925  0014D8  237E               	addwfc	(??_demine+3)& (0+255),f,b
  3926  0014DA  0100               	movlb	0	; force () banked
  3927  0014DC  5183               	movf	demine@x& (0+255),w,b
  3928  0014DE  0100               	movlb	0	; force () banked
  3929  0014E0  257D               	addwf	(??_demine+2)& (0+255),w,b
  3930  0014E2  6ED9               	movwf	fsr2l,c
  3931  0014E4  0100               	movlb	0	; force () banked
  3932  0014E6  0E00               	movlw	0
  3933  0014E8  0100               	movlb	0	; force () banked
  3934  0014EA  217E               	addwfc	(??_demine+3)& (0+255),w,b
  3935  0014EC  6EDA               	movwf	fsr2h,c
  3936  0014EE  0E20               	movlw	32
  3937  0014F0  18DE               	xorwf	postinc2,w,c
  3938  0014F2  A4D8               	btfss	status,2,c
  3939  0014F4  EF7E  F00A         	goto	u1441
  3940  0014F8  EF80  F00A         	goto	u1440
  3941  0014FC                     u1441:
  3942  0014FC  EF86  F00A         	goto	l2372
  3943  001500                     u1440:
  3944  001500                     
  3945                           ; BSR set to: 0
  3946                           ;main.c: 381: {;main.c: 382: enleveTuilesAutour(x, y);
  3947  001500  C07A  F066         	movff	demine@y,enleveTuilesAutour@y
  3948  001504  0100               	movlb	0	; force () banked
  3949  001506  5183               	movf	demine@x& (0+255),w,b
  3950  001508  ECB0  F004         	call	_enleveTuilesAutour
  3951  00150C                     l2372:
  3952                           
  3953                           ;main.c: 383: };main.c: 385: return 1;
  3954  00150C  0E01               	movlw	1
  3955  00150E                     l166:
  3956  00150E  0012               	return		;funcret
  3957  001510                     __end_of_demine:
  3958                           	opt callstack 0
  3959                           
  3960 ;; *************** function _enleveTuilesAutour *****************
  3961 ;; Defined at:
  3962 ;;		line 394 in file "main.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  x               1    wreg     unsigned char 
  3965 ;;  y               1    6[BANK0 ] unsigned char 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  x               1   25[BANK0 ] unsigned char 
  3968 ;;  m               1   24[BANK0 ] char 
  3969 ;;  j               1   23[BANK0 ] char 
  3970 ;;  maxX            1   22[BANK0 ] char 
  3971 ;;  minX            1   21[BANK0 ] char 
  3972 ;;  maxY            1   20[BANK0 ] char 
  3973 ;;  minY            1   19[BANK0 ] char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3983 ;;      Params:         0       1       0       0       0       0       0
  3984 ;;      Locals:         0       7       0       0       0       0       0
  3985 ;;      Temps:          0      12       0       0       0       0       0
  3986 ;;      Totals:         0      20       0       0       0       0       0
  3987 ;;Total ram usage:       20 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    1
  3990 ;; This function calls:
  3991 ;;		___wmul
  3992 ;; This function is called by:
  3993 ;;		_demine
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text21
  3998  000960                     __ptext21:
  3999                           	opt callstack 0
  4000  000960                     _enleveTuilesAutour:
  4001                           	opt callstack 28
  4002                           
  4003                           ;incstack = 0
  4004                           ;enleveTuilesAutour@x stored from wreg
  4005  000960  0100               	movlb	0	; force () banked
  4006  000962  6F79               	movwf	enleveTuilesAutour@x& (0+255),b
  4007  000964                     
  4008                           ;main.c: 397: signed char minY = -1;
  4009  000964  0100               	movlb	0	; force () banked
  4010  000966  6973               	setf	enleveTuilesAutour@minY& (0+255),b
  4011  000968                     
  4012                           ; BSR set to: 0
  4013                           ;main.c: 398: signed char maxY = 2;
  4014  000968  0E02               	movlw	2
  4015  00096A  0100               	movlb	0	; force () banked
  4016  00096C  6F74               	movwf	enleveTuilesAutour@maxY& (0+255),b
  4017  00096E                     
  4018                           ; BSR set to: 0
  4019                           ;main.c: 399: signed char minX = -1;
  4020  00096E  0100               	movlb	0	; force () banked
  4021  000970  6975               	setf	enleveTuilesAutour@minX& (0+255),b
  4022                           
  4023                           ;main.c: 400: signed char maxX = 2;
  4024  000972  0E02               	movlw	2
  4025  000974  0100               	movlb	0	; force () banked
  4026  000976  6F76               	movwf	enleveTuilesAutour@maxX& (0+255),b
  4027  000978                     
  4028                           ; BSR set to: 0
  4029                           ;main.c: 402: if(y == 1)
  4030  000978  0100               	movlb	0	; force () banked
  4031  00097A  0566               	decf	enleveTuilesAutour@y& (0+255),w,b
  4032  00097C  A4D8               	btfss	status,2,c
  4033  00097E  EFC3  F004         	goto	u991
  4034  000982  EFC5  F004         	goto	u990
  4035  000986                     u991:
  4036  000986  EFC7  F004         	goto	l2068
  4037  00098A                     u990:
  4038  00098A                     
  4039                           ; BSR set to: 0
  4040                           ;main.c: 403: minY++;
  4041  00098A  0100               	movlb	0	; force () banked
  4042  00098C  2B73               	incf	enleveTuilesAutour@minY& (0+255),f,b
  4043  00098E                     l2068:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;main.c: 404: if(y == 4)
  4047  00098E  0E04               	movlw	4
  4048  000990  0100               	movlb	0	; force () banked
  4049  000992  1966               	xorwf	enleveTuilesAutour@y& (0+255),w,b
  4050  000994  A4D8               	btfss	status,2,c
  4051  000996  EFCF  F004         	goto	u1001
  4052  00099A  EFD1  F004         	goto	u1000
  4053  00099E                     u1001:
  4054  00099E  EFD3  F004         	goto	l2072
  4055  0009A2                     u1000:
  4056  0009A2                     
  4057                           ; BSR set to: 0
  4058                           ;main.c: 405: maxY--;
  4059  0009A2  0100               	movlb	0	; force () banked
  4060  0009A4  0774               	decf	enleveTuilesAutour@maxY& (0+255),f,b
  4061  0009A6                     l2072:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;main.c: 406: if(x == 1)
  4065  0009A6  0100               	movlb	0	; force () banked
  4066  0009A8  0579               	decf	enleveTuilesAutour@x& (0+255),w,b
  4067  0009AA  A4D8               	btfss	status,2,c
  4068  0009AC  EFDA  F004         	goto	u1011
  4069  0009B0  EFDC  F004         	goto	u1010
  4070  0009B4                     u1011:
  4071  0009B4  EFDE  F004         	goto	l2076
  4072  0009B8                     u1010:
  4073  0009B8                     
  4074                           ; BSR set to: 0
  4075                           ;main.c: 407: minX++;
  4076  0009B8  0100               	movlb	0	; force () banked
  4077  0009BA  2B75               	incf	enleveTuilesAutour@minX& (0+255),f,b
  4078  0009BC                     l2076:
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;main.c: 408: if(x == 20)
  4082  0009BC  0E14               	movlw	20
  4083  0009BE  0100               	movlb	0	; force () banked
  4084  0009C0  1979               	xorwf	enleveTuilesAutour@x& (0+255),w,b
  4085  0009C2  A4D8               	btfss	status,2,c
  4086  0009C4  EFE6  F004         	goto	u1021
  4087  0009C8  EFE8  F004         	goto	u1020
  4088  0009CC                     u1021:
  4089  0009CC  EFEA  F004         	goto	l2080
  4090  0009D0                     u1020:
  4091  0009D0                     
  4092                           ; BSR set to: 0
  4093                           ;main.c: 409: maxX--;
  4094  0009D0  0100               	movlb	0	; force () banked
  4095  0009D2  0776               	decf	enleveTuilesAutour@maxX& (0+255),f,b
  4096  0009D4                     l2080:
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;main.c: 411: for(signed char j = minX ; j < maxX ; j++)
  4100  0009D4  C075  F077         	movff	enleveTuilesAutour@minX,enleveTuilesAutour@j
  4101  0009D8  EFC5  F005         	goto	l2092
  4102  0009DC                     l175:
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;main.c: 412: {;main.c: 413: for(signed char m = minY; m < maxY ; m++)
  4106  0009DC  C073  F078         	movff	enleveTuilesAutour@minY,enleveTuilesAutour@m
  4107  0009E0  EFB2  F005         	goto	l2088
  4108  0009E4                     l2082:
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;main.c: 414: {;main.c: 415: if( m_tabMines[y+m-1][x+j-1] != 2)
  4112  0009E4  C077  F067         	movff	enleveTuilesAutour@j,??_enleveTuilesAutour
  4113  0009E8  0100               	movlb	0	; force () banked
  4114  0009EA  6B68               	clrf	(??_enleveTuilesAutour+1)& (0+255),b
  4115  0009EC  BF67               	btfsc	??_enleveTuilesAutour& (0+255),7,b
  4116  0009EE  0768               	decf	(??_enleveTuilesAutour+1)& (0+255),f,b
  4117  0009F0  0100               	movlb	0	; force () banked
  4118  0009F2  5178               	movf	enleveTuilesAutour@m& (0+255),w,b
  4119  0009F4  0100               	movlb	0	; force () banked
  4120  0009F6  6F60               	movwf	___wmul@multiplier& (0+255),b
  4121  0009F8  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  4122  0009FA  BF60               	btfsc	___wmul@multiplier& (0+255),7,b
  4123  0009FC  0761               	decf	(___wmul@multiplier+1)& (0+255),f,b
  4124  0009FE  0E00               	movlw	0
  4125  000A00  0100               	movlb	0	; force () banked
  4126  000A02  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4127  000A04  0E15               	movlw	21
  4128  000A06  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4129  000A08  EC57  F00E         	call	___wmul	;wreg free
  4130  000A0C  0100               	movlb	0	; force () banked
  4131  000A0E  5166               	movf	enleveTuilesAutour@y& (0+255),w,b
  4132  000A10  0D15               	mullw	21
  4133  000A12  0EEA               	movlw	234
  4134  000A14  0100               	movlb	0	; force () banked
  4135  000A16  6F69               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4136  000A18  0EFF               	movlw	255
  4137  000A1A  6F6A               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4138  000A1C  0E54               	movlw	low _m_tabMines
  4139  000A1E  6F6B               	movwf	(??_enleveTuilesAutour+4)& (0+255),b
  4140  000A20  0E01               	movlw	high _m_tabMines
  4141  000A22  6F6C               	movwf	(??_enleveTuilesAutour+5)& (0+255),b
  4142  000A24  5169               	movf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4143  000A26  276B               	addwf	(??_enleveTuilesAutour+4)& (0+255),f,b
  4144  000A28  516A               	movf	(??_enleveTuilesAutour+3)& (0+255),w,b
  4145  000A2A  236C               	addwfc	(??_enleveTuilesAutour+5)& (0+255),f,b
  4146  000A2C  50F3               	movf	243,w,c
  4147  000A2E  276B               	addwf	(??_enleveTuilesAutour+4)& (0+255),f,b
  4148  000A30  50F4               	movf	244,w,c
  4149  000A32  236C               	addwfc	(??_enleveTuilesAutour+5)& (0+255),f,b
  4150  000A34  0100               	movlb	0	; force () banked
  4151  000A36  5160               	movf	?___wmul& (0+255),w,b
  4152  000A38  0100               	movlb	0	; force () banked
  4153  000A3A  276B               	addwf	(??_enleveTuilesAutour+4)& (0+255),f,b
  4154  000A3C  0100               	movlb	0	; force () banked
  4155  000A3E  5161               	movf	(?___wmul+1)& (0+255),w,b
  4156  000A40  0100               	movlb	0	; force () banked
  4157  000A42  236C               	addwfc	(??_enleveTuilesAutour+5)& (0+255),f,b
  4158  000A44  0100               	movlb	0	; force () banked
  4159  000A46  5179               	movf	enleveTuilesAutour@x& (0+255),w,b
  4160  000A48  0100               	movlb	0	; force () banked
  4161  000A4A  276B               	addwf	(??_enleveTuilesAutour+4)& (0+255),f,b
  4162  000A4C  0E00               	movlw	0
  4163  000A4E  236C               	addwfc	(??_enleveTuilesAutour+5)& (0+255),f,b
  4164  000A50  5167               	movf	??_enleveTuilesAutour& (0+255),w,b
  4165  000A52  256B               	addwf	(??_enleveTuilesAutour+4)& (0+255),w,b
  4166  000A54  6ED9               	movwf	fsr2l,c
  4167  000A56  5168               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  4168  000A58  216C               	addwfc	(??_enleveTuilesAutour+5)& (0+255),w,b
  4169  000A5A  6EDA               	movwf	fsr2h,c
  4170  000A5C  0E02               	movlw	2
  4171  000A5E  18DE               	xorwf	postinc2,w,c
  4172  000A60  B4D8               	btfsc	status,2,c
  4173  000A62  EF35  F005         	goto	u1031
  4174  000A66  EF37  F005         	goto	u1030
  4175  000A6A                     u1031:
  4176  000A6A  EFB0  F005         	goto	l2086
  4177  000A6E                     u1030:
  4178  000A6E                     
  4179                           ; BSR set to: 0
  4180                           ;main.c: 416: {;main.c: 417: m_tabVue[y+m-1][x+j-1] = m_tabMines[y+m-1][x+j-1];
  4181  000A6E  C077  F067         	movff	enleveTuilesAutour@j,??_enleveTuilesAutour
  4182  000A72  0100               	movlb	0	; force () banked
  4183  000A74  6B68               	clrf	(??_enleveTuilesAutour+1)& (0+255),b
  4184  000A76  BF67               	btfsc	??_enleveTuilesAutour& (0+255),7,b
  4185  000A78  0768               	decf	(??_enleveTuilesAutour+1)& (0+255),f,b
  4186  000A7A  0100               	movlb	0	; force () banked
  4187  000A7C  5178               	movf	enleveTuilesAutour@m& (0+255),w,b
  4188  000A7E  0100               	movlb	0	; force () banked
  4189  000A80  6F60               	movwf	___wmul@multiplier& (0+255),b
  4190  000A82  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  4191  000A84  BF60               	btfsc	___wmul@multiplier& (0+255),7,b
  4192  000A86  0761               	decf	(___wmul@multiplier+1)& (0+255),f,b
  4193  000A88  0E00               	movlw	0
  4194  000A8A  0100               	movlb	0	; force () banked
  4195  000A8C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4196  000A8E  0E15               	movlw	21
  4197  000A90  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4198  000A92  EC57  F00E         	call	___wmul	;wreg free
  4199  000A96  0100               	movlb	0	; force () banked
  4200  000A98  5166               	movf	enleveTuilesAutour@y& (0+255),w,b
  4201  000A9A  0D15               	mullw	21
  4202  000A9C  0EEA               	movlw	234
  4203  000A9E  0100               	movlb	0	; force () banked
  4204  000AA0  6F69               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  4205  000AA2  0EFF               	movlw	255
  4206  000AA4  6F6A               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  4207  000AA6  0E54               	movlw	low _m_tabMines
  4208  000AA8  6F6B               	movwf	(??_enleveTuilesAutour+4)& (0+255),b
  4209  000AAA  0E01               	movlw	high _m_tabMines
  4210  000AAC  6F6C               	movwf	(??_enleveTuilesAutour+5)& (0+255),b
  4211  000AAE  5169               	movf	(??_enleveTuilesAutour+2)& (0+255),w,b
  4212  000AB0  276B               	addwf	(??_enleveTuilesAutour+4)& (0+255),f,b
  4213  000AB2  516A               	movf	(??_enleveTuilesAutour+3)& (0+255),w,b
  4214  000AB4  236C               	addwfc	(??_enleveTuilesAutour+5)& (0+255),f,b
  4215  000AB6  50F3               	movf	243,w,c
  4216  000AB8  276B               	addwf	(??_enleveTuilesAutour+4)& (0+255),f,b
  4217  000ABA  50F4               	movf	244,w,c
  4218  000ABC  236C               	addwfc	(??_enleveTuilesAutour+5)& (0+255),f,b
  4219  000ABE  0100               	movlb	0	; force () banked
  4220  000AC0  5160               	movf	?___wmul& (0+255),w,b
  4221  000AC2  0100               	movlb	0	; force () banked
  4222  000AC4  276B               	addwf	(??_enleveTuilesAutour+4)& (0+255),f,b
  4223  000AC6  0100               	movlb	0	; force () banked
  4224  000AC8  5161               	movf	(?___wmul+1)& (0+255),w,b
  4225  000ACA  0100               	movlb	0	; force () banked
  4226  000ACC  236C               	addwfc	(??_enleveTuilesAutour+5)& (0+255),f,b
  4227  000ACE  0100               	movlb	0	; force () banked
  4228  000AD0  5179               	movf	enleveTuilesAutour@x& (0+255),w,b
  4229  000AD2  0100               	movlb	0	; force () banked
  4230  000AD4  276B               	addwf	(??_enleveTuilesAutour+4)& (0+255),f,b
  4231  000AD6  0E00               	movlw	0
  4232  000AD8  236C               	addwfc	(??_enleveTuilesAutour+5)& (0+255),f,b
  4233  000ADA  5167               	movf	??_enleveTuilesAutour& (0+255),w,b
  4234  000ADC  256B               	addwf	(??_enleveTuilesAutour+4)& (0+255),w,b
  4235  000ADE  6ED9               	movwf	fsr2l,c
  4236  000AE0  5168               	movf	(??_enleveTuilesAutour+1)& (0+255),w,b
  4237  000AE2  216C               	addwfc	(??_enleveTuilesAutour+5)& (0+255),w,b
  4238  000AE4  6EDA               	movwf	fsr2h,c
  4239  000AE6  C077  F06D         	movff	enleveTuilesAutour@j,??_enleveTuilesAutour+6
  4240  000AEA  6B6E               	clrf	(??_enleveTuilesAutour+7)& (0+255),b
  4241  000AEC  BF6D               	btfsc	(??_enleveTuilesAutour+6)& (0+255),7,b
  4242  000AEE  076E               	decf	(??_enleveTuilesAutour+7)& (0+255),f,b
  4243  000AF0  0100               	movlb	0	; force () banked
  4244  000AF2  5178               	movf	enleveTuilesAutour@m& (0+255),w,b
  4245  000AF4  0100               	movlb	0	; force () banked
  4246  000AF6  6F60               	movwf	___wmul@multiplier& (0+255),b
  4247  000AF8  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  4248  000AFA  BF60               	btfsc	___wmul@multiplier& (0+255),7,b
  4249  000AFC  0761               	decf	(___wmul@multiplier+1)& (0+255),f,b
  4250  000AFE  0E00               	movlw	0
  4251  000B00  0100               	movlb	0	; force () banked
  4252  000B02  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4253  000B04  0E15               	movlw	21
  4254  000B06  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4255  000B08  EC57  F00E         	call	___wmul	;wreg free
  4256  000B0C  0100               	movlb	0	; force () banked
  4257  000B0E  5166               	movf	enleveTuilesAutour@y& (0+255),w,b
  4258  000B10  0D15               	mullw	21
  4259  000B12  0EEA               	movlw	234
  4260  000B14  0100               	movlb	0	; force () banked
  4261  000B16  6F6F               	movwf	(??_enleveTuilesAutour+8)& (0+255),b
  4262  000B18  0EFF               	movlw	255
  4263  000B1A  6F70               	movwf	(??_enleveTuilesAutour+9)& (0+255),b
  4264  000B1C  0E00               	movlw	low _m_tabVue
  4265  000B1E  6F71               	movwf	(??_enleveTuilesAutour+10)& (0+255),b
  4266  000B20  0E01               	movlw	high _m_tabVue
  4267  000B22  6F72               	movwf	(??_enleveTuilesAutour+11)& (0+255),b
  4268  000B24  516F               	movf	(??_enleveTuilesAutour+8)& (0+255),w,b
  4269  000B26  2771               	addwf	(??_enleveTuilesAutour+10)& (0+255),f,b
  4270  000B28  5170               	movf	(??_enleveTuilesAutour+9)& (0+255),w,b
  4271  000B2A  2372               	addwfc	(??_enleveTuilesAutour+11)& (0+255),f,b
  4272  000B2C  50F3               	movf	243,w,c
  4273  000B2E  2771               	addwf	(??_enleveTuilesAutour+10)& (0+255),f,b
  4274  000B30  50F4               	movf	244,w,c
  4275  000B32  2372               	addwfc	(??_enleveTuilesAutour+11)& (0+255),f,b
  4276  000B34  0100               	movlb	0	; force () banked
  4277  000B36  5160               	movf	?___wmul& (0+255),w,b
  4278  000B38  0100               	movlb	0	; force () banked
  4279  000B3A  2771               	addwf	(??_enleveTuilesAutour+10)& (0+255),f,b
  4280  000B3C  0100               	movlb	0	; force () banked
  4281  000B3E  5161               	movf	(?___wmul+1)& (0+255),w,b
  4282  000B40  0100               	movlb	0	; force () banked
  4283  000B42  2372               	addwfc	(??_enleveTuilesAutour+11)& (0+255),f,b
  4284  000B44  0100               	movlb	0	; force () banked
  4285  000B46  5179               	movf	enleveTuilesAutour@x& (0+255),w,b
  4286  000B48  0100               	movlb	0	; force () banked
  4287  000B4A  2771               	addwf	(??_enleveTuilesAutour+10)& (0+255),f,b
  4288  000B4C  0E00               	movlw	0
  4289  000B4E  2372               	addwfc	(??_enleveTuilesAutour+11)& (0+255),f,b
  4290  000B50  516D               	movf	(??_enleveTuilesAutour+6)& (0+255),w,b
  4291  000B52  2571               	addwf	(??_enleveTuilesAutour+10)& (0+255),w,b
  4292  000B54  6EE1               	movwf	fsr1l,c
  4293  000B56  516E               	movf	(??_enleveTuilesAutour+7)& (0+255),w,b
  4294  000B58  2172               	addwfc	(??_enleveTuilesAutour+11)& (0+255),w,b
  4295  000B5A  6EE2               	movwf	fsr1h,c
  4296  000B5C  CFDF FFE7          	movff	indf2,indf1
  4297  000B60                     l2086:
  4298                           
  4299                           ; BSR set to: 0
  4300  000B60  0100               	movlb	0	; force () banked
  4301  000B62  2B78               	incf	enleveTuilesAutour@m& (0+255),f,b
  4302  000B64                     l2088:
  4303                           
  4304                           ; BSR set to: 0
  4305  000B64  0100               	movlb	0	; force () banked
  4306  000B66  5178               	movf	enleveTuilesAutour@m& (0+255),w,b
  4307  000B68  0A80               	xorlw	128
  4308  000B6A  0100               	movlb	0	; force () banked
  4309  000B6C  6F67               	movwf	??_enleveTuilesAutour& (0+255),b
  4310  000B6E  0100               	movlb	0	; force () banked
  4311  000B70  5174               	movf	enleveTuilesAutour@maxY& (0+255),w,b
  4312  000B72  0A80               	xorlw	128
  4313  000B74  0100               	movlb	0	; force () banked
  4314  000B76  5D67               	subwf	??_enleveTuilesAutour& (0+255),w,b
  4315  000B78  A0D8               	btfss	status,0,c
  4316  000B7A  EFC1  F005         	goto	u1041
  4317  000B7E  EFC3  F005         	goto	u1040
  4318  000B82                     u1041:
  4319  000B82  EFF2  F004         	goto	l2082
  4320  000B86                     u1040:
  4321  000B86                     
  4322                           ; BSR set to: 0
  4323  000B86  0100               	movlb	0	; force () banked
  4324  000B88  2B77               	incf	enleveTuilesAutour@j& (0+255),f,b
  4325  000B8A                     l2092:
  4326                           
  4327                           ; BSR set to: 0
  4328  000B8A  0100               	movlb	0	; force () banked
  4329  000B8C  5177               	movf	enleveTuilesAutour@j& (0+255),w,b
  4330  000B8E  0A80               	xorlw	128
  4331  000B90  0100               	movlb	0	; force () banked
  4332  000B92  6F67               	movwf	??_enleveTuilesAutour& (0+255),b
  4333  000B94  0100               	movlb	0	; force () banked
  4334  000B96  5176               	movf	enleveTuilesAutour@maxX& (0+255),w,b
  4335  000B98  0A80               	xorlw	128
  4336  000B9A  0100               	movlb	0	; force () banked
  4337  000B9C  5D67               	subwf	??_enleveTuilesAutour& (0+255),w,b
  4338  000B9E  A0D8               	btfss	status,0,c
  4339  000BA0  EFD4  F005         	goto	u1051
  4340  000BA4  EFD6  F005         	goto	u1050
  4341  000BA8                     u1051:
  4342  000BA8  EFEE  F004         	goto	l175
  4343  000BAC                     u1050:
  4344  000BAC                     
  4345                           ; BSR set to: 0
  4346  000BAC  0012               	return		;funcret
  4347  000BAE                     __end_of_enleveTuilesAutour:
  4348                           	opt callstack 0
  4349                           
  4350 ;; *************** function _afficheTabVue *****************
  4351 ;; Defined at:
  4352 ;;		line 182 in file "main.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  k               2    9[BANK0 ] int 
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4366 ;;      Params:         0       0       0       0       0       0       0
  4367 ;;      Locals:         0       2       0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0
  4369 ;;      Totals:         0       2       0       0       0       0       0
  4370 ;;Total ram usage:        2 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:    5
  4373 ;; This function calls:
  4374 ;;		___wmul
  4375 ;;		_lcd_effaceAffichage
  4376 ;;		_lcd_gotoXY
  4377 ;;		_lcd_putMessage
  4378 ;; This function is called by:
  4379 ;;		_main
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text22
  4384  00174E                     __ptext22:
  4385                           	opt callstack 0
  4386  00174E                     _afficheTabVue:
  4387                           	opt callstack 25
  4388  00174E                     
  4389                           ;main.c: 184: lcd_effaceAffichage();
  4390  00174E  EC8D  F00E         	call	_lcd_effaceAffichage	;wreg free
  4391  001752                     
  4392                           ;main.c: 185: for(int k = 0 ; k < 4 ; k++)
  4393  001752  0E00               	movlw	0
  4394  001754  0100               	movlb	0	; force () banked
  4395  001756  6F6A               	movwf	(afficheTabVue@k+1)& (0+255),b
  4396  001758  0E00               	movlw	0
  4397  00175A  6F69               	movwf	afficheTabVue@k& (0+255),b
  4398  00175C                     
  4399                           ; BSR set to: 0
  4400  00175C  0100               	movlb	0	; force () banked
  4401  00175E  BF6A               	btfsc	(afficheTabVue@k+1)& (0+255),7,b
  4402  001760  EFBB  F00B         	goto	u1331
  4403  001764  516A               	movf	(afficheTabVue@k+1)& (0+255),w,b
  4404  001766  E109               	bnz	u1330
  4405  001768  0E04               	movlw	4
  4406  00176A  5D69               	subwf	afficheTabVue@k& (0+255),w,b
  4407  00176C  A0D8               	btfss	status,0,c
  4408  00176E  EFBB  F00B         	goto	u1331
  4409  001772  EFBD  F00B         	goto	u1330
  4410  001776                     u1331:
  4411  001776  EFBF  F00B         	goto	l2320
  4412  00177A                     u1330:
  4413  00177A  EFEF  F00B         	goto	l108
  4414  00177E                     l2320:
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;main.c: 186: {;main.c: 187: lcd_gotoXY(1, (k+1) );
  4418  00177E  0100               	movlb	0	; force () banked
  4419  001780  2969               	incf	afficheTabVue@k& (0+255),w,b
  4420  001782  0100               	movlb	0	; force () banked
  4421  001784  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  4422  001786  0E01               	movlw	1
  4423  001788  EC39  F00C         	call	_lcd_gotoXY
  4424  00178C                     
  4425                           ;main.c: 188: lcd_putMessage(m_tabVue[k]);
  4426  00178C  C069  F060         	movff	afficheTabVue@k,___wmul@multiplier
  4427  001790  C06A  F061         	movff	afficheTabVue@k+1,___wmul@multiplier+1
  4428  001794  0E00               	movlw	0
  4429  001796  0100               	movlb	0	; force () banked
  4430  001798  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4431  00179A  0E15               	movlw	21
  4432  00179C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4433  00179E  EC57  F00E         	call	___wmul	;wreg free
  4434  0017A2  0E00               	movlw	low _m_tabVue
  4435  0017A4  0100               	movlb	0	; force () banked
  4436  0017A6  2560               	addwf	?___wmul& (0+255),w,b
  4437  0017A8  0100               	movlb	0	; force () banked
  4438  0017AA  6F66               	movwf	lcd_putMessage@chaine& (0+255),b
  4439  0017AC  0E01               	movlw	high _m_tabVue
  4440  0017AE  0100               	movlb	0	; force () banked
  4441  0017B0  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  4442  0017B2  0100               	movlb	0	; force () banked
  4443  0017B4  6F67               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  4444  0017B6  EC91  F00D         	call	_lcd_putMessage	;wreg free
  4445  0017BA  0100               	movlb	0	; force () banked
  4446  0017BC  4B69               	infsnz	afficheTabVue@k& (0+255),f,b
  4447  0017BE  2B6A               	incf	(afficheTabVue@k+1)& (0+255),f,b
  4448  0017C0                     
  4449                           ; BSR set to: 0
  4450  0017C0  0100               	movlb	0	; force () banked
  4451  0017C2  BF6A               	btfsc	(afficheTabVue@k+1)& (0+255),7,b
  4452  0017C4  EFED  F00B         	goto	u1341
  4453  0017C8  516A               	movf	(afficheTabVue@k+1)& (0+255),w,b
  4454  0017CA  E109               	bnz	u1340
  4455  0017CC  0E04               	movlw	4
  4456  0017CE  5D69               	subwf	afficheTabVue@k& (0+255),w,b
  4457  0017D0  A0D8               	btfss	status,0,c
  4458  0017D2  EFED  F00B         	goto	u1341
  4459  0017D6  EFEF  F00B         	goto	u1340
  4460  0017DA                     u1341:
  4461  0017DA  EFBF  F00B         	goto	l2320
  4462  0017DE                     u1340:
  4463  0017DE                     l108:
  4464                           
  4465                           ; BSR set to: 0
  4466  0017DE  0012               	return		;funcret
  4467  0017E0                     __end_of_afficheTabVue:
  4468                           	opt callstack 0
  4469                           
  4470 ;; *************** function _afficheTabMines *****************
  4471 ;; Defined at:
  4472 ;;		line 167 in file "main.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  k               2    9[BANK0 ] int 
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4486 ;;      Params:         0       0       0       0       0       0       0
  4487 ;;      Locals:         0       2       0       0       0       0       0
  4488 ;;      Temps:          0       0       0       0       0       0       0
  4489 ;;      Totals:         0       2       0       0       0       0       0
  4490 ;;Total ram usage:        2 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; Hardware stack levels required when called:    5
  4493 ;; This function calls:
  4494 ;;		___wmul
  4495 ;;		_lcd_effaceAffichage
  4496 ;;		_lcd_gotoXY
  4497 ;;		_lcd_putMessage
  4498 ;; This function is called by:
  4499 ;;		_main
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text23
  4504  0017E0                     __ptext23:
  4505                           	opt callstack 0
  4506  0017E0                     _afficheTabMines:
  4507                           	opt callstack 25
  4508  0017E0                     
  4509                           ;main.c: 169: lcd_effaceAffichage();
  4510  0017E0  EC8D  F00E         	call	_lcd_effaceAffichage	;wreg free
  4511  0017E4                     
  4512                           ;main.c: 170: for(int k = 0 ; k < 4 ; k++)
  4513  0017E4  0E00               	movlw	0
  4514  0017E6  0100               	movlb	0	; force () banked
  4515  0017E8  6F6A               	movwf	(afficheTabMines@k+1)& (0+255),b
  4516  0017EA  0E00               	movlw	0
  4517  0017EC  6F69               	movwf	afficheTabMines@k& (0+255),b
  4518  0017EE                     
  4519                           ; BSR set to: 0
  4520  0017EE  0100               	movlb	0	; force () banked
  4521  0017F0  BF6A               	btfsc	(afficheTabMines@k+1)& (0+255),7,b
  4522  0017F2  EF04  F00C         	goto	u1511
  4523  0017F6  516A               	movf	(afficheTabMines@k+1)& (0+255),w,b
  4524  0017F8  E109               	bnz	u1510
  4525  0017FA  0E04               	movlw	4
  4526  0017FC  5D69               	subwf	afficheTabMines@k& (0+255),w,b
  4527  0017FE  A0D8               	btfss	status,0,c
  4528  001800  EF04  F00C         	goto	u1511
  4529  001804  EF06  F00C         	goto	u1510
  4530  001808                     u1511:
  4531  001808  EF08  F00C         	goto	l2422
  4532  00180C                     u1510:
  4533  00180C  EF38  F00C         	goto	l103
  4534  001810                     l2422:
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;main.c: 171: {;main.c: 172: lcd_gotoXY(1, (k+1) );
  4538  001810  0100               	movlb	0	; force () banked
  4539  001812  2969               	incf	afficheTabMines@k& (0+255),w,b
  4540  001814  0100               	movlb	0	; force () banked
  4541  001816  6F63               	movwf	lcd_gotoXY@y& (0+255),b
  4542  001818  0E01               	movlw	1
  4543  00181A  EC39  F00C         	call	_lcd_gotoXY
  4544  00181E                     
  4545                           ;main.c: 173: lcd_putMessage(m_tabMines[k]);
  4546  00181E  C069  F060         	movff	afficheTabMines@k,___wmul@multiplier
  4547  001822  C06A  F061         	movff	afficheTabMines@k+1,___wmul@multiplier+1
  4548  001826  0E00               	movlw	0
  4549  001828  0100               	movlb	0	; force () banked
  4550  00182A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4551  00182C  0E15               	movlw	21
  4552  00182E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4553  001830  EC57  F00E         	call	___wmul	;wreg free
  4554  001834  0E54               	movlw	low _m_tabMines
  4555  001836  0100               	movlb	0	; force () banked
  4556  001838  2560               	addwf	?___wmul& (0+255),w,b
  4557  00183A  0100               	movlb	0	; force () banked
  4558  00183C  6F66               	movwf	lcd_putMessage@chaine& (0+255),b
  4559  00183E  0E01               	movlw	high _m_tabMines
  4560  001840  0100               	movlb	0	; force () banked
  4561  001842  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  4562  001844  0100               	movlb	0	; force () banked
  4563  001846  6F67               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
  4564  001848  EC91  F00D         	call	_lcd_putMessage	;wreg free
  4565  00184C  0100               	movlb	0	; force () banked
  4566  00184E  4B69               	infsnz	afficheTabMines@k& (0+255),f,b
  4567  001850  2B6A               	incf	(afficheTabMines@k+1)& (0+255),f,b
  4568  001852                     
  4569                           ; BSR set to: 0
  4570  001852  0100               	movlb	0	; force () banked
  4571  001854  BF6A               	btfsc	(afficheTabMines@k+1)& (0+255),7,b
  4572  001856  EF36  F00C         	goto	u1521
  4573  00185A  516A               	movf	(afficheTabMines@k+1)& (0+255),w,b
  4574  00185C  E109               	bnz	u1520
  4575  00185E  0E04               	movlw	4
  4576  001860  5D69               	subwf	afficheTabMines@k& (0+255),w,b
  4577  001862  A0D8               	btfss	status,0,c
  4578  001864  EF36  F00C         	goto	u1521
  4579  001868  EF38  F00C         	goto	u1520
  4580  00186C                     u1521:
  4581  00186C  EF08  F00C         	goto	l2422
  4582  001870                     u1520:
  4583  001870                     l103:
  4584                           
  4585                           ; BSR set to: 0
  4586  001870  0012               	return		;funcret
  4587  001872                     __end_of_afficheTabMines:
  4588                           	opt callstack 0
  4589                           
  4590 ;; *************** function _lcd_putMessage *****************
  4591 ;; Defined at:
  4592 ;;		line 387 in file "Lcd4Lignes.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  chaine          2    6[BANK0 ] PTR const unsigned char 
  4595 ;;		 -> m_tabMines(84), m_tabVue(84), main@afficheNom(21), 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  j               1    8[BANK0 ] unsigned char 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  1    wreg      void 
  4600 ;; Registers used:
  4601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4607 ;;      Params:         0       2       0       0       0       0       0
  4608 ;;      Locals:         0       1       0       0       0       0       0
  4609 ;;      Temps:          0       0       0       0       0       0       0
  4610 ;;      Totals:         0       3       0       0       0       0       0
  4611 ;;Total ram usage:        3 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:    4
  4614 ;; This function calls:
  4615 ;;		_lcd_ecritChar
  4616 ;; This function is called by:
  4617 ;;		_main
  4618 ;;		_afficheTabMines
  4619 ;;		_afficheTabVue
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text24
  4624  001B22                     __ptext24:
  4625                           	opt callstack 0
  4626  001B22                     _lcd_putMessage:
  4627                           	opt callstack 26
  4628  001B22                     
  4629                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  4630  001B22  0E00               	movlw	0
  4631  001B24  0100               	movlb	0	; force () banked
  4632  001B26  6F68               	movwf	lcd_putMessage@j& (0+255),b
  4633  001B28  EFA5  F00D         	goto	l1998
  4634  001B2C                     l1994:
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  4638  001B2C  0100               	movlb	0	; force () banked
  4639  001B2E  5168               	movf	lcd_putMessage@j& (0+255),w,b
  4640  001B30  0100               	movlb	0	; force () banked
  4641  001B32  2566               	addwf	lcd_putMessage@chaine& (0+255),w,b
  4642  001B34  6ED9               	movwf	fsr2l,c
  4643  001B36  0100               	movlb	0	; force () banked
  4644  001B38  0E00               	movlw	0
  4645  001B3A  0100               	movlb	0	; force () banked
  4646  001B3C  2167               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  4647  001B3E  6EDA               	movwf	fsr2h,c
  4648  001B40  50DF               	movf	indf2,w,c
  4649  001B42  EC3E  F00D         	call	_lcd_ecritChar
  4650  001B46  0100               	movlb	0	; force () banked
  4651  001B48  2B68               	incf	lcd_putMessage@j& (0+255),f,b
  4652  001B4A                     l1998:
  4653                           
  4654                           ; BSR set to: 0
  4655  001B4A  0100               	movlb	0	; force () banked
  4656  001B4C  5168               	movf	lcd_putMessage@j& (0+255),w,b
  4657  001B4E  0100               	movlb	0	; force () banked
  4658  001B50  2566               	addwf	lcd_putMessage@chaine& (0+255),w,b
  4659  001B52  6ED9               	movwf	fsr2l,c
  4660  001B54  0100               	movlb	0	; force () banked
  4661  001B56  0E00               	movlw	0
  4662  001B58  0100               	movlb	0	; force () banked
  4663  001B5A  2167               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  4664  001B5C  6EDA               	movwf	fsr2h,c
  4665  001B5E  50DF               	movf	indf2,w,c
  4666  001B60  A4D8               	btfss	status,2,c
  4667  001B62  EFB5  F00D         	goto	u901
  4668  001B66  EFB7  F00D         	goto	u900
  4669  001B6A                     u901:
  4670  001B6A  EF96  F00D         	goto	l1994
  4671  001B6E                     u900:
  4672  001B6E                     
  4673                           ; BSR set to: 0
  4674  001B6E  0012               	return		;funcret
  4675  001B70                     __end_of_lcd_putMessage:
  4676                           	opt callstack 0
  4677                           
  4678 ;; *************** function _lcd_ecritChar *****************
  4679 ;; Defined at:
  4680 ;;		line 359 in file "Lcd4Lignes.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;  car             1    wreg     unsigned char 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;  car             1    3[BANK0 ] unsigned char 
  4685 ;;  posRam          1    4[BANK0 ] unsigned char 
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		wreg, status,2, status,0, cstack
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4695 ;;      Params:         0       0       0       0       0       0       0
  4696 ;;      Locals:         0       2       0       0       0       0       0
  4697 ;;      Temps:          0       0       0       0       0       0       0
  4698 ;;      Totals:         0       2       0       0       0       0       0
  4699 ;;Total ram usage:        2 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:    3
  4702 ;; This function calls:
  4703 ;;		_lcd_wrCom
  4704 ;;		_lcd_wrData
  4705 ;; This function is called by:
  4706 ;;		_lcd_putMessage
  4707 ;; This function uses a non-reentrant model
  4708 ;;
  4709                           
  4710                           	psect	text25
  4711  001A7C                     __ptext25:
  4712                           	opt callstack 0
  4713  001A7C                     _lcd_ecritChar:
  4714                           	opt callstack 26
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;incstack = 0
  4718                           ;lcd_ecritChar@car stored from wreg
  4719  001A7C  0100               	movlb	0	; force () banked
  4720  001A7E  6F63               	movwf	lcd_ecritChar@car& (0+255),b
  4721  001A80                     
  4722                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  4723  001A80  0100               	movlb	0	; force () banked
  4724  001A82  5163               	movf	lcd_ecritChar@car& (0+255),w,b
  4725  001A84  EC13  F00E         	call	_lcd_wrData
  4726  001A88  0100               	movlb	0	; force () banked
  4727  001A8A  6F64               	movwf	lcd_ecritChar@posRam& (0+255),b
  4728                           
  4729                           ;Lcd4Lignes.c: 364: switch(posRam)
  4730  001A8C  EF57  F00D         	goto	l1960
  4731  001A90                     l1952:
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  4735  001A90  0EC0               	movlw	192
  4736  001A92  ECA8  F00C         	call	_lcd_wrCom
  4737                           
  4738                           ;Lcd4Lignes.c: 368: break;
  4739  001A96  EF67  F00D         	goto	l279
  4740  001A9A                     l1954:
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  4744  001A9A  0E94               	movlw	148
  4745  001A9C  ECA8  F00C         	call	_lcd_wrCom
  4746                           
  4747                           ;Lcd4Lignes.c: 371: break;
  4748  001AA0  EF67  F00D         	goto	l279
  4749  001AA4                     l1956:
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  4753  001AA4  0ED4               	movlw	212
  4754  001AA6  ECA8  F00C         	call	_lcd_wrCom
  4755                           
  4756                           ;Lcd4Lignes.c: 374: break;
  4757  001AAA  EF67  F00D         	goto	l279
  4758  001AAE                     l1960:
  4759                           
  4760                           ; BSR set to: 0
  4761  001AAE  0100               	movlb	0	; force () banked
  4762  001AB0  5164               	movf	lcd_ecritChar@posRam& (0+255),w,b
  4763                           
  4764                           ; Switch size 1, requested type "simple"
  4765                           ; Number of cases is 3, Range of values is 148 to 212
  4766                           ; switch strategies available:
  4767                           ; Name         Instructions Cycles
  4768                           ; simple_byte           10     6 (average)
  4769                           ;	Chosen strategy is simple_byte
  4770  001AB2  0A94               	xorlw	148	; case 148
  4771  001AB4  B4D8               	btfsc	status,2,c
  4772  001AB6  EF48  F00D         	goto	l1952
  4773  001ABA  0A54               	xorlw	84	; case 192
  4774  001ABC  B4D8               	btfsc	status,2,c
  4775  001ABE  EF52  F00D         	goto	l1956
  4776  001AC2  0A14               	xorlw	20	; case 212
  4777  001AC4  B4D8               	btfsc	status,2,c
  4778  001AC6  EF4D  F00D         	goto	l1954
  4779  001ACA  EF67  F00D         	goto	l279
  4780  001ACE                     l279:
  4781  001ACE  0012               	return		;funcret
  4782  001AD0                     __end_of_lcd_ecritChar:
  4783                           	opt callstack 0
  4784                           
  4785 ;; *************** function _lcd_wrData *****************
  4786 ;; Defined at:
  4787 ;;		line 188 in file "Lcd4Lignes.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  caractere       1    wreg     unsigned char 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  caractere       1    2[BANK0 ] unsigned char 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      unsigned char 
  4794 ;; Registers used:
  4795 ;;		wreg, status,2, status,0, cstack
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4801 ;;      Params:         0       0       0       0       0       0       0
  4802 ;;      Locals:         0       1       0       0       0       0       0
  4803 ;;      Temps:          0       0       0       0       0       0       0
  4804 ;;      Totals:         0       1       0       0       0       0       0
  4805 ;;Total ram usage:        1 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    2
  4808 ;; This function calls:
  4809 ;;		_lcd_busy
  4810 ;;		_lcd_ecrireDonnees
  4811 ;;		_lcd_strobeEnableBit
  4812 ;; This function is called by:
  4813 ;;		_lcd_ecritChar
  4814 ;;		_lcd_initCGRam
  4815 ;;		_lcd_effaceChar
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           	psect	text26
  4820  001C26                     __ptext26:
  4821                           	opt callstack 0
  4822  001C26                     _lcd_wrData:
  4823                           	opt callstack 26
  4824                           
  4825                           ;incstack = 0
  4826                           ;lcd_wrData@caractere stored from wreg
  4827  001C26  0100               	movlb	0	; force () banked
  4828  001C28  6F62               	movwf	lcd_wrData@caractere& (0+255),b
  4829  001C2A                     
  4830                           ;Lcd4Lignes.c: 190: lcd_busy();
  4831  001C2A  ECB8  F00D         	call	_lcd_busy	;wreg free
  4832  001C2E                     
  4833                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  4834  001C2E  0E00               	movlw	0
  4835  001C30  6E95               	movwf	149,c	;volatile
  4836  001C32                     
  4837                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  4838  001C32  8080               	bsf	128,0,c	;volatile
  4839  001C34                     
  4840                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  4841  001C34  9280               	bcf	128,1,c	;volatile
  4842  001C36                     
  4843                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  4844  001C36  0100               	movlb	0	; force () banked
  4845  001C38  3962               	swapf	lcd_wrData@caractere& (0+255),w,b
  4846  001C3A  0B0F               	andlw	15
  4847  001C3C  EC6B  F00E         	call	_lcd_ecrireDonnees
  4848  001C40                     
  4849                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  4850  001C40  ECA0  F00E         	call	_lcd_strobeEnableBit	;wreg free
  4851  001C44                     
  4852                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  4853  001C44  0100               	movlb	0	; force () banked
  4854  001C46  5162               	movf	lcd_wrData@caractere& (0+255),w,b
  4855  001C48  EC6B  F00E         	call	_lcd_ecrireDonnees
  4856  001C4C                     
  4857                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  4858  001C4C  ECA0  F00E         	call	_lcd_strobeEnableBit	;wreg free
  4859  001C50                     
  4860                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  4861  001C50  0E0F               	movlw	15
  4862  001C52  6E95               	movwf	149,c	;volatile
  4863  001C54                     
  4864                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  4865                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  4866  001C54  ECB8  F00D         	call	_lcd_busy	;wreg free
  4867  001C58  0012               	return		;funcret
  4868  001C5A                     __end_of_lcd_wrData:
  4869                           	opt callstack 0
  4870                           
  4871 ;; *************** function _lcd_gotoXY *****************
  4872 ;; Defined at:
  4873 ;;		line 314 in file "Lcd4Lignes.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;  x               1    wreg     unsigned char 
  4876 ;;  y               1    3[BANK0 ] unsigned char 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;  x               1    4[BANK0 ] unsigned char 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      void 
  4881 ;; Registers used:
  4882 ;;		wreg, status,2, status,0, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4888 ;;      Params:         0       1       0       0       0       0       0
  4889 ;;      Locals:         0       1       0       0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0
  4891 ;;      Totals:         0       2       0       0       0       0       0
  4892 ;;Total ram usage:        2 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    3
  4895 ;; This function calls:
  4896 ;;		_lcd_wrCom
  4897 ;; This function is called by:
  4898 ;;		_main
  4899 ;;		_afficheTabMines
  4900 ;;		_afficheTabVue
  4901 ;;		_deplace
  4902 ;;		_lcd_effaceLigne
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           	psect	text27
  4907  001872                     __ptext27:
  4908                           	opt callstack 0
  4909  001872                     _lcd_gotoXY:
  4910                           	opt callstack 27
  4911                           
  4912                           ;incstack = 0
  4913                           ;lcd_gotoXY@x stored from wreg
  4914  001872  0100               	movlb	0	; force () banked
  4915  001874  6F64               	movwf	lcd_gotoXY@x& (0+255),b
  4916  001876                     
  4917                           ;Lcd4Lignes.c: 316: switch(y)
  4918  001876  EF5D  F00C         	goto	l1990
  4919  00187A                     l1980:
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  4923  00187A  0100               	movlb	0	; force () banked
  4924  00187C  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  4925  00187E  0F7F               	addlw	127
  4926  001880  0980               	iorlw	128
  4927  001882  ECA8  F00C         	call	_lcd_wrCom
  4928                           
  4929                           ;Lcd4Lignes.c: 320: break;
  4930  001886  EF71  F00C         	goto	l268
  4931  00188A                     l1982:
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  4935  00188A  0100               	movlb	0	; force () banked
  4936  00188C  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  4937  00188E  0FBF               	addlw	191
  4938  001890  0980               	iorlw	128
  4939  001892  ECA8  F00C         	call	_lcd_wrCom
  4940                           
  4941                           ;Lcd4Lignes.c: 323: break;
  4942  001896  EF71  F00C         	goto	l268
  4943  00189A                     l1984:
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  4947  00189A  0100               	movlb	0	; force () banked
  4948  00189C  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  4949  00189E  0F93               	addlw	147
  4950  0018A0  0980               	iorlw	128
  4951  0018A2  ECA8  F00C         	call	_lcd_wrCom
  4952                           
  4953                           ;Lcd4Lignes.c: 326: break;
  4954  0018A6  EF71  F00C         	goto	l268
  4955  0018AA                     l1986:
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  4959  0018AA  0100               	movlb	0	; force () banked
  4960  0018AC  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  4961  0018AE  0FD3               	addlw	211
  4962  0018B0  0980               	iorlw	128
  4963  0018B2  ECA8  F00C         	call	_lcd_wrCom
  4964                           
  4965                           ;Lcd4Lignes.c: 329: break;
  4966  0018B6  EF71  F00C         	goto	l268
  4967  0018BA                     l1990:
  4968  0018BA  0100               	movlb	0	; force () banked
  4969  0018BC  5163               	movf	lcd_gotoXY@y& (0+255),w,b
  4970                           
  4971                           ; Switch size 1, requested type "simple"
  4972                           ; Number of cases is 4, Range of values is 1 to 4
  4973                           ; switch strategies available:
  4974                           ; Name         Instructions Cycles
  4975                           ; simple_byte           13     7 (average)
  4976                           ;	Chosen strategy is simple_byte
  4977  0018BE  0A01               	xorlw	1	; case 1
  4978  0018C0  B4D8               	btfsc	status,2,c
  4979  0018C2  EF3D  F00C         	goto	l1980
  4980  0018C6  0A03               	xorlw	3	; case 2
  4981  0018C8  B4D8               	btfsc	status,2,c
  4982  0018CA  EF45  F00C         	goto	l1982
  4983  0018CE  0A01               	xorlw	1	; case 3
  4984  0018D0  B4D8               	btfsc	status,2,c
  4985  0018D2  EF4D  F00C         	goto	l1984
  4986  0018D6  0A07               	xorlw	7	; case 4
  4987  0018D8  B4D8               	btfsc	status,2,c
  4988  0018DA  EF55  F00C         	goto	l1986
  4989  0018DE  EF71  F00C         	goto	l268
  4990  0018E2                     l268:
  4991  0018E2  0012               	return		;funcret
  4992  0018E4                     __end_of_lcd_gotoXY:
  4993                           	opt callstack 0
  4994                           
  4995 ;; *************** function _lcd_effaceAffichage *****************
  4996 ;; Defined at:
  4997 ;;		line 276 in file "Lcd4Lignes.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;		None
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5011 ;;      Params:         0       0       0       0       0       0       0
  5012 ;;      Locals:         0       0       0       0       0       0       0
  5013 ;;      Temps:          0       0       0       0       0       0       0
  5014 ;;      Totals:         0       0       0       0       0       0       0
  5015 ;;Total ram usage:        0 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; Hardware stack levels required when called:    3
  5018 ;; This function calls:
  5019 ;;		_lcd_wrCom
  5020 ;; This function is called by:
  5021 ;;		_main
  5022 ;;		_afficheTabMines
  5023 ;;		_afficheTabVue
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           	psect	text28
  5028  001D1A                     __ptext28:
  5029                           	opt callstack 0
  5030  001D1A                     _lcd_effaceAffichage:
  5031                           	opt callstack 27
  5032  001D1A                     
  5033                           ;Lcd4Lignes.c: 278: lcd_wrCom(0x01);
  5034  001D1A  0E01               	movlw	1
  5035  001D1C  ECA8  F00C         	call	_lcd_wrCom
  5036                           
  5037                           ;Lcd4Lignes.c: 279: lcd_wrCom(0x80);
  5038  001D20  0E80               	movlw	128
  5039  001D22  ECA8  F00C         	call	_lcd_wrCom
  5040  001D26  0012               	return		;funcret
  5041  001D28                     __end_of_lcd_effaceAffichage:
  5042                           	opt callstack 0
  5043                           
  5044 ;; *************** function _lcd_wrCom *****************
  5045 ;; Defined at:
  5046 ;;		line 156 in file "Lcd4Lignes.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  commande        1    wreg     unsigned char 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  commande        1    2[BANK0 ] unsigned char 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  1    wreg      unsigned char 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0, cstack
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5060 ;;      Params:         0       0       0       0       0       0       0
  5061 ;;      Locals:         0       1       0       0       0       0       0
  5062 ;;      Temps:          0       0       0       0       0       0       0
  5063 ;;      Totals:         0       1       0       0       0       0       0
  5064 ;;Total ram usage:        1 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:    2
  5067 ;; This function calls:
  5068 ;;		_lcd_busy
  5069 ;;		_lcd_ecrireDonnees
  5070 ;;		_lcd_strobeEnableBit
  5071 ;; This function is called by:
  5072 ;;		_lcd_init
  5073 ;;		_lcd_effaceAffichage
  5074 ;;		_lcd_curseurHome
  5075 ;;		_lcd_gotoXY
  5076 ;;		_lcd_ecritChar
  5077 ;;		_lcd_cacheCurseur
  5078 ;;		_lcd_montreCurseur
  5079 ;;		_lcd_initCGRam
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           	psect	text29
  5084  001950                     __ptext29:
  5085                           	opt callstack 0
  5086  001950                     _lcd_wrCom:
  5087                           	opt callstack 26
  5088                           
  5089                           ;incstack = 0
  5090                           ;lcd_wrCom@commande stored from wreg
  5091  001950  0100               	movlb	0	; force () banked
  5092  001952  6F62               	movwf	lcd_wrCom@commande& (0+255),b
  5093  001954                     
  5094                           ;Lcd4Lignes.c: 158: lcd_busy();
  5095  001954  ECB8  F00D         	call	_lcd_busy	;wreg free
  5096  001958                     
  5097                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  5098  001958  0E00               	movlw	0
  5099  00195A  6E95               	movwf	149,c	;volatile
  5100  00195C                     
  5101                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  5102  00195C  9080               	bcf	128,0,c	;volatile
  5103  00195E                     
  5104                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  5105  00195E  9280               	bcf	128,1,c	;volatile
  5106  001960                     
  5107                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  5108  001960  0100               	movlb	0	; force () banked
  5109  001962  3962               	swapf	lcd_wrCom@commande& (0+255),w,b
  5110  001964  0B0F               	andlw	15
  5111  001966  EC6B  F00E         	call	_lcd_ecrireDonnees
  5112  00196A                     
  5113                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  5114  00196A  ECA0  F00E         	call	_lcd_strobeEnableBit	;wreg free
  5115  00196E                     
  5116                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  5117  00196E  0100               	movlb	0	; force () banked
  5118  001970  5162               	movf	lcd_wrCom@commande& (0+255),w,b
  5119  001972  EC6B  F00E         	call	_lcd_ecrireDonnees
  5120  001976                     
  5121                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  5122  001976  ECA0  F00E         	call	_lcd_strobeEnableBit	;wreg free
  5123  00197A                     
  5124                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  5125  00197A  0E03               	movlw	3
  5126  00197C                     u1737:
  5127  00197C  2EE8               	decfsz	wreg,f,c
  5128  00197E  D7FE               	bra	u1737
  5129  001980  F000               	nop	
  5130  001982                     
  5131                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  5132  001982  0100               	movlb	0	; force () banked
  5133  001984  0562               	decf	lcd_wrCom@commande& (0+255),w,b
  5134  001986  B4D8               	btfsc	status,2,c
  5135  001988  EFC8  F00C         	goto	u861
  5136  00198C  EFCA  F00C         	goto	u860
  5137  001990                     u861:
  5138  001990  EFD4  F00C         	goto	l1910
  5139  001994                     u860:
  5140  001994                     
  5141                           ; BSR set to: 0
  5142  001994  0E02               	movlw	2
  5143  001996  0100               	movlb	0	; force () banked
  5144  001998  1962               	xorwf	lcd_wrCom@commande& (0+255),w,b
  5145  00199A  A4D8               	btfss	status,2,c
  5146  00199C  EFD2  F00C         	goto	u871
  5147  0019A0  EFD4  F00C         	goto	u870
  5148  0019A4                     u871:
  5149  0019A4  EFD9  F00C         	goto	l1912
  5150  0019A8                     u870:
  5151  0019A8                     l1910:
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  5155  0019A8  0EA6               	movlw	166
  5156  0019AA                     u1747:
  5157  0019AA  2EE8               	decfsz	wreg,f,c
  5158  0019AC  D7FE               	bra	u1747
  5159  0019AE  F000 F000          	nop2	
  5160  0019B2                     l1912:
  5161                           
  5162                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  5163  0019B2  0E0F               	movlw	15
  5164  0019B4  6E95               	movwf	149,c	;volatile
  5165  0019B6                     
  5166                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  5167  0019B6  ECB8  F00D         	call	_lcd_busy	;wreg free
  5168  0019BA  0012               	return		;funcret
  5169  0019BC                     __end_of_lcd_wrCom:
  5170                           	opt callstack 0
  5171                           
  5172 ;; *************** function _lcd_strobeEnableBit *****************
  5173 ;; Defined at:
  5174 ;;		line 431 in file "Lcd4Lignes.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;		None
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;		None
  5179 ;; Return value:  Size  Location     Type
  5180 ;;                  1    wreg      void 
  5181 ;; Registers used:
  5182 ;;		None
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5188 ;;      Params:         0       0       0       0       0       0       0
  5189 ;;      Locals:         0       0       0       0       0       0       0
  5190 ;;      Temps:          0       0       0       0       0       0       0
  5191 ;;      Totals:         0       0       0       0       0       0       0
  5192 ;;Total ram usage:        0 bytes
  5193 ;; Hardware stack levels used:    1
  5194 ;; This function calls:
  5195 ;;		Nothing
  5196 ;; This function is called by:
  5197 ;;		_lcd_wrCom
  5198 ;;		_lcd_wrData
  5199 ;;		_lcd_resetSequence
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text30
  5204  001D40                     __ptext30:
  5205                           	opt callstack 0
  5206  001D40                     _lcd_strobeEnableBit:
  5207                           	opt callstack 27
  5208  001D40                     
  5209                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  5210  001D40  8480               	bsf	128,2,c	;volatile
  5211                           
  5212                           ;Lcd4Lignes.c: 434: __nop();
  5213  001D42  F000               	nop	
  5214                           
  5215                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  5216  001D44  9480               	bcf	128,2,c	;volatile
  5217  001D46  0012               	return		;funcret
  5218  001D48                     __end_of_lcd_strobeEnableBit:
  5219                           	opt callstack 0
  5220                           
  5221 ;; *************** function _lcd_ecrireDonnees *****************
  5222 ;; Defined at:
  5223 ;;		line 107 in file "Lcd4Lignes.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  donnee          1    wreg     unsigned char 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;  donnee          1    1[BANK0 ] unsigned char 
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  1    wreg      void 
  5230 ;; Registers used:
  5231 ;;		wreg, status,2, status,0
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5237 ;;      Params:         0       0       0       0       0       0       0
  5238 ;;      Locals:         0       1       0       0       0       0       0
  5239 ;;      Temps:          0       1       0       0       0       0       0
  5240 ;;      Totals:         0       2       0       0       0       0       0
  5241 ;;Total ram usage:        2 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; This function calls:
  5244 ;;		Nothing
  5245 ;; This function is called by:
  5246 ;;		_lcd_wrCom
  5247 ;;		_lcd_wrData
  5248 ;;		_lcd_resetSequence
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           	psect	text31
  5253  001CD6                     __ptext31:
  5254                           	opt callstack 0
  5255  001CD6                     _lcd_ecrireDonnees:
  5256                           	opt callstack 27
  5257                           
  5258                           ;incstack = 0
  5259                           ;lcd_ecrireDonnees@donnee stored from wreg
  5260  001CD6  0100               	movlb	0	; force () banked
  5261  001CD8  6F61               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  5262  001CDA                     
  5263                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  5264  001CDA  CF83 F060          	movff	3971,??_lcd_ecrireDonnees	;volatile
  5265  001CDE  0EF0               	movlw	240
  5266  001CE0  0100               	movlb	0	; force () banked
  5267  001CE2  1760               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  5268  001CE4  0100               	movlb	0	; force () banked
  5269  001CE6  5161               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  5270  001CE8  0B0F               	andlw	15
  5271  001CEA  0100               	movlb	0	; force () banked
  5272  001CEC  1160               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  5273  001CEE  6E83               	movwf	131,c	;volatile
  5274  001CF0                     
  5275                           ; BSR set to: 0
  5276  001CF0  0012               	return		;funcret
  5277  001CF2                     __end_of_lcd_ecrireDonnees:
  5278                           	opt callstack 0
  5279                           
  5280 ;; *************** function _lcd_busy *****************
  5281 ;; Defined at:
  5282 ;;		line 124 in file "Lcd4Lignes.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;		None
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;  adresse         1    1[BANK0 ] unsigned char 
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      unsigned char 
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0, cstack
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5296 ;;      Params:         0       0       0       0       0       0       0
  5297 ;;      Locals:         0       1       0       0       0       0       0
  5298 ;;      Temps:          0       1       0       0       0       0       0
  5299 ;;      Totals:         0       2       0       0       0       0       0
  5300 ;;Total ram usage:        2 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; Hardware stack levels required when called:    1
  5303 ;; This function calls:
  5304 ;;		_lcd_lireDonnees
  5305 ;; This function is called by:
  5306 ;;		_lcd_wrCom
  5307 ;;		_lcd_wrData
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           
  5311                           	psect	text32
  5312  001B70                     __ptext32:
  5313                           	opt callstack 0
  5314  001B70                     _lcd_busy:
  5315                           	opt callstack 26
  5316  001B70                     
  5317                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  5318  001B70  9080               	bcf	128,0,c	;volatile
  5319                           
  5320                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  5321  001B72  8280               	bsf	128,1,c	;volatile
  5322  001B74                     l230:
  5323                           
  5324                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  5325  001B74  8480               	bsf	128,2,c	;volatile
  5326                           
  5327                           ;Lcd4Lignes.c: 134: __nop();
  5328  001B76  F000               	nop	
  5329  001B78                     
  5330                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  5331  001B78  ECA4  F00E         	call	_lcd_lireDonnees	;wreg free
  5332  001B7C  0100               	movlb	0	; force () banked
  5333  001B7E  6F60               	movwf	??_lcd_busy& (0+255),b
  5334  001B80  3960               	swapf	??_lcd_busy& (0+255),w,b
  5335  001B82  0BF0               	andlw	240
  5336  001B84  0100               	movlb	0	; force () banked
  5337  001B86  6F61               	movwf	lcd_busy@adresse& (0+255),b
  5338  001B88                     
  5339                           ; BSR set to: 0
  5340                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  5341  001B88  9480               	bcf	128,2,c	;volatile
  5342  001B8A                     
  5343                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  5344  001B8A  8480               	bsf	128,2,c	;volatile
  5345  001B8C                     
  5346                           ;Lcd4Lignes.c: 139: __nop();
  5347  001B8C  F000               	nop	
  5348                           
  5349                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  5350  001B8E  ECA4  F00E         	call	_lcd_lireDonnees	;wreg free
  5351  001B92  0100               	movlb	0	; force () banked
  5352  001B94  1361               	iorwf	lcd_busy@adresse& (0+255),f,b
  5353  001B96                     
  5354                           ; BSR set to: 0
  5355                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  5356  001B96  9480               	bcf	128,2,c	;volatile
  5357  001B98                     
  5358                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  5359  001B98  0100               	movlb	0	; force () banked
  5360  001B9A  BF61               	btfsc	lcd_busy@adresse& (0+255),7,b
  5361  001B9C  EFD2  F00D         	goto	u851
  5362  001BA0  EFD4  F00D         	goto	u850
  5363  001BA4                     u851:
  5364  001BA4  EFBA  F00D         	goto	l230
  5365  001BA8                     u850:
  5366  001BA8                     
  5367                           ; BSR set to: 0
  5368                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  5369  001BA8  9280               	bcf	128,1,c	;volatile
  5370  001BAA                     
  5371                           ; BSR set to: 0
  5372                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  5373  001BAA  0100               	movlb	0	; force () banked
  5374  001BAC  5161               	movf	lcd_busy@adresse& (0+255),w,b
  5375  001BAE  0B7F               	andlw	127
  5376  001BB0                     
  5377                           ; BSR set to: 0
  5378  001BB0  0012               	return		;funcret
  5379  001BB2                     __end_of_lcd_busy:
  5380                           	opt callstack 0
  5381                           
  5382 ;; *************** function _lcd_lireDonnees *****************
  5383 ;; Defined at:
  5384 ;;		line 93 in file "Lcd4Lignes.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;		None
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;		None
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  1    wreg      unsigned char 
  5391 ;; Registers used:
  5392 ;;		wreg, status,2, status,0
  5393 ;; Tracked objects:
  5394 ;;		On entry : 0/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5398 ;;      Params:         0       0       0       0       0       0       0
  5399 ;;      Locals:         0       0       0       0       0       0       0
  5400 ;;      Temps:          0       0       0       0       0       0       0
  5401 ;;      Totals:         0       0       0       0       0       0       0
  5402 ;;Total ram usage:        0 bytes
  5403 ;; Hardware stack levels used:    1
  5404 ;; This function calls:
  5405 ;;		Nothing
  5406 ;; This function is called by:
  5407 ;;		_lcd_busy
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text33
  5412  001D48                     __ptext33:
  5413                           	opt callstack 0
  5414  001D48                     _lcd_lireDonnees:
  5415                           	opt callstack 26
  5416  001D48                     
  5417                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  5418  001D48  5083               	movf	131,w,c	;volatile
  5419  001D4A  0B0F               	andlw	15
  5420  001D4C  0012               	return		;funcret
  5421  001D4E                     __end_of_lcd_lireDonnees:
  5422                           	opt callstack 0
  5423                           
  5424 ;; *************** function ___wmul *****************
  5425 ;; Defined at:
  5426 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5429 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;  product         2    4[BANK0 ] unsigned int 
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  2    0[BANK0 ] unsigned int 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0, prodl, prodh
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5441 ;;      Params:         0       4       0       0       0       0       0
  5442 ;;      Locals:         0       2       0       0       0       0       0
  5443 ;;      Temps:          0       0       0       0       0       0       0
  5444 ;;      Totals:         0       6       0       0       0       0       0
  5445 ;;Total ram usage:        6 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_main
  5451 ;;		_afficheTabMines
  5452 ;;		_afficheTabVue
  5453 ;;		_initTabVue
  5454 ;;		_rempliMines
  5455 ;;		_metToucheCombien
  5456 ;;		_calculToucheCombien
  5457 ;;		_enleveTuilesAutour
  5458 ;;		_gagne
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           	psect	text34
  5463  001CAE                     __ptext34:
  5464                           	opt callstack 0
  5465  001CAE                     ___wmul:
  5466                           	opt callstack 29
  5467  001CAE  0100               	movlb	0	; () banked
  5468  001CB0  5160               	movf	___wmul@multiplier& (0+255),w,b
  5469  001CB2  0362               	mulwf	___wmul@multiplicand& (0+255),b
  5470  001CB4  CFF3 F064          	movff	prodl,___wmul@product
  5471  001CB8  CFF4 F065          	movff	prodh,___wmul@product+1
  5472  001CBC  5160               	movf	___wmul@multiplier& (0+255),w,b
  5473  001CBE  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5474  001CC0  50F3               	movf	243,w,c
  5475  001CC2  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  5476  001CC4  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5477  001CC6  0362               	mulwf	___wmul@multiplicand& (0+255),b
  5478  001CC8  50F3               	movf	243,w,c
  5479  001CCA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  5480  001CCC                     
  5481                           ; BSR set to: 0
  5482  001CCC  C064  F060         	movff	___wmul@product,?___wmul
  5483  001CD0  C065  F061         	movff	___wmul@product+1,?___wmul+1
  5484  001CD4                     
  5485                           ; BSR set to: 0
  5486  001CD4  0012               	return		;funcret
  5487  001CD6                     __end_of___wmul:
  5488                           	opt callstack 0
  5489                           
  5490                           	psect	param0
  5491  0000                     tosu	equ	0xFFF
  5492                           tosh	equ	0xFFE
  5493                           tosl	equ	0xFFD
  5494                           stkptr	equ	0xFFC
  5495                           pclatu	equ	0xFFB
  5496                           pclath	equ	0xFFA
  5497                           pcl	equ	0xFF9
  5498                           tblptru	equ	0xFF8
  5499                           tblptrh	equ	0xFF7
  5500                           tblptrl	equ	0xFF6
  5501                           tablat	equ	0xFF5
  5502                           prodh	equ	0xFF4
  5503                           prodl	equ	0xFF3
  5504                           indf0	equ	0xFEF
  5505                           postinc0	equ	0xFEE
  5506                           postdec0	equ	0xFED
  5507                           preinc0	equ	0xFEC
  5508                           plusw0	equ	0xFEB
  5509                           fsr0h	equ	0xFEA
  5510                           fsr0l	equ	0xFE9
  5511                           wreg	equ	0xFE8
  5512                           indf1	equ	0xFE7
  5513                           postinc1	equ	0xFE6
  5514                           postdec1	equ	0xFE5
  5515                           preinc1	equ	0xFE4
  5516                           plusw1	equ	0xFE3
  5517                           fsr1h	equ	0xFE2
  5518                           fsr1l	equ	0xFE1
  5519                           bsr	equ	0xFE0
  5520                           indf2	equ	0xFDF
  5521                           postinc2	equ	0xFDE
  5522                           postdec2	equ	0xFDD
  5523                           preinc2	equ	0xFDC
  5524                           plusw2	equ	0xFDB
  5525                           fsr2h	equ	0xFDA
  5526                           fsr2l	equ	0xFD9
  5527                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    21
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160    147     151
    BANK1           256      0     232
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 84
		 -> m_tabMines(BANK1[84]), m_tabVue(BANK1[84]), main@afficheNom(BANK0[21]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@nbMines(BANK0[2]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 2
		 -> main@posY(BANK0[2]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 2
		 -> main@posX(BANK0[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_montreCurseur->_lcd_wrCom
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _lcd_cacheCurseur->_lcd_wrCom
    _initialisation->_srand
    _initTabVue->___wmul
    _gagne->___wmul
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _enleveTuilesAutour->___wmul
    _afficheTabVue->_lcd_putMessage
    _afficheTabMines->_lcd_putMessage
    _lcd_putMessage->___wmul
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_effaceAffichage->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0   38580
                                            113 BANK0     34    34      0
                             ___wmul
                    _afficheTabMines
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                     _initialisation
                   _lcd_cacheCurseur
                _lcd_effaceAffichage
                         _lcd_gotoXY
                           _lcd_init
                  _lcd_montreCurseur
                     _lcd_putMessage
                   _metToucheCombien
                        _rempliMines
                           _testEtat
 ---------------------------------------------------------------------------------
 (1) _testEtat                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                         93    91      2    4446
                                             20 BANK0     93    91      2
                            ___awmod
                             ___wmul
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     8     8      0    6852
                                             22 BANK0      8     8      0
                             ___wmul
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 16    12      4    3539
                                              6 BANK0     16    12      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcd_montreCurseur                                    0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_cacheCurseur                                     0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           6     6      0    3179
                                              6 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _gagne                                               11     9      2    3323
                                              6 BANK0     11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _deplace                                              9     5      4    1382
                                              5 BANK0      9     5      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                              10     9      1    3911
                                             26 BANK0     10     9      1
                 _enleveTuilesAutour
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                  20    19      1    3615
                                              6 BANK0     20    19      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _afficheTabVue                                        2     2      0    4642
                                              9 BANK0      2     2      0
                             ___wmul
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _afficheTabMines                                      2     2      0    4642
                                              9 BANK0      2     2      0
                             ___wmul
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       3     1      2     631
                                              6 BANK0      3     1      2
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoXY                                           2     1      1     722
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3043
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _afficheTabMines
     ___wmul
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _afficheTabVue
     ___wmul
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _enleveTuilesAutour
       ___wmul
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
     ___wmul
   _initTabVue
     ___wmul
   _initialisation
     _srand
   _lcd_cacheCurseur
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_effaceAffichage
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_gotoXY
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_montreCurseur
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     ___wmul (ARG)
     _lcd_ecritChar (ARG)
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _metToucheCombien
     ___wmul
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     ___wmul
     _rand
       ___lmul
   _testEtat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      E8       6       90.6%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      97       4       94.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17F      14        0.0%
DATA                 0      0     17F      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec 06 16:30:39 2019

 __end_of_calculToucheCombien 112C                            l91 0934                            l93 0938  
        ??_enleveTuilesAutour 0067           ___wmul@multiplicand 0062                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
__size_of_lcd_strobeEnableBit 0008                           l103 1870                           l202 1C84  
                         l115 15F8                           l108 17DE                           l301 1D46  
                         l205 1C24                           l230 1B74                           l231 1BA8  
                         l143 1038                           l135 129E                           l127 0DF2  
                         l224 1D4C                           l232 1BB0                           l241 1C58  
                         l153 0E8C                           l250 1D26                           l162 0FB0  
                         l146 10DA                           l227 1CF0                           l244 1A24  
                         l181 0BAC                           l253 1D36                           l149 112A  
                         l238 19BA                           l166 150E                           l158 0F4A  
                         l190 13DC                           l351 1CD4                           l175 09DC  
                         l247 1CAC                           l362 193E                           l291 1D2E  
                         l363 194E                           l195 1D08                           l268 18E2  
                         l188 135C                           l285 1B6E                           l279 1ACE  
                         l199 1C74                           l288 1D3E                           l298 174C  
                         l595 16AA                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         u900 1B6E                           u901 1B6A                           u910 0FE0  
                         u911 0FDC                           u920 0FFA                           u921 0FF6  
                         u850 1BA8                           u930 1012                           u851 1BA4  
                         u931 100E                           u860 1994                           u940 102C  
                         u861 1990                           u941 1028                           u870 19A8  
                         u950 10D6                           u871 19A4                           u951 10D2  
                         u960 1100                           u880 1904                           u961 10FC  
                         u881 1900                           u970 1126                           u890 193E  
                         u971 1122                           u891 193A                           u980 1C82  
                         u981 1C7E                           u990 098A                           u991 0986  
                __CFG_BORV$18 000000                  ___awmod@sign 0073                   lcd_gotoXY@x 0064  
                         wreg 000FE8                   lcd_gotoXY@y 0063  __size_of_lcd_effaceAffichage 000E  
                 main@nbMines 00EC                  __CFG_LVP$OFF 000000                          l1015 1D18  
                        l2000 1D1A                          l2010 0FB2                          l1018 1A7A  
                        l2002 1A26                          l2100 19D4                          l2020 0FE4  
                        l2012 0FB8                          l2004 1A5C                          l2110 19EA  
                        l2102 19D6                          l2030 102C                          l2022 0FFA  
                        l2014 0FC2                          l2006 1A6E                          l2200 1C12  
                        l2120 1A06                          l2112 19F0                          l2104 19D8  
                        l2040 1100                          l2032 1030                          l2024 0FFE  
                        l2016 0FCC                          l2050 1C72                          l2210 1C20  
                        l2202 1C14                          l2130 16AC                          l2122 1A0E  
                        l2114 19F4                          l2106 19DE                          l2034 1040  
                        l2042 1104                          l2026 1012                          l2018 0FE0  
                        l2060 0968                          l2052 1C72                          l2204 1C16  
                        l2140 16D4                          l2132 16B2                          l2124 1A14  
                        l2116 19FC                          l2108 19E2                          l2212 1C86  
                        l2044 1126                          l2036 10D6                          l2028 1016  
                        l2300 11B4                          l2070 09A2                          l2062 096E  
                        l2054 1C82                          l2230 151A                          l2206 1C1A  
                        l2150 1732                          l2134 16B8                          l2126 1A18  
                        l2118 1A02                          l2214 1CA8                          l2038 10DE  
                        l2310 1280                          l2302 120A                          l2320 177E  
                        l2312 174E                          l2080 09D4                          l2072 09A6  
                        l2064 0978                          l2048 1C5E                          l2400 13C6  
                        l2240 1568                          l2208 1C1C                          l2152 1736  
                        l2144 16EA                          l2128 1A20                          l2304 1256  
                        l2160 160E                          l2224 1D06                          l2216 1CF2  
                        l2322 178C                          l2314 1752                          l2090 0B86  
                        l2082 09E4                          l2074 09B8                          l2066 098A  
                        l2058 0964                          l2330 0E18                          l2402 13D4  
                        l2242 15B0                          l2234 153C                          l2146 171C  
                        l2154 1748                          l2138 16CE                          l2306 125C  
                        l2170 1642                          l2162 1616                          l2250 0BAE  
                        l2218 1D00                          l2324 17BA                          l2316 175C  
                        l2084 0A6E                          l2092 0B8A                          l2076 09BC  
                        l2068 098E                          l2340 0EB2                          l2332 0E36  
                        l2244 15B6                          l2236 1546                          l2228 1510  
                        l2412 1D38                          l2148 1720                          l2308 127A  
                        l2180 167E                          l2172 164A                          l2164 161A  
                        l2156 15FA                          l2252 0BC4                          l2500 078C  
                        l2422 1810                          l2414 17E0                          l2326 17C0  
                        l2086 0B60                          l2078 09D0                          l2350 0F30  
                        l2342 0ECA                          l2334 0E54                          l2246 15D4  
                        l2094 1D0A                          l2430 1D28                          l2182 1684  
                        l2174 1652                          l2166 1628                          l2158 1600  
                        l2270 0CCC                          l2262 0C12                          l2510 07A8  
                        l2502 0790                          l2424 181E                          l2416 17E4  
                        l2088 0B64                          l2360 13E2                          l2352 0F64  
                        l2344 0ED6                          l2336 0E72                          l2328 0DF4  
                        l2408 13DA                          l2248 15DA                          l2192 1BF2  
                        l2096 19BC                          l2176 1660                          l2184 168A  
                        l2168 1630                          l2280 0DC4                          l2264 0CA2  
                        l2272 0CEA                          l2256 0BE6                          l2512 07B6  
                        l2520 0946                          l2504 079C                          l2440 0618  
                        l2426 184C                          l2418 17EE                          l2370 1500  
                        l2362 1430                          l2354 0F70                          l2346 0EF4  
                        l2338 0EA6                          l2194 1BFA                          l2098 19C0  
                        l2290 115E                          l2186 169A                          l2178 1676  
                        l2274 0CF8                          l2282 0DCA                          l2266 0CA8  
                        l2258 0BF0                          l2514 081A                          l2506 07A0  
                        l2450 0654                          l2442 0634                          l1900 196E  
                        l2428 1852                          l2372 150C                          l2356 0F88  
                        l2348 0F12                          l2196 1C04                          l2292 1168  
                        l2284 112C                          l2188 16A2                          l2276 0D28  
                        l2268 0CC6                          l2516 0876                          l2508 07A4  
                        l2460 0672                          l2452 065E                          l2444 063E  
                        l1910 19A8                          l1902 1976                          l2366 1436  
                        l2358 0F94                          l2390 1356                          l2382 12D6  
                        l2198 1C06                          l2286 113C                          l2278 0D64  
                        l2518 08DC                          l2470 06B0                          l2462 067E  
                        l2454 0662                          l2446 0648                          l1912 19B2  
                        l1904 197A                          l1920 1C2A                          l2368 14B2  
                        l2392 1362                          l2384 12E0                          l2376 12A0  
                        l2296 118A                          l2480 06E4                          l2472 06BC  
                        l2464 068C                          l2456 0666                          l2448 064E  
                        l1914 19B6                          l1906 1982                          l1930 1C36  
                        l1922 1C2E                          l2394 1380                          l2378 12B4  
                        l2298 11A2                          l2490 074A                          l2482 06FA  
                        l2474 06C0                          l2466 06A8                          l2458 066E  
                        l1860 1B70                          l1916 19B6                          l1908 1994  
                        l1940 1C50                          l1932 1C40                          l1924 1C32  
                        l2396 1386                          l2388 1302                          l2492 074E  
                        l2484 070C                          l2476 06C4                          l2468 06AC  
                        l1854 1D48                          l1870 1B8C                          l1862 1B78  
                        l1942 1C50                          l1934 1C44                          l1926 1C32  
                        l1950 1A80                          l2398 13A4                          l2494 0762  
                        l2486 0728                          l2478 06DC                          l1872 1B96  
                        l1864 1B88                          l1944 1C54                          l1936 1C44  
                        l1928 1C34                          l1952 1A90                          l1960 1AAE  
                        l2496 0774                          l2488 0746                          l1962 1CAE  
                        l1874 1B98                          l1866 1B8A                          l1858 1CDA  
                        l1882 1D40                          l1890 195C                          l1938 1C4C  
                        l1954 1A9A                          l1970 18F6                          l2498 0788  
                        l1964 1CCC                          l1876 1B98                          l1868 1B8A  
                        l1892 195E                          l1884 1954                          l1980 187A  
                        l1956 1AA4                          l1948 1D30                          l1972 1904  
                        l1878 1BAA                          l1894 1960                          l1886 1958  
                        l1982 188A                          l1990 18BA                          l1974 1914  
                        l1896 196A                          l1888 195C                          l1984 189A  
                        l1992 1B22                          l1976 191E                          l1968 18E4  
                        l1898 196E                          l1986 18AA                          l1978 1876  
                        l1994 1B2C                          l1996 1B46                          l1998 1B4A  
                        u1000 09A2                          u1001 099E                          u1010 09B8  
                        u1011 09B4                          u1020 09D0                          u1100 160E  
                        u1021 09CC                          u1101 160A                          u1030 0A6E  
                        u1110 1628                          u1031 0A6A                          u1111 1624  
                        u1040 0B86                          u1200 15F8                          u1120 1642  
                        u1041 0B82                          u1201 15F4                          u1121 163E  
                        u1050 0BAC                          u1130 1660                          u1210 0BE2  
                        u1051 0BA8                          u1131 165C                          u1211 0BDE  
                        u1060 16CA                          u1300 120A                          u1140 1676  
                        u1220 0C0E                          u1061 16C6                          u1301 1206  
                        u1141 1672                          u1221 0C0A                          u1070 16E6  
                        u1310 127A                          u1150 169A                          u1230 0CC6  
                        u1071 16E2                          u1311 1276                          u1151 1696  
                        u1231 0CC2                          u1400 0F30                          u1080 1732  
                        u1320 129E                          u1240 0CEA                          u1160 1D00  
                        u1401 0F2C                          u1081 172E                          u1321 129A  
                        u1241 0CE6                          u1161 1CFC                          u1330 177A  
                        u1410 0F64                          u1170 1538                          u1090 1748  
                        u1250 0D64                          u1331 1776                          u1411 0F60  
                        u1171 1534                          u1091 1744                          u1251 0D60  
                        u1340 17DE                          u1420 0F88                          u1500 13C6  
                        u1180 1564                          u1260 0DF2                          u1341 17DA  
                        u1421 0F84                          u1501 13C2                          u1181 1560  
                        u1261 0DEE                          u1510 180C                          u1430 1430  
                        u1350 0E36                          u1190 15D4                          u1270 115A  
                        u1511 1808                          u1431 142C                          u1351 0E32  
                        u1191 15D0                          u1271 1156                          u1520 1870  
                        u1440 1500                          u1360 0E72                          u1280 1186  
                        u1600 07B6                          u1521 186C                          u1441 14FC  
                        u1361 0E6E                          u1281 1182                          u1601 07B2  
                        u1370 0EA6                          u1450 12D2                          u1290 11B4  
                        u1610 081A                          u1371 0EA2                          u1451 12CE  
                        u1291 11B0                          u1611 0816                          u1380 0ECA  
                        u1460 12FE                          u1620 08DC                          u1540 062A  
                        u1381 0EC6                          u1461 12FA                          u1621 08D8  
                        u1390 0EF4                          u1470 1356                          u1630 0946  
                        u1550 06FA                          u1391 0EF0                          u1471 1352  
                        u1631 0942                          u1551 06F6                          u1480 1380  
                        u1560 070C                          u1481 137C                          u1561 0708  
                        u1490 13A4                          u1570 0728                          u1491 13A0  
                        u1707 19F6                          u1571 0724                          u1580 0746  
                        u1717 1A08                          u1581 0742                          u1590 0788  
                        u1727 1A1A                          u1591 0784                          u1647 0698  
                        u1737 197C                          u1657 0756                          u1747 19AA  
                        u1667 076A                          u1677 094E                          u1687 19C8  
                        u1697 19E4                          _RCIF 007CF5                          _TMR1 000FCE  
            ??_initialisation 0062                          _main 0618                          _rand 1A26  
                        fsr2h 000FDA                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          prodh 000FF4  
                        prodl 000FF3                          start 0000               ?_lcd_putMessage 0066  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
             ??_lcd_ecritChar 0063                         ?_main 0060                         ?_rand 006C  
             __end_of___awmod 16AC                         _ANSEL 000F7E                         _RCREG 000FAE  
                       _SPBRG 000FAF                         _PORTD 000F83                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISD 000F95                         _TXREG 000FAD  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000               __end_of_deplace 0FB2           ___lmul@multiplicand 0064  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 0063                         _gagne 12A0  
                       _randx 00F3                         _srand 1D0A                         tablat 000FF5  
                       status 000FD8      __end_of_lcd_cacheCurseur 1D40                __CFG_HFOFST$ON 000000  
           ??_afficheTabMines 0069                __CFG_PBADEN$ON 000000              _metToucheCombien 112C  
             __initialization 1AD0                  __end_of_main 0960                  __end_of_rand 1A7C  
      enleveTuilesAutour@maxX 0076        enleveTuilesAutour@maxY 0074        enleveTuilesAutour@minX 0075  
      enleveTuilesAutour@minY 0073           enleveTuilesAutour@j 0077           enleveTuilesAutour@m 0078  
         enleveTuilesAutour@x 0079           enleveTuilesAutour@y 0066          lcd_putMessage@chaine 0066  
  calculToucheCombien@colonne 0068                        ??_main 00D1                        ??_rand 006E  
               __activetblptr 000003                        ?_gagne 0066                        _ADCON1 000FC1  
                      _ADRESH 000FC4                        ?_srand 0060                        _ANSELH 000F7F  
                 initTabVue@i 0068                   initTabVue@k 006A                __CFG_WDTEN$OFF 000000  
                ?_rempliMines 0074                        _SPBRGH 000FB0                __CFG_XINST$OFF 000000  
              lcd_initCGRam@i 0065                lcd_initCGRam@j 0066                getAnalog@canal 0061  
            __end_of_lcd_busy 1BB2              __end_of_lcd_init 1CAE                        ___lmul 18E4  
                      ___wmul 1CAE                __CFG_STVREN$ON 000000                     ??___awmod 0072  
                      _demine 13DE                        gagne@i 006D                        gagne@k 006F  
                      clear_0 1B16               ___awmod@divisor 0070                     ??_deplace 0069  
             ___awmod@counter 0072              __end_of_testEtat 1D0A                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      srand@x 0060        __size_of_afficheTabVue 0092             _lcd_resetSequence 19BC  
                  __accesstop 0060       __end_of__initialization 1B1C           _lcd_strobeEnableBit 1D40  
          ?_lcd_resetSequence 0060                 ___rparam_used 000000                main@afficheNom 00D6  
         _lcd_effaceAffichage 1D1A                  __pidataBANK0 1D4E                  __pidataBANK1 1BB2  
         ??_lcd_resetSequence 0062                 __end_of_gagne 13DE                 __end_of_srand 1D1A  
   calculToucheCombien@maxCol 0073     calculToucheCombien@minCol 0072          ?_lcd_strobeEnableBit 0060  
   calculToucheCombien@nombre 006F            __size_of_getAnalog 002C             _lcd_montreCurseur 1D28  
          ?_lcd_montreCurseur 0060   calculToucheCombien@maxLigne 0071          ?_lcd_effaceAffichage 0060  
          __size_of_lcd_wrCom 006C                       ??_gagne 0068   calculToucheCombien@minLigne 0070  
   __end_of_lcd_resetSequence 1A26                       ??_srand 0062      __size_of_lcd_lireDonnees 0006  
           _lcd_ecrireDonnees 1CD6                    __pbssBANK1 0100              ??_lcd_putMessage 0068  
         ??_lcd_montreCurseur 0063            ?_lcd_ecrireDonnees 0060      __size_of_lcd_curseurHome 0008  
         ??_lcd_ecrireDonnees 0060                       ?___lmul 0060                       ?___wmul 0060  
                     ?_demine 007A                 _afficheTabVue 174E                main@etatInitSW 00EE  
   __end_of_lcd_montreCurseur 1D30                ___lmul@product 0068   __size_of_enleveTuilesAutour 024E  
       ??_lcd_strobeEnableBit 0060  __size_of_calculToucheCombien 017A      __end_of_metToucheCombien 12A0  
                  _lcd_gotoXY 1872         ??_lcd_effaceAffichage 0063                    _lcd_wrData 1C26  
             _afficheTabMines 17E0     __end_of_lcd_ecrireDonnees 1CF2                     ?_lcd_busy 0060  
                   ?_lcd_init 0060       lcd_ecrireDonnees@donnee 0061                    _m_tabMines 0154  
           __end_of_getAnalog 1C86             ?_lcd_cacheCurseur 0060          __size_of_rempliMines 0246  
                     __Hparam 0000                       __Lparam 0000            ??_lcd_cacheCurseur 0063  
                   ?_testEtat 0060                    _initTabVue 1510             __end_of_lcd_wrCom 19BC  
              ?_afficheTabVue 0060               __size_of___lmul 006C                       ___awmod 15FA  
             __size_of___wmul 0028               __size_of_demine 0132            rempliMines@tabSafe 0079  
                __psmallconst 0600                       __pcinit 1AD0                     _ANSELbits 000F7E  
                     __ramtop 0600                       _deplace 0DF4                       __ptext0 0618  
                     __ptext1 1CF2                       __ptext2 0BAE                       __ptext3 1A26  
                     __ptext4 18E4                       __ptext5 15FA                       __ptext6 112C  
                     __ptext7 0FB2                       __ptext8 1D28                       __ptext9 1C86  
       __end_of_lcd_ecritChar 1AD0               lcd_busy@adresse 0061                     _T1CONbits 000FCD  
            ___awmod@dividend 006E                       demine@x 0083                       demine@y 007A  
            lcd_ecritChar@car 0063                    ??_lcd_busy 0060                    ??_lcd_init 0067  
  __size_of_lcd_resetSequence 006A          end_of_initialization 1B1C         __end_of_lcd_initCGRam 174E  
           __end_ofmain@F2870 0616             ??_lcd_lireDonnees 0060                    ??_testEtat 0060  
                   _RCSTAbits 000FAB                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE       __size_of_initialisation 0034  
           ??_lcd_curseurHome 0063           lcd_ecritChar@posRam 0064    __size_of_lcd_montreCurseur 0008  
                   _PORTAbits 000F80                     _PORTBbits 000F81       __end_of_afficheTabMines 1872  
                 ?_lcd_gotoXY 0063                     _TRISCbits 000F94                   ?_lcd_wrData 0060  
  __size_of_lcd_ecrireDonnees 001C                     _TXSTAbits 000FAC               ??_afficheTabVue 0069  
                 ?_initTabVue 0060                __end_of___lmul 1950                __end_of___wmul 1CD6  
                 _BAUDCONbits 000FB8                __end_of_demine 1510               deplace@tensionX 006A  
             deplace@tensionY 006C           start_initialization 1AD0           _calculToucheCombien 0FB2  
         __size_of_lcd_gotoXY 0072                      ??___lmul 0068                      ??___wmul 0064  
               rempliMines@nb 0074           __size_of_lcd_wrData 0034                      ??_demine 007B  
                 __pdataBANK0 00F3                   __pdataBANK1 01A8              __CFG_LPT1OSC$OFF 000000  
        ?_calculToucheCombien 0066              ?_afficheTabMines 0060                 __pcstackBANK0 0060  
           ?_metToucheCombien 0060              afficheTabMines@k 0069           __size_of_initTabVue 00EA  
          ??_metToucheCombien 0076             __size_of_lcd_busy 0042             __size_of_lcd_init 0028  
           __CFG_CCP2MX$PORTC 000000                     _getAnalog 1C5A   __end_of_lcd_strobeEnableBit 1D48  
              _initialisation 1BF2    __end_of_enleveTuilesAutour 0BAE                      ?___awmod 006E  
             main@etatAfterSW 00EB             __size_of_testEtat 0018                      ?_deplace 0065  
 __end_of_lcd_effaceAffichage 1D28                     _lcd_wrCom 1950         ??_calculToucheCombien 006A  
   __size_of_lcd_cacheCurseur 0008                   __smallconst 0600                __size_of_gagne 013E  
             _lcd_lireDonnees 1D48           lcd_wrData@caractere 0062                  gagne@nbCache 006B  
              __size_of_srand 0010                 ??_rempliMines 0076               _lcd_curseurHome 1D30  
              ___wmul@product 0064       metToucheCombien@chiffre 0079        __end_of_initialisation 1C26  
                  ?_getAnalog 0060              __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 004E  
                   main@F2870 0601                    ?_lcd_wrCom 0060                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0             ___wmul@multiplier 0060                  ??_lcd_gotoXY 0064  
                ??_lcd_wrData 0062             lcd_wrCom@commande 0062             ___lmul@multiplier 0060  
                   copy_data0 1AE4                     copy_data1 1B04                      __Hparam0 0000  
      __size_of_lcd_ecritChar 0054                      __Lparam0 0000               ?_initialisation 0060  
         __end_of_rempliMines 0DF4                  ??_initTabVue 0066            __CFG_BOREN$SBORDIS 000000  
                rempliMines@i 00C9                  rempliMines@j 00CD                  rempliMines@m 00CF  
          __end_of_lcd_gotoXY 18E4            __end_of_lcd_wrData 1C5A              __size_of___awmod 00B2  
      __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 0068              __size_of_deplace 01BE  
     __end_of_lcd_lireDonnees 1D4E                      _matCGRAM 01A8       __end_of_lcd_curseurHome 1D38  
                    __ptext10 19BC                      __ptext11 16AC                      __ptext20 13DE  
                    __ptext12 1D30                      __ptext21 0960                      __ptext13 1D38  
                    __ptext30 1D40                      __ptext22 174E                      __ptext14 1BF2  
                    __ptext31 1CD6                      __ptext23 17E0                      __ptext15 1D0A  
                    __ptext32 1B70                      __ptext24 1B22                      __ptext16 1510  
                    __ptext33 1D48                      __ptext25 1A7C                      __ptext17 12A0  
                    __ptext34 1CAE                      __ptext26 1C26                      __ptext18 0DF4  
                    __ptext27 1872                      __ptext19 1C5A                      __ptext28 1D1A  
                    __ptext29 1950             metToucheCombien@j 007A             metToucheCombien@m 007C  
                    _lcd_busy 1B70                      _lcd_init 1C86            __end_of_initTabVue 15FA  
    calculToucheCombien@ligne 0066                      _m_tabVue 0100                 __size_of_main 0348  
               __size_of_rand 0056              rempliMines@testX 00CB              rempliMines@testY 00CC  
                 gagne@pMines 0066                      deplace@x 0065                      deplace@y 0067  
                 ??_getAnalog 0060                      _testEtat 1CF2         __end_of_afficheTabVue 17E0  
                    main@posX 00EF                      main@posY 00F1                   ??_lcd_wrCom 0062  
            _lcd_cacheCurseur 1D38                 _lcd_ecritChar 1A7C                afficheTabVue@k 0069  
               _lcd_initCGRam 16AC                   _rempliMines 0BAE          calculToucheCombien@j 0074  
        calculToucheCombien@m 0075     __size_of_metToucheCombien 0174                _lcd_putMessage 1B22  
              ?_lcd_ecritChar 0060              ?_lcd_lireDonnees 0060            _enleveTuilesAutour 0960  
            ?_lcd_curseurHome 0060      __size_of_afficheTabMines 0092                ?_lcd_initCGRam 0060  
         ?_enleveTuilesAutour 0066             __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 1B70  
