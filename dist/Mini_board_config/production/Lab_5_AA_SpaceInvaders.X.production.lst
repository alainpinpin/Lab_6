

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 08 16:12:22 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 2.10
    61                           ; Generated 31/07/2019 GMT
    62                           ; 
    63                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F45K20 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataCOMRAM
    96  001918                     __pidataCOMRAM:
    97                           	opt callstack 0
    98                           
    99                           ;initializer for _randx
   100  001918  0001               	dw	1
   101  00191A  0000               	dw	0
   102                           
   103                           	psect	idataBANK0
   104  001544                     __pidataBANK0:
   105                           	opt callstack 0
   106                           
   107                           ;initializer for _m_aliens
   108  001544  20                 	db	32
   109  001545  20                 	db	32
   110  001546  20                 	db	32
   111  001547  20                 	db	32
   112  001548  20                 	db	32
   113  001549  20                 	db	32
   114  00154A  20                 	db	32
   115  00154B  20                 	db	32
   116  00154C  20                 	db	32
   117  00154D  20                 	db	32
   118  00154E  20                 	db	32
   119  00154F  20                 	db	32
   120  001550  20                 	db	32
   121  001551  20                 	db	32
   122  001552  20                 	db	32
   123  001553  20                 	db	32
   124  001554  20                 	db	32
   125  001555  20                 	db	32
   126  001556  20                 	db	32
   127  001557  20                 	db	32
   128  001558  00                 	db	0
   129  001559  20                 	db	32
   130  00155A  20                 	db	32
   131  00155B  20                 	db	32
   132  00155C  20                 	db	32
   133  00155D  20                 	db	32
   134  00155E  20                 	db	32
   135  00155F  20                 	db	32
   136  001560  20                 	db	32
   137  001561  20                 	db	32
   138  001562  20                 	db	32
   139  001563  20                 	db	32
   140  001564  20                 	db	32
   141  001565  20                 	db	32
   142  001566  20                 	db	32
   143  001567  20                 	db	32
   144  001568  20                 	db	32
   145  001569  20                 	db	32
   146  00156A  20                 	db	32
   147  00156B  20                 	db	32
   148  00156C  20                 	db	32
   149  00156D  00                 	db	0
   150  00156E  20                 	db	32
   151  00156F  20                 	db	32
   152  001570  20                 	db	32
   153  001571  20                 	db	32
   154  001572  20                 	db	32
   155  001573  20                 	db	32
   156  001574  20                 	db	32
   157  001575  20                 	db	32
   158  001576  20                 	db	32
   159  001577  20                 	db	32
   160  001578  20                 	db	32
   161  001579  20                 	db	32
   162  00157A  20                 	db	32
   163  00157B  20                 	db	32
   164  00157C  20                 	db	32
   165  00157D  20                 	db	32
   166  00157E  20                 	db	32
   167  00157F  20                 	db	32
   168  001580  20                 	db	32
   169  001581  20                 	db	32
   170  001582  00                 	db	0
   171  001583  20                 	db	32
   172  001584  20                 	db	32
   173  001585  20                 	db	32
   174  001586  20                 	db	32
   175  001587  20                 	db	32
   176  001588  20                 	db	32
   177  001589  20                 	db	32
   178  00158A  20                 	db	32
   179  00158B  20                 	db	32
   180  00158C  20                 	db	32
   181  00158D  20                 	db	32
   182  00158E  20                 	db	32
   183  00158F  20                 	db	32
   184  001590  20                 	db	32
   185  001591  20                 	db	32
   186  001592  20                 	db	32
   187  001593  20                 	db	32
   188  001594  20                 	db	32
   189  001595  20                 	db	32
   190  001596  20                 	db	32
   191  001597  00                 	db	0
   192                           
   193                           	psect	idataBANK1
   194  0016D2                     __pidataBANK1:
   195                           	opt callstack 0
   196                           
   197                           ;initializer for _matCGRAM
   198  0016D2  08                 	db	8
   199  0016D3  04                 	db	4
   200  0016D4  04                 	db	4
   201  0016D5  0A                 	db	10
   202  0016D6  11                 	db	17
   203  0016D7  1F                 	db	31
   204  0016D8  11                 	db	17
   205  0016D9  00                 	db	0
   206  0016DA  15                 	db	21
   207  0016DB  15                 	db	21
   208  0016DC  1F                 	db	31
   209  0016DD  04                 	db	4
   210  0016DE  0A                 	db	10
   211  0016DF  11                 	db	17
   212  0016E0  11                 	db	17
   213  0016E1  0A                 	db	10
   214  0016E2  1F                 	db	31
   215  0016E3  1F                 	db	31
   216  0016E4  1F                 	db	31
   217  0016E5  1F                 	db	31
   218  0016E6  0E                 	db	14
   219  0016E7  0E                 	db	14
   220  0016E8  04                 	db	4
   221  0016E9  04                 	db	4
   222  0016EA  1F                 	db	31
   223  0016EB  15                 	db	21
   224  0016EC  15                 	db	21
   225  0016ED  04                 	db	4
   226  0016EE  04                 	db	4
   227  0016EF  15                 	db	21
   228  0016F0  15                 	db	21
   229  0016F1  1F                 	db	31
   230  0016F2  08                 	db	8
   231  0016F3  04                 	db	4
   232  0016F4  1F                 	db	31
   233  0016F5  10                 	db	16
   234  0016F6  1E                 	db	30
   235  0016F7  10                 	db	16
   236  0016F8  1F                 	db	31
   237  0016F9  00                 	db	0
   238  0016FA  04                 	db	4
   239  0016FB  0A                 	db	10
   240  0016FC  0E                 	db	14
   241  0016FD  11                 	db	17
   242  0016FE  1F                 	db	31
   243  0016FF  10                 	db	16
   244  001700  0E                 	db	14
   245  001701  00                 	db	0
   246  001702  08                 	db	8
   247  001703  04                 	db	4
   248  001704  0E                 	db	14
   249  001705  01                 	db	1
   250  001706  0F                 	db	15
   251  001707  11                 	db	17
   252  001708  0F                 	db	15
   253  001709  00                 	db	0
   254  00170A  04                 	db	4
   255  00170B  0A                 	db	10
   256  00170C  0E                 	db	14
   257  00170D  01                 	db	1
   258  00170E  0F                 	db	15
   259  00170F  11                 	db	17
   260  001710  0F                 	db	15
   261  001711  00                 	db	0
   262                           
   263                           	psect	smallconst
   264  000600                     __psmallconst:
   265                           	opt callstack 0
   266  000600  00                 	db	0
   267  000601                     perdu@F2886:
   268                           	opt callstack 0
   269  000601  20                 	db	32
   270  000602  20                 	db	32
   271  000603  20                 	db	32
   272  000604  20                 	db	32
   273  000605  20                 	db	32
   274  000606  20                 	db	32
   275  000607  20                 	db	32
   276  000608  20                 	db	32
   277  000609  20                 	db	32
   278  00060A  20                 	db	32
   279  00060B  20                 	db	32
   280  00060C  20                 	db	32
   281  00060D  20                 	db	32
   282  00060E  20                 	db	32
   283  00060F  20                 	db	32
   284  000610  20                 	db	32
   285  000611  20                 	db	32
   286  000612  20                 	db	32
   287  000613  20                 	db	32
   288  000614  20                 	db	32
   289  000615  00                 	db	0
   290  000616                     __end_ofperdu@F2886:
   291                           	opt callstack 0
   292  000616                     deplace@F2880:
   293                           	opt callstack 0
   294  000616  20                 	db	32
   295  000617  20                 	db	32
   296  000618  20                 	db	32
   297  000619  20                 	db	32
   298  00061A  20                 	db	32
   299  00061B  20                 	db	32
   300  00061C  20                 	db	32
   301  00061D  20                 	db	32
   302  00061E  20                 	db	32
   303  00061F  20                 	db	32
   304  000620  20                 	db	32
   305  000621  20                 	db	32
   306  000622  20                 	db	32
   307  000623  20                 	db	32
   308  000624  20                 	db	32
   309  000625  20                 	db	32
   310  000626  20                 	db	32
   311  000627  20                 	db	32
   312  000628  20                 	db	32
   313  000629  20                 	db	32
   314  00062A  00                 	db	0
   315  00062B                     __end_ofdeplace@F2880:
   316                           	opt callstack 0
   317  00062B                     main@F2861:
   318                           	opt callstack 0
   319  00062B  4C                 	db	76
   320  00062C  61                 	db	97
   321  00062D  62                 	db	98
   322  00062E  35                 	db	53
   323  00062F  20                 	db	32
   324  000630  41                 	db	65
   325  000631  6C                 	db	108
   326  000632  65                 	db	101
   327  000633  78                 	db	120
   328  000634  61                 	db	97
   329  000635  6E                 	db	110
   330  000636  64                 	db	100
   331  000637  72                 	db	114
   332  000638  65                 	db	101
   333  000639  20                 	db	32
   334  00063A  41                 	db	65
   335  00063B  6C                 	db	108
   336  00063C  61                 	db	97
   337  00063D  69                 	db	105
   338  00063E  6E                 	db	110
   339  00063F  00                 	db	0
   340  000640                     __end_ofmain@F2861:
   341                           	opt callstack 0
   342  000640                     affichePerdu@F2889:
   343                           	opt callstack 0
   344  000640  4C                 	db	76
   345  000641  4F                 	db	79
   346  000642  4C                 	db	76
   347  000643  20                 	db	32
   348  000644  79                 	db	121
   349  000645  6F                 	db	111
   350  000646  75                 	db	117
   351  000647  20                 	db	32
   352  000648  6C                 	db	108
   353  000649  6F                 	db	111
   354  00064A  73                 	db	115
   355  00064B  74                 	db	116
   356  00064C  00                 	db	0
   357  00064D                     __end_ofaffichePerdu@F2889:
   358                           	opt callstack 0
   359  00064D                     _dpowers:
   360                           	opt callstack 0
   361  00064D  0001               	dw	1
   362  00064F  000A               	dw	10
   363  000651  0064               	dw	100
   364  000653  03E8               	dw	1000
   365  000655  2710               	dw	10000
   366  000657                     __end_of_dpowers:
   367                           	opt callstack 0
   368  0000                     _TMR0	set	4054
   369  0000                     _TMR1	set	4046
   370  0000                     _RCREG	set	4014
   371  0000                     _TXREG	set	4013
   372  0000                     _RCSTAbits	set	4011
   373  0000                     _TXSTAbits	set	4012
   374  0000                     _BAUDCONbits	set	4024
   375  0000                     _SPBRG	set	4015
   376  0000                     _SPBRGH	set	4016
   377  0000                     _TRISCbits	set	3988
   378  0000                     _PORTAbits	set	3968
   379  0000                     _PORTD	set	3971
   380  0000                     _INTCONbits	set	4082
   381  0000                     _T0CONbits	set	4053
   382  0000                     _ADCON2bits	set	4032
   383  0000                     _ADCON1	set	4033
   384  0000                     _ANSELbits	set	3966
   385  0000                     _T1CONbits	set	4045
   386  0000                     _TRISA	set	3986
   387  0000                     _ANSEL	set	3966
   388  0000                     _TRISB	set	3987
   389  0000                     _ANSELH	set	3967
   390  0000                     _TRISD	set	3989
   391  0000                     _ADRESH	set	4036
   392  0000                     _ADCON0bits	set	4034
   393  0000                     _PORTBbits	set	3969
   394  0000                     _RCIF	set	31989
   395  000657                     STR_1:
   396  000657  53                 	db	83	;'S'
   397  000658  63                 	db	99	;'c'
   398  000659  6F                 	db	111	;'o'
   399  00065A  72                 	db	114	;'r'
   400  00065B  65                 	db	101	;'e'
   401  00065C  20                 	db	32
   402  00065D  3D                 	db	61	;'='
   403  00065E  20                 	db	32
   404  00065F  25                 	db	37
   405  000660  33                 	db	51	;'3'
   406  000661  64                 	db	100	;'d'
   407  000662  00                 	db	0
   408                           
   409                           ; #config settings
   410  000663  00                 	db	0	; dummy byte at the end
   411  0000                     
   412                           	psect	cinit
   413  001148                     __pcinit:
   414                           	opt callstack 0
   415  001148                     start_initialization:
   416                           	opt callstack 0
   417  001148                     __initialization:
   418                           	opt callstack 0
   419                           
   420                           ; Initialize objects allocated to BANK1 (64 bytes)
   421                           ; load TBLPTR registers with __pidataBANK1
   422  001148  0ED2               	movlw	low __pidataBANK1
   423  00114A  6EF6               	movwf	tblptrl,c
   424  00114C  0E16               	movlw	high __pidataBANK1
   425  00114E  6EF7               	movwf	tblptrh,c
   426  001150  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   427  001152  6EF8               	movwf	tblptru,c
   428  001154  EE01  F000         	lfsr	0,__pdataBANK1
   429  001158  EE10 F040          	lfsr	1,64
   430  00115C                     copy_data0:
   431  00115C  0009               	tblrd		*+
   432  00115E  CFF5 FFEE          	movff	tablat,postinc0
   433  001162  50E5               	movf	postdec1,w,c
   434  001164  50E1               	movf	fsr1l,w,c
   435  001166  E1FA               	bnz	copy_data0
   436                           
   437                           ; Initialize objects allocated to BANK0 (84 bytes)
   438                           ; load TBLPTR registers with __pidataBANK0
   439  001168  0E44               	movlw	low __pidataBANK0
   440  00116A  6EF6               	movwf	tblptrl,c
   441  00116C  0E15               	movlw	high __pidataBANK0
   442  00116E  6EF7               	movwf	tblptrh,c
   443  001170  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   444  001172  6EF8               	movwf	tblptru,c
   445  001174  EE00  F060         	lfsr	0,__pdataBANK0
   446  001178  EE10 F054          	lfsr	1,84
   447  00117C                     copy_data1:
   448  00117C  0009               	tblrd		*+
   449  00117E  CFF5 FFEE          	movff	tablat,postinc0
   450  001182  50E5               	movf	postdec1,w,c
   451  001184  50E1               	movf	fsr1l,w,c
   452  001186  E1FA               	bnz	copy_data1
   453                           
   454                           ; Initialize objects allocated to COMRAM (4 bytes)
   455                           ; load TBLPTR registers with __pidataCOMRAM
   456  001188  0E18               	movlw	low __pidataCOMRAM
   457  00118A  6EF6               	movwf	tblptrl,c
   458  00118C  0E19               	movlw	high __pidataCOMRAM
   459  00118E  6EF7               	movwf	tblptrh,c
   460  001190  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   461  001192  6EF8               	movwf	tblptru,c
   462  001194  EE00  F04A         	lfsr	0,__pdataCOMRAM
   463  001198  EE10 F004          	lfsr	1,4
   464  00119C                     copy_data2:
   465  00119C  0009               	tblrd		*+
   466  00119E  CFF5 FFEE          	movff	tablat,postinc0
   467  0011A2  50E5               	movf	postdec1,w,c
   468  0011A4  50E1               	movf	fsr1l,w,c
   469  0011A6  E1FA               	bnz	copy_data2
   470                           
   471                           ; Clear objects allocated to BANK0 (1 bytes)
   472  0011A8  0100               	movlb	0
   473  0011AA  6BCF               	clrf	__pbssBANK0& (0+255),b
   474                           
   475                           ; Clear objects allocated to COMRAM (2 bytes)
   476  0011AC  6A4F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   477  0011AE  6A4E               	clrf	__pbssCOMRAM& (0+255),c
   478  0011B0                     end_of_initialization:
   479                           	opt callstack 0
   480  0011B0                     __end_of__initialization:
   481                           	opt callstack 0
   482  0011B0  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   483  0011B2  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   484  0011B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   485  0011B6  6EF8               	movwf	tblptru,c
   486  0011B8  0100               	movlb	0
   487  0011BA  EFB7  F005         	goto	_main	;jump to C main() function
   488                           
   489                           	psect	bssCOMRAM
   490  00004E                     __pbssCOMRAM:
   491                           	opt callstack 0
   492  00004E                     _m_niveau:
   493                           	opt callstack 0
   494  00004E                     	ds	2
   495                           
   496                           	psect	dataCOMRAM
   497  00004A                     __pdataCOMRAM:
   498                           	opt callstack 0
   499  00004A                     _randx:
   500                           	opt callstack 0
   501  00004A                     	ds	4
   502                           
   503                           	psect	bssBANK0
   504  0000CF                     __pbssBANK0:
   505                           	opt callstack 0
   506  0000CF                     _m_tempsDAfficher:
   507                           	opt callstack 0
   508  0000CF                     	ds	1
   509                           
   510                           	psect	dataBANK0
   511  000060                     __pdataBANK0:
   512                           	opt callstack 0
   513  000060                     _m_aliens:
   514                           	opt callstack 0
   515  000060                     	ds	84
   516                           
   517                           	psect	dataBANK1
   518  000100                     __pdataBANK1:
   519                           	opt callstack 0
   520  000100                     _matCGRAM:
   521                           	opt callstack 0
   522  000100                     	ds	64
   523                           
   524                           	psect	cstackBANK0
   525  0000B4                     __pcstackBANK0:
   526                           	opt callstack 0
   527  0000B4                     main@afficheNom:
   528                           	opt callstack 0
   529                           
   530                           ; 21 bytes @ 0x0
   531  0000B4                     	ds	21
   532  0000C9                     main@etatAfterSW:
   533                           	opt callstack 0
   534                           
   535                           ; 1 bytes @ 0x15
   536  0000C9                     	ds	1
   537  0000CA                     main@etatInitSW:
   538                           	opt callstack 0
   539                           
   540                           ; 1 bytes @ 0x16
   541  0000CA                     	ds	1
   542  0000CB                     main@pointage:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x17
   546  0000CB                     	ds	2
   547  0000CD                     main@posX:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x19
   551  0000CD                     	ds	2
   552                           
   553                           	psect	cstackCOMRAM
   554  000001                     __pcstackCOMRAM:
   555                           	opt callstack 0
   556  000001                     ??_getAnalog:
   557  000001                     ??_isdigit:
   558  000001                     ??_lcd_ecrireDonnees:
   559  000001                     ??_lcd_busy:
   560  000001                     ?_strcmp:
   561                           	opt callstack 0
   562  000001                     ?___wmul:
   563                           	opt callstack 0
   564  000001                     ?___lwdiv:
   565                           	opt callstack 0
   566  000001                     ?___lmul:
   567                           	opt callstack 0
   568  000001                     ___wmul@multiplier:
   569                           	opt callstack 0
   570  000001                     ___lwdiv@dividend:
   571                           	opt callstack 0
   572  000001                     srand@x:
   573                           	opt callstack 0
   574  000001                     strcmp@s1:
   575                           	opt callstack 0
   576  000001                     strcpy@to:
   577                           	opt callstack 0
   578  000001                     ___lmul@multiplier:
   579                           	opt callstack 0
   580                           
   581                           ; 4 bytes @ 0x0
   582  000001                     	ds	1
   583  000002                     getAnalog@canal:
   584                           	opt callstack 0
   585  000002                     lcd_ecrireDonnees@donnee:
   586                           	opt callstack 0
   587  000002                     lcd_busy@adresse:
   588                           	opt callstack 0
   589  000002                     _isdigit$1464:
   590                           	opt callstack 0
   591                           
   592                           ; 1 bytes @ 0x1
   593  000002                     	ds	1
   594  000003                     ??_lcd_resetSequence:
   595  000003                     lcd_wrCom@commande:
   596                           	opt callstack 0
   597  000003                     lcd_wrData@caractere:
   598                           	opt callstack 0
   599  000003                     isdigit@c:
   600                           	opt callstack 0
   601  000003                     ___wmul@multiplicand:
   602                           	opt callstack 0
   603  000003                     ___lwdiv@divisor:
   604                           	opt callstack 0
   605  000003                     strcmp@s2:
   606                           	opt callstack 0
   607  000003                     strcpy@from:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0x2
   611  000003                     	ds	1
   612  000004                     ??_lcd_initCGRam:
   613  000004                     lcd_gotoXY@y:
   614                           	opt callstack 0
   615  000004                     lcd_ecritChar@car:
   616                           	opt callstack 0
   617                           
   618                           ; 1 bytes @ 0x3
   619  000004                     	ds	1
   620  000005                     ??_strcmp:
   621  000005                     lcd_gotoXY@x:
   622                           	opt callstack 0
   623  000005                     lcd_ecritChar@posRam:
   624                           	opt callstack 0
   625  000005                     ___wmul@product:
   626                           	opt callstack 0
   627  000005                     ___lwdiv@quotient:
   628                           	opt callstack 0
   629  000005                     strcpy@cp:
   630                           	opt callstack 0
   631  000005                     ___lmul@multiplicand:
   632                           	opt callstack 0
   633                           
   634                           ; 4 bytes @ 0x4
   635  000005                     	ds	1
   636  000006                     lcd_initCGRam@i:
   637                           	opt callstack 0
   638                           
   639                           ; 1 bytes @ 0x5
   640  000006                     	ds	1
   641  000007                     ??_videAliens:
   642  000007                     lcd_initCGRam@j:
   643                           	opt callstack 0
   644  000007                     ___lwdiv@counter:
   645                           	opt callstack 0
   646  000007                     strcmp@r:
   647                           	opt callstack 0
   648  000007                     feu@pts:
   649                           	opt callstack 0
   650  000007                     lcd_putMessage@chaine:
   651                           	opt callstack 0
   652                           
   653                           ; 2 bytes @ 0x6
   654  000007                     	ds	1
   655  000008                     ?___lwmod:
   656                           	opt callstack 0
   657  000008                     ___lwmod@dividend:
   658                           	opt callstack 0
   659  000008                     perdu@safe:
   660                           	opt callstack 0
   661                           
   662                           ; 21 bytes @ 0x7
   663  000008                     	ds	1
   664  000009                     ??_feu:
   665  000009                     lcd_putMessage@j:
   666                           	opt callstack 0
   667  000009                     videAliens@i:
   668                           	opt callstack 0
   669  000009                     ___lmul@product:
   670                           	opt callstack 0
   671                           
   672                           ; 4 bytes @ 0x8
   673  000009                     	ds	1
   674  00000A                     afficheAliens@i:
   675                           	opt callstack 0
   676  00000A                     deplace@x:
   677                           	opt callstack 0
   678  00000A                     ___lwmod@divisor:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0x9
   682  00000A                     	ds	1
   683  00000B                     videAliens@j:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0xA
   687  00000B                     	ds	1
   688  00000C                     ??_deplace:
   689  00000C                     ___lwmod@counter:
   690                           	opt callstack 0
   691                           
   692                           ; 1 bytes @ 0xB
   693  00000C                     	ds	1
   694  00000D                     ?_rand:
   695                           	opt callstack 0
   696  00000D                     ?_sprintf:
   697                           	opt callstack 0
   698  00000D                     sprintf@sp:
   699                           	opt callstack 0
   700  00000D                     deplace@effaceJoueur:
   701                           	opt callstack 0
   702                           
   703                           ; 21 bytes @ 0xC
   704  00000D                     	ds	1
   705  00000E                     feu@x:
   706                           	opt callstack 0
   707                           
   708                           ; 1 bytes @ 0xD
   709  00000E                     	ds	1
   710  00000F                     ?___awmod:
   711                           	opt callstack 0
   712  00000F                     feu@i:
   713                           	opt callstack 0
   714  00000F                     sprintf@f:
   715                           	opt callstack 0
   716  00000F                     ___awmod@dividend:
   717                           	opt callstack 0
   718                           
   719                           ; 2 bytes @ 0xE
   720  00000F                     	ds	2
   721  000011                     ___awmod@divisor:
   722                           	opt callstack 0
   723                           
   724                           ; 2 bytes @ 0x10
   725  000011                     	ds	2
   726  000013                     ??_sprintf:
   727  000013                     ___awmod@counter:
   728                           	opt callstack 0
   729                           
   730                           ; 1 bytes @ 0x12
   731  000013                     	ds	1
   732  000014                     ___awmod@sign:
   733                           	opt callstack 0
   734                           
   735                           ; 1 bytes @ 0x13
   736  000014                     	ds	1
   737  000015                     ??_nouveauxAliens:
   738                           
   739                           ; 1 bytes @ 0x14
   740  000015                     	ds	2
   741  000017                     sprintf@ap:
   742                           	opt callstack 0
   743                           
   744                           ; 2 bytes @ 0x16
   745  000017                     	ds	1
   746  000018                     nouveauxAliens@posAlien:
   747                           	opt callstack 0
   748                           
   749                           ; 40 bytes @ 0x17
   750  000018                     	ds	1
   751  000019                     sprintf@prec:
   752                           	opt callstack 0
   753                           
   754                           ; 1 bytes @ 0x18
   755  000019                     	ds	1
   756  00001A                     sprintf@flag:
   757                           	opt callstack 0
   758                           
   759                           ; 1 bytes @ 0x19
   760  00001A                     	ds	1
   761  00001B                     sprintf@val:
   762                           	opt callstack 0
   763                           
   764                           ; 2 bytes @ 0x1A
   765  00001B                     	ds	2
   766  00001D                     sprintf@width:
   767                           	opt callstack 0
   768                           
   769                           ; 2 bytes @ 0x1C
   770  00001D                     	ds	2
   771  00001F                     sprintf@c:
   772                           	opt callstack 0
   773                           
   774                           ; 1 bytes @ 0x1E
   775  00001F                     	ds	1
   776  000020                     affichePerdu@pts:
   777                           	opt callstack 0
   778                           
   779                           ; 2 bytes @ 0x1F
   780  000020                     	ds	2
   781  000022                     ??_affichePerdu:
   782  000022                     deplace@tension:
   783                           	opt callstack 0
   784                           
   785                           ; 2 bytes @ 0x21
   786  000022                     	ds	2
   787  000024                     affichePerdu@gameOver:
   788                           	opt callstack 0
   789                           
   790                           ; 13 bytes @ 0x23
   791  000024                     	ds	13
   792  000031                     affichePerdu@ptsChar:
   793                           	opt callstack 0
   794                           
   795                           ; 3 bytes @ 0x30
   796  000031                     	ds	15
   797  000040                     nouveauxAliens@i:
   798                           	opt callstack 0
   799                           
   800                           ; 2 bytes @ 0x3F
   801  000040                     	ds	2
   802  000042                     nouveauxAliens@monstre:
   803                           	opt callstack 0
   804                           
   805                           ; 2 bytes @ 0x41
   806  000042                     	ds	2
   807  000044                     nouveauxAliens@verifPosition:
   808                           	opt callstack 0
   809                           
   810                           ; 2 bytes @ 0x43
   811  000044                     	ds	2
   812  000046                     nouveauxAliens@j:
   813                           	opt callstack 0
   814                           
   815                           ; 2 bytes @ 0x45
   816  000046                     	ds	2
   817  000048                     ??_main:
   818                           
   819                           ; 1 bytes @ 0x47
   820  000048                     	ds	2
   821                           
   822 ;;
   823 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   824 ;;
   825 ;; *************** function _main *****************
   826 ;; Defined at:
   827 ;;		line 86 in file "main.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  afficheNom     21    0[BANK0 ] const unsigned char [21]
   832 ;;  posX            2   25[BANK0 ] int 
   833 ;;  pointage        2   23[BANK0 ] int 
   834 ;;  etatInitSW      1   22[BANK0 ] unsigned char 
   835 ;;  etatAfterSW     1   21[BANK0 ] unsigned char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   845 ;;      Params:         0       0       0       0       0       0       0
   846 ;;      Locals:         0      27       0       0       0       0       0
   847 ;;      Temps:          2       0       0       0       0       0       0
   848 ;;      Totals:         2      27       0       0       0       0       0
   849 ;;Total ram usage:       29 bytes
   850 ;; Hardware stack levels required when called:    7
   851 ;; This function calls:
   852 ;;		_afficheAliens
   853 ;;		_affichePerdu
   854 ;;		_deplace
   855 ;;		_feu
   856 ;;		_init_serie
   857 ;;		_initialisation
   858 ;;		_lcd_cacheCurseur
   859 ;;		_lcd_ecritChar
   860 ;;		_lcd_gotoXY
   861 ;;		_lcd_init
   862 ;;		_lcd_putMessage
   863 ;;		_nouveauxAliens
   864 ;;		_perdu
   865 ;;		_testEtat
   866 ;;		_videAliens
   867 ;; This function is called by:
   868 ;;		Startup code after reset
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text0
   873  000B6E                     __ptext0:
   874                           	opt callstack 0
   875  000B6E                     _main:
   876                           	opt callstack 24
   877  000B6E                     
   878                           ;main.c: 89: const char afficheNom[] = "Lab5 Alexandre Alain";
   879  000B6E  0E2B               	movlw	low main@F2861
   880  000B70  6EF6               	movwf	tblptrl,c
   881  000B72                     	if	1	;There is more than 1 active tblptr byte
   882  000B72  0E06               	movlw	high main@F2861
   883  000B74  6EF7               	movwf	tblptrh,c
   884  000B76                     	endif
   885  000B76                     	if	0	;There are less than 3 active tblptr bytes
   886  000B76                     	endif
   887  000B76  EE20  F0B4         	lfsr	2,main@afficheNom
   888  000B7A  0E14               	movlw	20
   889  000B7C                     u1370:
   890  000B7C  0009               	tblrd		*+
   891  000B7E  CFF5 FFDE          	movff	tablat,postinc2
   892  000B82  06E8               	decf	wreg,f,c
   893  000B84  E2FB               	bc	u1370
   894  000B86                     
   895                           ;main.c: 90: int posX = 10;
   896  000B86  0E00               	movlw	0
   897  000B88  0100               	movlb	0	; () banked
   898  000B8A  6FCE               	movwf	(main@posX+1)& (0+255),b
   899  000B8C  0E0A               	movlw	10
   900  000B8E  6FCD               	movwf	main@posX& (0+255),b
   901  000B90                     
   902                           ; BSR set to: 0
   903                           ;main.c: 91: int pointage = 0;
   904  000B90  0E00               	movlw	0
   905  000B92  6FCC               	movwf	(main@pointage+1)& (0+255),b
   906  000B94  0E00               	movlw	0
   907  000B96  6FCB               	movwf	main@pointage& (0+255),b
   908  000B98                     
   909                           ; BSR set to: 0
   910                           ;main.c: 96: initialisation();
   911  000B98  ECCC  F00A         	call	_initialisation	;wreg free
   912  000B9C                     
   913                           ;main.c: 97: lcd_init();
   914  000B9C  EC0F  F00C         	call	_lcd_init	;wreg free
   915  000BA0                     
   916                           ;main.c: 98: init_serie();
   917  000BA0  EC4A  F00C         	call	_init_serie	;wreg free
   918  000BA4                     
   919                           ;main.c: 99: lcd_cacheCurseur();
   920  000BA4  EC81  F00C         	call	_lcd_cacheCurseur	;wreg free
   921  000BA8                     
   922                           ;main.c: 101: lcd_gotoXY(1, 1);
   923  000BA8  0E01               	movlw	1
   924  000BAA  6E04               	movwf	lcd_gotoXY@y^0,c
   925  000BAC  0E01               	movlw	1
   926  000BAE  EC4E  F009         	call	_lcd_gotoXY
   927  000BB2                     
   928                           ;main.c: 102: lcd_putMessage(afficheNom);
   929  000BB2  0EB4               	movlw	low main@afficheNom
   930  000BB4  6E07               	movwf	lcd_putMessage@chaine^0,c
   931  000BB6  0E00               	movlw	high main@afficheNom
   932  000BB8  6E08               	movwf	(lcd_putMessage@chaine+1)^0,c
   933  000BBA  ECA6  F00B         	call	_lcd_putMessage	;wreg free
   934  000BBE                     
   935                           ;main.c: 103: lcd_gotoXY(1, 2);
   936  000BBE  0E02               	movlw	2
   937  000BC0  6E04               	movwf	lcd_gotoXY@y^0,c
   938  000BC2  0E01               	movlw	1
   939  000BC4  EC4E  F009         	call	_lcd_gotoXY
   940  000BC8                     
   941                           ;main.c: 104: lcd_ecritChar(1);
   942  000BC8  0E01               	movlw	1
   943  000BCA  EC1F  F00B         	call	_lcd_ecritChar
   944  000BCE                     
   945                           ;main.c: 105: lcd_gotoXY(1, 3);
   946  000BCE  0E03               	movlw	3
   947  000BD0  6E04               	movwf	lcd_gotoXY@y^0,c
   948  000BD2  0E01               	movlw	1
   949  000BD4  EC4E  F009         	call	_lcd_gotoXY
   950  000BD8                     
   951                           ;main.c: 106: lcd_ecritChar(2);
   952  000BD8  0E02               	movlw	2
   953  000BDA  EC1F  F00B         	call	_lcd_ecritChar
   954  000BDE                     
   955                           ;main.c: 107: lcd_gotoXY(1, 4);
   956  000BDE  0E04               	movlw	4
   957  000BE0  6E04               	movwf	lcd_gotoXY@y^0,c
   958  000BE2  0E01               	movlw	1
   959  000BE4  EC4E  F009         	call	_lcd_gotoXY
   960  000BE8                     
   961                           ;main.c: 108: lcd_ecritChar(3);
   962  000BE8  0E03               	movlw	3
   963  000BEA  EC1F  F00B         	call	_lcd_ecritChar
   964  000BEE                     
   965                           ;main.c: 109: _delay((unsigned long)((2000)*(1000000/4000.0)));
   966  000BEE  0E03               	movlw	3
   967  000BF0  6E49               	movwf	(??_main+1)^0,c
   968  000BF2  0E8A               	movlw	138
   969  000BF4  6E48               	movwf	??_main^0,c
   970  000BF6  0E56               	movlw	86
   971  000BF8                     u1437:
   972  000BF8  2EE8               	decfsz	wreg,f,c
   973  000BFA  D7FE               	bra	u1437
   974  000BFC  2E48               	decfsz	??_main^0,f,c
   975  000BFE  D7FC               	bra	u1437
   976  000C00  2E49               	decfsz	(??_main+1)^0,f,c
   977  000C02  D7FA               	bra	u1437
   978  000C04                     
   979                           ;main.c: 111: afficheAliens();
   980  000C04  EC74  F00A         	call	_afficheAliens	;wreg free
   981  000C08                     
   982                           ;main.c: 112: etatInitSW = testEtat();
   983  000C08  EC59  F00C         	call	_testEtat	;wreg free
   984  000C0C  0100               	movlb	0	; () banked
   985  000C0E  6FCA               	movwf	main@etatInitSW& (0+255),b
   986  000C10                     
   987                           ; BSR set to: 0
   988                           ;main.c: 113: etatAfterSW = etatInitSW;
   989  000C10  C0CA  F0C9         	movff	main@etatInitSW,main@etatAfterSW
   990  000C14                     l2646:
   991                           
   992                           ;main.c: 116: {;main.c: 118: if(m_tempsDAfficher == 1)
   993  000C14  0100               	movlb	0	; () banked
   994  000C16  05CF               	decf	_m_tempsDAfficher& (0+255),w,b
   995  000C18  A4D8               	btfss	status,2,c
   996  000C1A  EF11  F006         	goto	u1381
   997  000C1E  EF13  F006         	goto	u1380
   998  000C22                     u1381:
   999  000C22  EF3C  F006         	goto	l2666
  1000  000C26                     u1380:
  1001  000C26                     
  1002                           ; BSR set to: 0
  1003                           ;main.c: 119: {;main.c: 120: nouveauxAliens();
  1004  000C26  EC6D  F006         	call	_nouveauxAliens	;wreg free
  1005  000C2A                     
  1006                           ;main.c: 122: if(perdu() == 1)
  1007  000C2A  EC45  F00B         	call	_perdu	;wreg free
  1008  000C2E  06E8               	decf	wreg,f,c
  1009  000C30  A4D8               	btfss	status,2,c
  1010  000C32  EF1D  F006         	goto	u1391
  1011  000C36  EF1F  F006         	goto	u1390
  1012  000C3A                     u1391:
  1013  000C3A  EF31  F006         	goto	l2660
  1014  000C3E                     u1390:
  1015  000C3E                     
  1016                           ;main.c: 123: {;main.c: 124: affichePerdu(pointage);
  1017  000C3E  C0CB  F020         	movff	main@pointage,affichePerdu@pts
  1018  000C42  C0CC  F021         	movff	main@pointage+1,affichePerdu@pts+1
  1019  000C46  ECA5  F007         	call	_affichePerdu	;wreg free
  1020  000C4A                     
  1021                           ;main.c: 125: posX = 10;
  1022  000C4A  0E00               	movlw	0
  1023  000C4C  0100               	movlb	0	; () banked
  1024  000C4E  6FCE               	movwf	(main@posX+1)& (0+255),b
  1025  000C50  0E0A               	movlw	10
  1026  000C52  6FCD               	movwf	main@posX& (0+255),b
  1027  000C54                     
  1028                           ; BSR set to: 0
  1029                           ;main.c: 126: videAliens();
  1030  000C54  EC5F  F008         	call	_videAliens	;wreg free
  1031  000C58                     
  1032                           ;main.c: 127: pointage = 0;
  1033  000C58  0E00               	movlw	0
  1034  000C5A  0100               	movlb	0	; () banked
  1035  000C5C  6FCC               	movwf	(main@pointage+1)& (0+255),b
  1036  000C5E  0E00               	movlw	0
  1037  000C60  6FCB               	movwf	main@pointage& (0+255),b
  1038  000C62                     l2660:
  1039                           
  1040                           ;main.c: 128: };main.c: 130: afficheAliens();
  1041  000C62  EC74  F00A         	call	_afficheAliens	;wreg free
  1042  000C66                     
  1043                           ;main.c: 131: lcd_gotoXY(posX, 4);
  1044  000C66  0E04               	movlw	4
  1045  000C68  6E04               	movwf	lcd_gotoXY@y^0,c
  1046  000C6A  0100               	movlb	0	; () banked
  1047  000C6C  51CD               	movf	main@posX& (0+255),w,b
  1048  000C6E  EC4E  F009         	call	_lcd_gotoXY
  1049  000C72                     
  1050                           ;main.c: 132: m_tempsDAfficher = 0;
  1051  000C72  0E00               	movlw	0
  1052  000C74  0100               	movlb	0	; () banked
  1053  000C76  6FCF               	movwf	_m_tempsDAfficher& (0+255),b
  1054  000C78                     l2666:
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;main.c: 133: };main.c: 135: deplace(&posX);
  1058  000C78  0ECD               	movlw	low main@posX
  1059  000C7A  6E0A               	movwf	deplace@x^0,c
  1060  000C7C  0E00               	movlw	high main@posX
  1061  000C7E  6E0B               	movwf	(deplace@x+1)^0,c
  1062  000C80  EC1F  F007         	call	_deplace	;wreg free
  1063  000C84                     
  1064                           ;main.c: 137: etatInitSW = testEtat();
  1065  000C84  EC59  F00C         	call	_testEtat	;wreg free
  1066  000C88  0100               	movlb	0	; () banked
  1067  000C8A  6FCA               	movwf	main@etatInitSW& (0+255),b
  1068  000C8C                     
  1069                           ; BSR set to: 0
  1070                           ;main.c: 139: if( (etatInitSW != etatAfterSW) && (etatAfterSW == 0) )
  1071  000C8C  51C9               	movf	main@etatAfterSW& (0+255),w,b
  1072  000C8E  19CA               	xorwf	main@etatInitSW& (0+255),w,b
  1073  000C90  B4D8               	btfsc	status,2,c
  1074  000C92  EF4D  F006         	goto	u1401
  1075  000C96  EF4F  F006         	goto	u1400
  1076  000C9A                     u1401:
  1077  000C9A  EF5E  F006         	goto	l2676
  1078  000C9E                     u1400:
  1079  000C9E                     
  1080                           ; BSR set to: 0
  1081  000C9E  51C9               	movf	main@etatAfterSW& (0+255),w,b
  1082  000CA0  A4D8               	btfss	status,2,c
  1083  000CA2  EF55  F006         	goto	u1411
  1084  000CA6  EF57  F006         	goto	u1410
  1085  000CAA                     u1411:
  1086  000CAA  EF5E  F006         	goto	l2676
  1087  000CAE                     u1410:
  1088  000CAE                     
  1089                           ; BSR set to: 0
  1090                           ;main.c: 140: {;main.c: 141: feu(posX, &pointage);
  1091  000CAE  0ECB               	movlw	low main@pointage
  1092  000CB0  6E07               	movwf	feu@pts^0,c
  1093  000CB2  0E00               	movlw	high main@pointage
  1094  000CB4  6E08               	movwf	(feu@pts+1)^0,c
  1095  000CB6  51CD               	movf	main@posX& (0+255),w,b
  1096  000CB8  EC9C  F004         	call	_feu
  1097  000CBC                     l2676:
  1098                           
  1099                           ;main.c: 142: };main.c: 144: etatAfterSW = etatInitSW;
  1100  000CBC  C0CA  F0C9         	movff	main@etatInitSW,main@etatAfterSW
  1101  000CC0                     
  1102                           ;main.c: 145: _delay((unsigned long)((100)*(1000000/4000.0)));
  1103  000CC0  0E21               	movlw	33
  1104  000CC2  6E48               	movwf	??_main^0,c
  1105  000CC4  0E76               	movlw	118
  1106  000CC6                     u1447:
  1107  000CC6  2EE8               	decfsz	wreg,f,c
  1108  000CC8  D7FE               	bra	u1447
  1109  000CCA  2E48               	decfsz	??_main^0,f,c
  1110  000CCC  D7FC               	bra	u1447
  1111  000CCE  F000 F000          	nop2	
  1112  000CD2  EF0A  F006         	goto	l2646
  1113  000CD6  EF16  F000         	goto	start
  1114  000CDA                     __end_of_main:
  1115                           	opt callstack 0
  1116                           
  1117 ;; *************** function _videAliens *****************
  1118 ;; Defined at:
  1119 ;;		line 228 in file "main.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;		None
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  j               2   10[COMRAM] int 
  1124 ;;  i               2    8[COMRAM] int 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1134 ;;      Params:         0       0       0       0       0       0       0
  1135 ;;      Locals:         4       0       0       0       0       0       0
  1136 ;;      Temps:          2       0       0       0       0       0       0
  1137 ;;      Totals:         6       0       0       0       0       0       0
  1138 ;;Total ram usage:        6 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    5
  1141 ;; This function calls:
  1142 ;;		___wmul
  1143 ;;		_lcd_effaceAffichage
  1144 ;; This function is called by:
  1145 ;;		_main
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text1
  1150  0010BE                     __ptext1:
  1151                           	opt callstack 0
  1152  0010BE                     _videAliens:
  1153                           	opt callstack 25
  1154  0010BE                     
  1155                           ;main.c: 230: lcd_effaceAffichage();
  1156  0010BE  EC76  F00C         	call	_lcd_effaceAffichage	;wreg free
  1157  0010C2                     
  1158                           ;main.c: 232: for(int i =0 ; i < 4 ; i++)
  1159  0010C2  0E00               	movlw	0
  1160  0010C4  6E0A               	movwf	(videAliens@i+1)^0,c
  1161  0010C6  0E00               	movlw	0
  1162  0010C8  6E09               	movwf	videAliens@i^0,c
  1163  0010CA                     l2524:
  1164                           
  1165                           ;main.c: 233: {;main.c: 234: for(int j = 0 ; j < 20 ; j++)
  1166  0010CA  0E00               	movlw	0
  1167  0010CC  6E0C               	movwf	(videAliens@j+1)^0,c
  1168  0010CE  0E00               	movlw	0
  1169  0010D0  6E0B               	movwf	videAliens@j^0,c
  1170  0010D2                     l2530:
  1171                           
  1172                           ;main.c: 235: {;main.c: 236: m_aliens[i][j] = ' ';
  1173  0010D2  C009  F001         	movff	videAliens@i,___wmul@multiplier
  1174  0010D6  C00A  F002         	movff	videAliens@i+1,___wmul@multiplier+1
  1175  0010DA  0E00               	movlw	0
  1176  0010DC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1177  0010DE  0E15               	movlw	21
  1178  0010E0  6E03               	movwf	___wmul@multiplicand^0,c
  1179  0010E2  EC37  F00C         	call	___wmul	;wreg free
  1180  0010E6  0E60               	movlw	low _m_aliens
  1181  0010E8  6E07               	movwf	??_videAliens^0,c
  1182  0010EA  0E00               	movlw	high _m_aliens
  1183  0010EC  6E08               	movwf	(??_videAliens+1)^0,c
  1184  0010EE  5001               	movf	?___wmul^0,w,c
  1185  0010F0  2607               	addwf	??_videAliens^0,f,c
  1186  0010F2  5002               	movf	(?___wmul+1)^0,w,c
  1187  0010F4  2208               	addwfc	(??_videAliens+1)^0,f,c
  1188  0010F6  500B               	movf	videAliens@j^0,w,c
  1189  0010F8  2407               	addwf	??_videAliens^0,w,c
  1190  0010FA  6ED9               	movwf	fsr2l,c
  1191  0010FC  500C               	movf	(videAliens@j+1)^0,w,c
  1192  0010FE  2008               	addwfc	(??_videAliens+1)^0,w,c
  1193  001100  6EDA               	movwf	fsr2h,c
  1194  001102  0E20               	movlw	32
  1195  001104  6EDF               	movwf	indf2,c
  1196  001106  4A0B               	infsnz	videAliens@j^0,f,c
  1197  001108  2A0C               	incf	(videAliens@j+1)^0,f,c
  1198  00110A  BE0C               	btfsc	(videAliens@j+1)^0,7,c
  1199  00110C  EF91  F008         	goto	u1241
  1200  001110  500C               	movf	(videAliens@j+1)^0,w,c
  1201  001112  E109               	bnz	u1240
  1202  001114  0E14               	movlw	20
  1203  001116  5C0B               	subwf	videAliens@j^0,w,c
  1204  001118  A0D8               	btfss	status,0,c
  1205  00111A  EF91  F008         	goto	u1241
  1206  00111E  EF93  F008         	goto	u1240
  1207  001122                     u1241:
  1208  001122  EF69  F008         	goto	l2530
  1209  001126                     u1240:
  1210  001126  4A09               	infsnz	videAliens@i^0,f,c
  1211  001128  2A0A               	incf	(videAliens@i+1)^0,f,c
  1212  00112A  BE0A               	btfsc	(videAliens@i+1)^0,7,c
  1213  00112C  EFA1  F008         	goto	u1251
  1214  001130  500A               	movf	(videAliens@i+1)^0,w,c
  1215  001132  E109               	bnz	u1250
  1216  001134  0E04               	movlw	4
  1217  001136  5C09               	subwf	videAliens@i^0,w,c
  1218  001138  A0D8               	btfss	status,0,c
  1219  00113A  EFA1  F008         	goto	u1251
  1220  00113E  EFA3  F008         	goto	u1250
  1221  001142                     u1251:
  1222  001142  EF65  F008         	goto	l2524
  1223  001146                     u1250:
  1224  001146  0012               	return		;funcret
  1225  001148                     __end_of_videAliens:
  1226                           	opt callstack 0
  1227                           
  1228 ;; *************** function _testEtat *****************
  1229 ;; Defined at:
  1230 ;;		line 155 in file "main.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      unsigned char 
  1237 ;; Registers used:
  1238 ;;		wreg
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1244 ;;      Params:         0       0       0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0
  1247 ;;      Totals:         0       0       0       0       0       0       0
  1248 ;;Total ram usage:        0 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    1
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text2
  1259  0018B2                     __ptext2:
  1260                           	opt callstack 0
  1261  0018B2                     _testEtat:
  1262                           	opt callstack 29
  1263  0018B2                     
  1264                           ;main.c: 157: if(PORTBbits.RB1 == 0)
  1265  0018B2  B281               	btfsc	129,1,c	;volatile
  1266  0018B4  EF5E  F00C         	goto	u1151
  1267  0018B8  EF60  F00C         	goto	u1150
  1268  0018BC                     u1151:
  1269  0018BC  EF63  F00C         	goto	l2438
  1270  0018C0                     u1150:
  1271  0018C0                     
  1272                           ;main.c: 158: {;main.c: 159: return 1;
  1273  0018C0  0E01               	movlw	1
  1274  0018C2  EF64  F00C         	goto	l101
  1275  0018C6                     l2438:
  1276                           
  1277                           ;main.c: 161: else;main.c: 162: {;main.c: 163: return 0;
  1278  0018C6  0E00               	movlw	0
  1279  0018C8                     l101:
  1280  0018C8  0012               	return		;funcret
  1281  0018CA                     __end_of_testEtat:
  1282                           	opt callstack 0
  1283                           
  1284 ;; *************** function _perdu *****************
  1285 ;; Defined at:
  1286 ;;		line 317 in file "main.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  safe           21    7[COMRAM] const unsigned char [21]
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      unsigned char 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1300 ;;      Params:         0       0       0       0       0       0       0
  1301 ;;      Locals:        21       0       0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0
  1303 ;;      Totals:        21       0       0       0       0       0       0
  1304 ;;Total ram usage:       21 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    2
  1307 ;; This function calls:
  1308 ;;		_strcmp
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text3
  1315  00168A                     __ptext3:
  1316                           	opt callstack 0
  1317  00168A                     _perdu:
  1318                           	opt callstack 28
  1319  00168A                     
  1320                           ;main.c: 320: const char safe[21] = {"                    "};
  1321  00168A  0E01               	movlw	low perdu@F2886
  1322  00168C  6EF6               	movwf	tblptrl,c
  1323  00168E                     	if	1	;There is more than 1 active tblptr byte
  1324  00168E  0E06               	movlw	high perdu@F2886
  1325  001690  6EF7               	movwf	tblptrh,c
  1326  001692                     	endif
  1327  001692                     	if	0	;There are less than 3 active tblptr bytes
  1328  001692                     	endif
  1329  001692  EE20  F008         	lfsr	2,perdu@safe
  1330  001696  0E14               	movlw	20
  1331  001698                     u1190:
  1332  001698  0009               	tblrd		*+
  1333  00169A  CFF5 FFDE          	movff	tablat,postinc2
  1334  00169E  06E8               	decf	wreg,f,c
  1335  0016A0  E2FB               	bc	u1190
  1336  0016A2                     
  1337                           ;main.c: 323: if(strcmp(safe, m_aliens[3]) == 0)
  1338  0016A2  0E08               	movlw	low perdu@safe
  1339  0016A4  6E01               	movwf	strcmp@s1^0,c
  1340  0016A6  0E00               	movlw	high perdu@safe
  1341  0016A8  6E02               	movwf	(strcmp@s1+1)^0,c
  1342  0016AA  0E9F               	movlw	low (_m_aliens+63)
  1343  0016AC  6E03               	movwf	strcmp@s2^0,c
  1344  0016AE  0E00               	movlw	high (_m_aliens+63)
  1345  0016B0  6E04               	movwf	(strcmp@s2+1)^0,c
  1346  0016B2  EC16  F00A         	call	_strcmp	;wreg free
  1347  0016B6  5001               	movf	?_strcmp^0,w,c
  1348  0016B8  1002               	iorwf	(?_strcmp+1)^0,w,c
  1349  0016BA  A4D8               	btfss	status,2,c
  1350  0016BC  EF62  F00B         	goto	u1201
  1351  0016C0  EF64  F00B         	goto	u1200
  1352  0016C4                     u1201:
  1353  0016C4  EF67  F00B         	goto	l2486
  1354  0016C8                     u1200:
  1355  0016C8                     
  1356                           ;main.c: 324: {;main.c: 325: return 0;
  1357  0016C8  0E00               	movlw	0
  1358  0016CA  EF68  F00B         	goto	l148
  1359  0016CE                     l2486:
  1360                           
  1361                           ;main.c: 327: else;main.c: 328: {;main.c: 329: return 1;
  1362  0016CE  0E01               	movlw	1
  1363  0016D0                     l148:
  1364  0016D0  0012               	return		;funcret
  1365  0016D2                     __end_of_perdu:
  1366                           	opt callstack 0
  1367                           
  1368 ;; *************** function _strcmp *****************
  1369 ;; Defined at:
  1370 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcmp.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  1373 ;;		 -> perdu@safe(21), 
  1374 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  1375 ;;		 -> m_aliens(84), 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  r               1    6[COMRAM] char 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  2    0[COMRAM] int 
  1380 ;; Registers used:
  1381 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1387 ;;      Params:         4       0       0       0       0       0       0
  1388 ;;      Locals:         1       0       0       0       0       0       0
  1389 ;;      Temps:          2       0       0       0       0       0       0
  1390 ;;      Totals:         7       0       0       0       0       0       0
  1391 ;;Total ram usage:        7 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    1
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_perdu
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text4
  1402  00142C                     __ptext4:
  1403                           	opt callstack 0
  1404  00142C                     _strcmp:
  1405                           	opt callstack 28
  1406  00142C  EF1C  F00A         	goto	l2154
  1407  001430                     l2152:
  1408  001430  4A01               	infsnz	strcmp@s1^0,f,c
  1409  001432  2A02               	incf	(strcmp@s1+1)^0,f,c
  1410  001434  4A03               	infsnz	strcmp@s2^0,f,c
  1411  001436  2A04               	incf	(strcmp@s2+1)^0,f,c
  1412  001438                     l2154:
  1413  001438  C003  FFD9         	movff	strcmp@s2,fsr2l
  1414  00143C  C004  FFDA         	movff	strcmp@s2+1,fsr2h
  1415  001440  50DF               	movf	indf2,w,c
  1416  001442  6E05               	movwf	??_strcmp^0,c
  1417  001444  C001  FFD9         	movff	strcmp@s1,fsr2l
  1418  001448  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  1419  00144C  50DF               	movf	indf2,w,c
  1420  00144E  6E06               	movwf	(??_strcmp+1)^0,c
  1421  001450  5005               	movf	??_strcmp^0,w,c
  1422  001452  5C06               	subwf	(??_strcmp+1)^0,w,c
  1423  001454  6E07               	movwf	strcmp@r^0,c
  1424  001456  5007               	movf	strcmp@r^0,w,c
  1425  001458  A4D8               	btfss	status,2,c
  1426  00145A  EF31  F00A         	goto	u901
  1427  00145E  EF33  F00A         	goto	u900
  1428  001462                     u901:
  1429  001462  EF3F  F00A         	goto	l2158
  1430  001466                     u900:
  1431  001466  C001  FFD9         	movff	strcmp@s1,fsr2l
  1432  00146A  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  1433  00146E  50DF               	movf	indf2,w,c
  1434  001470  A4D8               	btfss	status,2,c
  1435  001472  EF3D  F00A         	goto	u911
  1436  001476  EF3F  F00A         	goto	u910
  1437  00147A                     u911:
  1438  00147A  EF18  F00A         	goto	l2152
  1439  00147E                     u910:
  1440  00147E                     l2158:
  1441  00147E  5007               	movf	strcmp@r^0,w,c
  1442  001480  6E01               	movwf	?_strcmp^0,c
  1443  001482  6A02               	clrf	(?_strcmp+1)^0,c
  1444  001484  BE01               	btfsc	?_strcmp^0,7,c
  1445  001486  0602               	decf	(?_strcmp+1)^0,f,c
  1446  001488  0012               	return		;funcret
  1447  00148A                     __end_of_strcmp:
  1448                           	opt callstack 0
  1449                           
  1450 ;; *************** function _nouveauxAliens *****************
  1451 ;; Defined at:
  1452 ;;		line 173 in file "main.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  j               2   69[COMRAM] int 
  1457 ;;  posAlien       40   23[COMRAM] int [20]
  1458 ;;  verifPositio    2   67[COMRAM] int 
  1459 ;;  monstre         2   65[COMRAM] int 
  1460 ;;  i               2   63[COMRAM] int 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1470 ;;      Params:         0       0       0       0       0       0       0
  1471 ;;      Locals:        48       0       0       0       0       0       0
  1472 ;;      Temps:          3       0       0       0       0       0       0
  1473 ;;      Totals:        51       0       0       0       0       0       0
  1474 ;;Total ram usage:       51 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    3
  1477 ;; This function calls:
  1478 ;;		___awmod
  1479 ;;		_rand
  1480 ;;		_strcpy
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text5
  1487  000CDA                     __ptext5:
  1488                           	opt callstack 0
  1489  000CDA                     _nouveauxAliens:
  1490                           	opt callstack 27
  1491  000CDA                     
  1492                           ;main.c: 177: int i = 0;
  1493  000CDA  0E00               	movlw	0
  1494  000CDC  6E41               	movwf	(nouveauxAliens@i+1)^0,c
  1495  000CDE  0E00               	movlw	0
  1496  000CE0  6E40               	movwf	nouveauxAliens@i^0,c
  1497                           
  1498                           ;main.c: 178: int monstre = 0;
  1499  000CE2  0E00               	movlw	0
  1500  000CE4  6E43               	movwf	(nouveauxAliens@monstre+1)^0,c
  1501  000CE6  0E00               	movlw	0
  1502  000CE8  6E42               	movwf	nouveauxAliens@monstre^0,c
  1503  000CEA                     
  1504                           ;main.c: 181: strcpy(m_aliens[3], m_aliens[2]);
  1505  000CEA  0E9F               	movlw	low (_m_aliens+63)
  1506  000CEC  6E01               	movwf	strcpy@to^0,c
  1507  000CEE  0E00               	movlw	high (_m_aliens+63)
  1508  000CF0  6E02               	movwf	(strcpy@to+1)^0,c
  1509  000CF2  0E8A               	movlw	low (_m_aliens+42)
  1510  000CF4  6E03               	movwf	strcpy@from^0,c
  1511  000CF6  0E00               	movlw	high (_m_aliens+42)
  1512  000CF8  6E04               	movwf	(strcpy@from+1)^0,c
  1513  000CFA  EC89  F00B         	call	_strcpy	;wreg free
  1514  000CFE                     
  1515                           ;main.c: 182: strcpy(m_aliens[2], m_aliens[1]);
  1516  000CFE  0E8A               	movlw	low (_m_aliens+42)
  1517  000D00  6E01               	movwf	strcpy@to^0,c
  1518  000D02  0E00               	movlw	high (_m_aliens+42)
  1519  000D04  6E02               	movwf	(strcpy@to+1)^0,c
  1520  000D06  0E75               	movlw	low (_m_aliens+21)
  1521  000D08  6E03               	movwf	strcpy@from^0,c
  1522  000D0A  0E00               	movlw	high (_m_aliens+21)
  1523  000D0C  6E04               	movwf	(strcpy@from+1)^0,c
  1524  000D0E  EC89  F00B         	call	_strcpy	;wreg free
  1525  000D12                     
  1526                           ;main.c: 183: strcpy(m_aliens[1], m_aliens[0]);
  1527  000D12  0E75               	movlw	low (_m_aliens+21)
  1528  000D14  6E01               	movwf	strcpy@to^0,c
  1529  000D16  0E00               	movlw	high (_m_aliens+21)
  1530  000D18  6E02               	movwf	(strcpy@to+1)^0,c
  1531  000D1A  0E60               	movlw	low _m_aliens
  1532  000D1C  6E03               	movwf	strcpy@from^0,c
  1533  000D1E  0E00               	movlw	high _m_aliens
  1534  000D20  6E04               	movwf	(strcpy@from+1)^0,c
  1535  000D22  EC89  F00B         	call	_strcpy	;wreg free
  1536  000D26                     
  1537                           ;main.c: 186: for(int j = 0 ; j < 20 ; j++)
  1538  000D26  0E00               	movlw	0
  1539  000D28  6E47               	movwf	(nouveauxAliens@j+1)^0,c
  1540  000D2A  0E00               	movlw	0
  1541  000D2C  6E46               	movwf	nouveauxAliens@j^0,c
  1542  000D2E                     l2456:
  1543                           
  1544                           ;main.c: 187: {;main.c: 188: posAlien[j] = 0;
  1545  000D2E  90D8               	bcf	status,0,c
  1546  000D30  3446               	rlcf	nouveauxAliens@j^0,w,c
  1547  000D32  6ED9               	movwf	fsr2l,c
  1548  000D34  3447               	rlcf	(nouveauxAliens@j+1)^0,w,c
  1549  000D36  6EDA               	movwf	fsr2h,c
  1550  000D38  0E18               	movlw	low nouveauxAliens@posAlien
  1551  000D3A  26D9               	addwf	fsr2l,f,c
  1552  000D3C  0E00               	movlw	high nouveauxAliens@posAlien
  1553  000D3E  22DA               	addwfc	fsr2h,f,c
  1554  000D40  0E00               	movlw	0
  1555  000D42  6EDE               	movwf	postinc2,c
  1556  000D44  0E00               	movlw	0
  1557  000D46  6EDD               	movwf	postdec2,c
  1558                           
  1559                           ;main.c: 189: m_aliens[0][j] = ' ';
  1560  000D48  0E60               	movlw	low _m_aliens
  1561  000D4A  2446               	addwf	nouveauxAliens@j^0,w,c
  1562  000D4C  6ED9               	movwf	fsr2l,c
  1563  000D4E  0E00               	movlw	high _m_aliens
  1564  000D50  2047               	addwfc	(nouveauxAliens@j+1)^0,w,c
  1565  000D52  6EDA               	movwf	fsr2h,c
  1566  000D54  0E20               	movlw	32
  1567  000D56  6EDF               	movwf	indf2,c
  1568  000D58  4A46               	infsnz	nouveauxAliens@j^0,f,c
  1569  000D5A  2A47               	incf	(nouveauxAliens@j+1)^0,f,c
  1570  000D5C  BE47               	btfsc	(nouveauxAliens@j+1)^0,7,c
  1571  000D5E  EFBA  F006         	goto	u1161
  1572  000D62  5047               	movf	(nouveauxAliens@j+1)^0,w,c
  1573  000D64  E109               	bnz	u1160
  1574  000D66  0E14               	movlw	20
  1575  000D68  5C46               	subwf	nouveauxAliens@j^0,w,c
  1576  000D6A  A0D8               	btfss	status,0,c
  1577  000D6C  EFBA  F006         	goto	u1161
  1578  000D70  EFBC  F006         	goto	u1160
  1579  000D74                     u1161:
  1580  000D74  EF97  F006         	goto	l2456
  1581  000D78                     u1160:
  1582  000D78  EF09  F007         	goto	l2474
  1583  000D7C                     l2462:
  1584                           
  1585                           ;main.c: 194: {;main.c: 195: verifPosition = rand() % 20;
  1586  000D7C  ECF6  F00A         	call	_rand	;wreg free
  1587  000D80  C00D  F00F         	movff	?_rand,___awmod@dividend
  1588  000D84  C00E  F010         	movff	?_rand+1,___awmod@dividend+1
  1589  000D88  0E00               	movlw	0
  1590  000D8A  6E12               	movwf	(___awmod@divisor+1)^0,c
  1591  000D8C  0E14               	movlw	20
  1592  000D8E  6E11               	movwf	___awmod@divisor^0,c
  1593  000D90  EC07  F008         	call	___awmod	;wreg free
  1594  000D94  C00F  F044         	movff	?___awmod,nouveauxAliens@verifPosition
  1595  000D98  C010  F045         	movff	?___awmod+1,nouveauxAliens@verifPosition+1
  1596  000D9C                     
  1597                           ;main.c: 196: if(posAlien[verifPosition] == 0)
  1598  000D9C  90D8               	bcf	status,0,c
  1599  000D9E  3444               	rlcf	nouveauxAliens@verifPosition^0,w,c
  1600  000DA0  6ED9               	movwf	fsr2l,c
  1601  000DA2  3445               	rlcf	(nouveauxAliens@verifPosition+1)^0,w,c
  1602  000DA4  6EDA               	movwf	fsr2h,c
  1603  000DA6  0E18               	movlw	low nouveauxAliens@posAlien
  1604  000DA8  26D9               	addwf	fsr2l,f,c
  1605  000DAA  0E00               	movlw	high nouveauxAliens@posAlien
  1606  000DAC  22DA               	addwfc	fsr2h,f,c
  1607  000DAE  50DE               	movf	postinc2,w,c
  1608  000DB0  10DE               	iorwf	postinc2,w,c
  1609  000DB2  A4D8               	btfss	status,2,c
  1610  000DB4  EFDE  F006         	goto	u1171
  1611  000DB8  EFE0  F006         	goto	u1170
  1612  000DBC                     u1171:
  1613  000DBC  EF09  F007         	goto	l2474
  1614  000DC0                     u1170:
  1615  000DC0                     
  1616                           ;main.c: 197: {;main.c: 198: monstre = rand()%3+1;
  1617  000DC0  ECF6  F00A         	call	_rand	;wreg free
  1618  000DC4  C00D  F00F         	movff	?_rand,___awmod@dividend
  1619  000DC8  C00E  F010         	movff	?_rand+1,___awmod@dividend+1
  1620  000DCC  0E00               	movlw	0
  1621  000DCE  6E12               	movwf	(___awmod@divisor+1)^0,c
  1622  000DD0  0E03               	movlw	3
  1623  000DD2  6E11               	movwf	___awmod@divisor^0,c
  1624  000DD4  EC07  F008         	call	___awmod	;wreg free
  1625  000DD8  0E01               	movlw	1
  1626  000DDA  240F               	addwf	?___awmod^0,w,c
  1627  000DDC  6E42               	movwf	nouveauxAliens@monstre^0,c
  1628  000DDE  0E00               	movlw	0
  1629  000DE0  2010               	addwfc	(?___awmod+1)^0,w,c
  1630  000DE2  6E43               	movwf	(nouveauxAliens@monstre+1)^0,c
  1631  000DE4                     
  1632                           ;main.c: 199: m_aliens[0][verifPosition] = monstre;
  1633  000DE4  0E60               	movlw	low _m_aliens
  1634  000DE6  2444               	addwf	nouveauxAliens@verifPosition^0,w,c
  1635  000DE8  6ED9               	movwf	fsr2l,c
  1636  000DEA  0E00               	movlw	high _m_aliens
  1637  000DEC  2045               	addwfc	(nouveauxAliens@verifPosition+1)^0,w,c
  1638  000DEE  6EDA               	movwf	fsr2h,c
  1639  000DF0  C042  FFDF         	movff	nouveauxAliens@monstre,indf2
  1640  000DF4                     
  1641                           ;main.c: 200: posAlien[verifPosition] = 1;
  1642  000DF4  90D8               	bcf	status,0,c
  1643  000DF6  3444               	rlcf	nouveauxAliens@verifPosition^0,w,c
  1644  000DF8  6ED9               	movwf	fsr2l,c
  1645  000DFA  3445               	rlcf	(nouveauxAliens@verifPosition+1)^0,w,c
  1646  000DFC  6EDA               	movwf	fsr2h,c
  1647  000DFE  0E18               	movlw	low nouveauxAliens@posAlien
  1648  000E00  26D9               	addwf	fsr2l,f,c
  1649  000E02  0E00               	movlw	high nouveauxAliens@posAlien
  1650  000E04  22DA               	addwfc	fsr2h,f,c
  1651  000E06  0E01               	movlw	1
  1652  000E08  6EDE               	movwf	postinc2,c
  1653  000E0A  0E00               	movlw	0
  1654  000E0C  6EDD               	movwf	postdec2,c
  1655  000E0E                     
  1656                           ;main.c: 201: i++;
  1657  000E0E  4A40               	infsnz	nouveauxAliens@i^0,f,c
  1658  000E10  2A41               	incf	(nouveauxAliens@i+1)^0,f,c
  1659  000E12                     l2474:
  1660  000E12  0E02               	movlw	2
  1661  000E14  244E               	addwf	_m_niveau^0,w,c
  1662  000E16  6E15               	movwf	??_nouveauxAliens^0,c
  1663  000E18  0E00               	movlw	0
  1664  000E1A  204F               	addwfc	(_m_niveau+1)^0,w,c
  1665  000E1C  6E16               	movwf	(??_nouveauxAliens+1)^0,c
  1666  000E1E  5015               	movf	??_nouveauxAliens^0,w,c
  1667  000E20  5C40               	subwf	nouveauxAliens@i^0,w,c
  1668  000E22  5041               	movf	(nouveauxAliens@i+1)^0,w,c
  1669  000E24  0A80               	xorlw	128
  1670  000E26  6E17               	movwf	(??_nouveauxAliens+2)^0,c
  1671  000E28  5016               	movf	(??_nouveauxAliens+1)^0,w,c
  1672  000E2A  0A80               	xorlw	128
  1673  000E2C  5817               	subwfb	(??_nouveauxAliens+2)^0,w,c
  1674  000E2E  A0D8               	btfss	status,0,c
  1675  000E30  EF1C  F007         	goto	u1181
  1676  000E34  EF1E  F007         	goto	u1180
  1677  000E38                     u1181:
  1678  000E38  EFBE  F006         	goto	l2462
  1679  000E3C                     u1180:
  1680  000E3C  0012               	return		;funcret
  1681  000E3E                     __end_of_nouveauxAliens:
  1682                           	opt callstack 0
  1683                           
  1684 ;; *************** function _strcpy *****************
  1685 ;; Defined at:
  1686 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  to              2    0[COMRAM] PTR unsigned char 
  1689 ;;		 -> m_aliens(84), 
  1690 ;;  from            2    2[COMRAM] PTR const unsigned char 
  1691 ;;		 -> m_aliens(84), 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  cp              2    4[COMRAM] PTR unsigned char 
  1694 ;;		 -> m_aliens(84), 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  2    0[COMRAM] PTR unsigned char 
  1697 ;; Registers used:
  1698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1704 ;;      Params:         4       0       0       0       0       0       0
  1705 ;;      Locals:         2       0       0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0
  1707 ;;      Totals:         6       0       0       0       0       0       0
  1708 ;;Total ram usage:        6 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    1
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_nouveauxAliens
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text6
  1719  001712                     __ptext6:
  1720                           	opt callstack 0
  1721  001712                     _strcpy:
  1722                           	opt callstack 28
  1723  001712  C001  F005         	movff	strcpy@to,strcpy@cp
  1724  001716  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
  1725  00171A  EF93  F00B         	goto	l2128
  1726  00171E                     l2126:
  1727  00171E  4A05               	infsnz	strcpy@cp^0,f,c
  1728  001720  2A06               	incf	(strcpy@cp+1)^0,f,c
  1729  001722  4A03               	infsnz	strcpy@from^0,f,c
  1730  001724  2A04               	incf	(strcpy@from+1)^0,f,c
  1731  001726                     l2128:
  1732  001726  C003  FFD9         	movff	strcpy@from,fsr2l
  1733  00172A  C004  FFDA         	movff	strcpy@from+1,fsr2h
  1734  00172E  C005  FFE1         	movff	strcpy@cp,fsr1l
  1735  001732  C006  FFE2         	movff	strcpy@cp+1,fsr1h
  1736  001736  CFDF FFE7          	movff	indf2,indf1
  1737  00173A  50E7               	movf	indf1,w,c
  1738  00173C  A4D8               	btfss	status,2,c
  1739  00173E  EFA3  F00B         	goto	u881
  1740  001742  EFA5  F00B         	goto	u880
  1741  001746                     u881:
  1742  001746  EF8F  F00B         	goto	l2126
  1743  00174A                     u880:
  1744  00174A  0012               	return		;funcret
  1745  00174C                     __end_of_strcpy:
  1746                           	opt callstack 0
  1747                           
  1748 ;; *************** function _rand *****************
  1749 ;; Defined at:
  1750 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  2   12[COMRAM] int 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2, status,0, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1764 ;;      Params:         2       0       0       0       0       0       0
  1765 ;;      Locals:         0       0       0       0       0       0       0
  1766 ;;      Temps:          0       0       0       0       0       0       0
  1767 ;;      Totals:         2       0       0       0       0       0       0
  1768 ;;Total ram usage:        2 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    2
  1771 ;; This function calls:
  1772 ;;		___lmul
  1773 ;; This function is called by:
  1774 ;;		_nouveauxAliens
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text7
  1779  0015EC                     __ptext7:
  1780                           	opt callstack 0
  1781  0015EC                     _rand:
  1782                           	opt callstack 27
  1783  0015EC  C04A  F001         	movff	_randx,___lmul@multiplier
  1784  0015F0  C04B  F002         	movff	_randx+1,___lmul@multiplier+1
  1785  0015F4  C04C  F003         	movff	_randx+2,___lmul@multiplier+2
  1786  0015F8  C04D  F004         	movff	_randx+3,___lmul@multiplier+3
  1787  0015FC  0E6D               	movlw	109
  1788  0015FE  6E05               	movwf	___lmul@multiplicand^0,c
  1789  001600  0E4E               	movlw	78
  1790  001602  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1791  001604  0EC6               	movlw	198
  1792  001606  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1793  001608  0E41               	movlw	65
  1794  00160A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1795  00160C  EC19  F009         	call	___lmul	;wreg free
  1796  001610  C001  F04A         	movff	?___lmul,_randx
  1797  001614  C002  F04B         	movff	?___lmul+1,_randx+1
  1798  001618  C003  F04C         	movff	?___lmul+2,_randx+2
  1799  00161C  C004  F04D         	movff	?___lmul+3,_randx+3
  1800  001620  0E39               	movlw	57
  1801  001622  264A               	addwf	_randx^0,f,c
  1802  001624  0E30               	movlw	48
  1803  001626  224B               	addwfc	(_randx+1)^0,f,c
  1804  001628  0E00               	movlw	0
  1805  00162A  224C               	addwfc	(_randx+2)^0,f,c
  1806  00162C  0E00               	movlw	0
  1807  00162E  224D               	addwfc	(_randx+3)^0,f,c
  1808  001630  0EFF               	movlw	255
  1809  001632  144C               	andwf	(_randx+2)^0,w,c
  1810  001634  6E0D               	movwf	?_rand^0,c
  1811  001636  0E7F               	movlw	127
  1812  001638  144D               	andwf	(_randx+3)^0,w,c
  1813  00163A  6E0E               	movwf	(?_rand+1)^0,c
  1814  00163C  0012               	return		;funcret
  1815  00163E                     __end_of_rand:
  1816                           	opt callstack 0
  1817                           
  1818 ;; *************** function ___lmul *****************
  1819 ;; Defined at:
  1820 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  multiplier      4    0[COMRAM] unsigned long 
  1823 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;  product         4    8[COMRAM] unsigned long 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  4    0[COMRAM] unsigned long 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1835 ;;      Params:         8       0       0       0       0       0       0
  1836 ;;      Locals:         4       0       0       0       0       0       0
  1837 ;;      Temps:          0       0       0       0       0       0       0
  1838 ;;      Totals:        12       0       0       0       0       0       0
  1839 ;;Total ram usage:       12 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:    1
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		_rand
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text8
  1850  001232                     __ptext8:
  1851                           	opt callstack 0
  1852  001232                     ___lmul:
  1853                           	opt callstack 27
  1854  001232  0E00               	movlw	0
  1855  001234  6E09               	movwf	___lmul@product^0,c
  1856  001236  0E00               	movlw	0
  1857  001238  6E0A               	movwf	(___lmul@product+1)^0,c
  1858  00123A  0E00               	movlw	0
  1859  00123C  6E0B               	movwf	(___lmul@product+2)^0,c
  1860  00123E  0E00               	movlw	0
  1861  001240  6E0C               	movwf	(___lmul@product+3)^0,c
  1862  001242                     l2056:
  1863  001242  A001               	btfss	___lmul@multiplier^0,0,c
  1864  001244  EF26  F009         	goto	u791
  1865  001248  EF28  F009         	goto	u790
  1866  00124C                     u791:
  1867  00124C  EF30  F009         	goto	l2060
  1868  001250                     u790:
  1869  001250  5005               	movf	___lmul@multiplicand^0,w,c
  1870  001252  2609               	addwf	___lmul@product^0,f,c
  1871  001254  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  1872  001256  220A               	addwfc	(___lmul@product+1)^0,f,c
  1873  001258  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  1874  00125A  220B               	addwfc	(___lmul@product+2)^0,f,c
  1875  00125C  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  1876  00125E  220C               	addwfc	(___lmul@product+3)^0,f,c
  1877  001260                     l2060:
  1878  001260  90D8               	bcf	status,0,c
  1879  001262  3605               	rlcf	___lmul@multiplicand^0,f,c
  1880  001264  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1881  001266  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1882  001268  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1883  00126A  90D8               	bcf	status,0,c
  1884  00126C  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  1885  00126E  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  1886  001270  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  1887  001272  3201               	rrcf	___lmul@multiplier^0,f,c
  1888  001274  5001               	movf	___lmul@multiplier^0,w,c
  1889  001276  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  1890  001278  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  1891  00127A  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  1892  00127C  A4D8               	btfss	status,2,c
  1893  00127E  EF43  F009         	goto	u801
  1894  001282  EF45  F009         	goto	u800
  1895  001286                     u801:
  1896  001286  EF21  F009         	goto	l2056
  1897  00128A                     u800:
  1898  00128A  C009  F001         	movff	___lmul@product,?___lmul
  1899  00128E  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1900  001292  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1901  001296  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1902  00129A  0012               	return		;funcret
  1903  00129C                     __end_of___lmul:
  1904                           	opt callstack 0
  1905                           
  1906 ;; *************** function ___awmod *****************
  1907 ;; Defined at:
  1908 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  dividend        2   14[COMRAM] int 
  1911 ;;  divisor         2   16[COMRAM] int 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  sign            1   19[COMRAM] unsigned char 
  1914 ;;  counter         1   18[COMRAM] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  2   14[COMRAM] int 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1924 ;;      Params:         4       0       0       0       0       0       0
  1925 ;;      Locals:         2       0       0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0
  1927 ;;      Totals:         6       0       0       0       0       0       0
  1928 ;;Total ram usage:        6 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    1
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_nouveauxAliens
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text9
  1939  00100E                     __ptext9:
  1940                           	opt callstack 0
  1941  00100E                     ___awmod:
  1942                           	opt callstack 28
  1943  00100E  0E00               	movlw	0
  1944  001010  6E14               	movwf	___awmod@sign^0,c
  1945  001012  BE10               	btfsc	(___awmod@dividend+1)^0,7,c
  1946  001014  EF10  F008         	goto	u1080
  1947  001018  EF0E  F008         	goto	u1081
  1948  00101C                     u1081:
  1949  00101C  EF16  F008         	goto	l2324
  1950  001020                     u1080:
  1951  001020  6C0F               	negf	___awmod@dividend^0,c
  1952  001022  1E10               	comf	(___awmod@dividend+1)^0,f,c
  1953  001024  B0D8               	btfsc	status,0,c
  1954  001026  2A10               	incf	(___awmod@dividend+1)^0,f,c
  1955  001028  0E01               	movlw	1
  1956  00102A  6E14               	movwf	___awmod@sign^0,c
  1957  00102C                     l2324:
  1958  00102C  BE12               	btfsc	(___awmod@divisor+1)^0,7,c
  1959  00102E  EF1D  F008         	goto	u1090
  1960  001032  EF1B  F008         	goto	u1091
  1961  001036                     u1091:
  1962  001036  EF21  F008         	goto	l2328
  1963  00103A                     u1090:
  1964  00103A  6C11               	negf	___awmod@divisor^0,c
  1965  00103C  1E12               	comf	(___awmod@divisor+1)^0,f,c
  1966  00103E  B0D8               	btfsc	status,0,c
  1967  001040  2A12               	incf	(___awmod@divisor+1)^0,f,c
  1968  001042                     l2328:
  1969  001042  5011               	movf	___awmod@divisor^0,w,c
  1970  001044  1012               	iorwf	(___awmod@divisor+1)^0,w,c
  1971  001046  B4D8               	btfsc	status,2,c
  1972  001048  EF28  F008         	goto	u1101
  1973  00104C  EF2A  F008         	goto	u1100
  1974  001050                     u1101:
  1975  001050  EF4E  F008         	goto	l2344
  1976  001054                     u1100:
  1977  001054  0E01               	movlw	1
  1978  001056  6E13               	movwf	___awmod@counter^0,c
  1979  001058  EF32  F008         	goto	l2334
  1980  00105C                     l2332:
  1981  00105C  90D8               	bcf	status,0,c
  1982  00105E  3611               	rlcf	___awmod@divisor^0,f,c
  1983  001060  3612               	rlcf	(___awmod@divisor+1)^0,f,c
  1984  001062  2A13               	incf	___awmod@counter^0,f,c
  1985  001064                     l2334:
  1986  001064  AE12               	btfss	(___awmod@divisor+1)^0,7,c
  1987  001066  EF37  F008         	goto	u1111
  1988  00106A  EF39  F008         	goto	u1110
  1989  00106E                     u1111:
  1990  00106E  EF2E  F008         	goto	l2332
  1991  001072                     u1110:
  1992  001072                     l2336:
  1993  001072  5011               	movf	___awmod@divisor^0,w,c
  1994  001074  5C0F               	subwf	___awmod@dividend^0,w,c
  1995  001076  5012               	movf	(___awmod@divisor+1)^0,w,c
  1996  001078  5810               	subwfb	(___awmod@dividend+1)^0,w,c
  1997  00107A  A0D8               	btfss	status,0,c
  1998  00107C  EF42  F008         	goto	u1121
  1999  001080  EF44  F008         	goto	u1120
  2000  001084                     u1121:
  2001  001084  EF48  F008         	goto	l2340
  2002  001088                     u1120:
  2003  001088  5011               	movf	___awmod@divisor^0,w,c
  2004  00108A  5E0F               	subwf	___awmod@dividend^0,f,c
  2005  00108C  5012               	movf	(___awmod@divisor+1)^0,w,c
  2006  00108E  5A10               	subwfb	(___awmod@dividend+1)^0,f,c
  2007  001090                     l2340:
  2008  001090  90D8               	bcf	status,0,c
  2009  001092  3212               	rrcf	(___awmod@divisor+1)^0,f,c
  2010  001094  3211               	rrcf	___awmod@divisor^0,f,c
  2011  001096  2E13               	decfsz	___awmod@counter^0,f,c
  2012  001098  EF39  F008         	goto	l2336
  2013  00109C                     l2344:
  2014  00109C  5014               	movf	___awmod@sign^0,w,c
  2015  00109E  B4D8               	btfsc	status,2,c
  2016  0010A0  EF54  F008         	goto	u1131
  2017  0010A4  EF56  F008         	goto	u1130
  2018  0010A8                     u1131:
  2019  0010A8  EF5A  F008         	goto	l2348
  2020  0010AC                     u1130:
  2021  0010AC  6C0F               	negf	___awmod@dividend^0,c
  2022  0010AE  1E10               	comf	(___awmod@dividend+1)^0,f,c
  2023  0010B0  B0D8               	btfsc	status,0,c
  2024  0010B2  2A10               	incf	(___awmod@dividend+1)^0,f,c
  2025  0010B4                     l2348:
  2026  0010B4  C00F  F00F         	movff	___awmod@dividend,?___awmod
  2027  0010B8  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  2028  0010BC  0012               	return		;funcret
  2029  0010BE                     __end_of___awmod:
  2030                           	opt callstack 0
  2031                           
  2032 ;; *************** function _lcd_init *****************
  2033 ;; Defined at:
  2034 ;;		line 258 in file "Lcd4Lignes.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2048 ;;      Params:         0       0       0       0       0       0       0
  2049 ;;      Locals:         0       0       0       0       0       0       0
  2050 ;;      Temps:          0       0       0       0       0       0       0
  2051 ;;      Totals:         0       0       0       0       0       0       0
  2052 ;;Total ram usage:        0 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    6
  2055 ;; This function calls:
  2056 ;;		_lcd_initCGRam
  2057 ;;		_lcd_resetSequence
  2058 ;;		_lcd_wrCom
  2059 ;; This function is called by:
  2060 ;;		_main
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text10
  2065  00181E                     __ptext10:
  2066                           	opt callstack 0
  2067  00181E                     _lcd_init:
  2068                           	opt callstack 24
  2069  00181E                     
  2070                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  2071  00181E  EC81  F009         	call	_lcd_resetSequence	;wreg free
  2072                           
  2073                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  2074  001822  0E28               	movlw	40
  2075  001824  ECE5  F009         	call	_lcd_wrCom
  2076                           
  2077                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  2078  001828  0E0F               	movlw	15
  2079  00182A  ECE5  F009         	call	_lcd_wrCom
  2080                           
  2081                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  2082  00182E  0E01               	movlw	1
  2083  001830  ECE5  F009         	call	_lcd_wrCom
  2084                           
  2085                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  2086  001834  0E06               	movlw	6
  2087  001836  ECE5  F009         	call	_lcd_wrCom
  2088                           
  2089                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  2090  00183A  0E80               	movlw	128
  2091  00183C  ECE5  F009         	call	_lcd_wrCom
  2092  001840                     
  2093                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  2094  001840  EC45  F00A         	call	_lcd_initCGRam	;wreg free
  2095  001844  0012               	return		;funcret
  2096  001846                     __end_of_lcd_init:
  2097                           	opt callstack 0
  2098                           
  2099 ;; *************** function _lcd_resetSequence *****************
  2100 ;; Defined at:
  2101 ;;		line 221 in file "Lcd4Lignes.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, status,0, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2115 ;;      Params:         0       0       0       0       0       0       0
  2116 ;;      Locals:         0       0       0       0       0       0       0
  2117 ;;      Temps:          1       0       0       0       0       0       0
  2118 ;;      Totals:         1       0       0       0       0       0       0
  2119 ;;Total ram usage:        1 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    2
  2122 ;; This function calls:
  2123 ;;		_lcd_ecrireDonnees
  2124 ;;		_lcd_strobeEnableBit
  2125 ;; This function is called by:
  2126 ;;		_lcd_init
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text11
  2131  001302                     __ptext11:
  2132                           	opt callstack 0
  2133  001302                     _lcd_resetSequence:
  2134                           	opt callstack 27
  2135  001302                     
  2136                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  2137  001302  0E00               	movlw	0
  2138  001304  6E95               	movwf	149,c	;volatile
  2139  001306                     
  2140                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  2141  001306  0E0D               	movlw	13
  2142  001308  6E03               	movwf	??_lcd_resetSequence^0,c
  2143  00130A  0EFC               	movlw	252
  2144  00130C                     u1457:
  2145  00130C  2EE8               	decfsz	wreg,f,c
  2146  00130E  D7FE               	bra	u1457
  2147  001310  2E03               	decfsz	??_lcd_resetSequence^0,f,c
  2148  001312  D7FC               	bra	u1457
  2149  001314                     
  2150                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  2151  001314  9080               	bcf	128,0,c	;volatile
  2152  001316                     
  2153                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  2154  001316  9280               	bcf	128,1,c	;volatile
  2155  001318                     
  2156                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  2157  001318  0E03               	movlw	3
  2158  00131A  EC65  F00C         	call	_lcd_ecrireDonnees
  2159  00131E                     
  2160                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  2161  00131E  EC85  F00C         	call	_lcd_strobeEnableBit	;wreg free
  2162  001322                     
  2163                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2164  001322  0E03               	movlw	3
  2165  001324                     u1467:
  2166  001324  2EE8               	decfsz	wreg,f,c
  2167  001326  D7FE               	bra	u1467
  2168  001328  F000               	nop	
  2169  00132A                     
  2170                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  2171  00132A  0E03               	movlw	3
  2172  00132C  EC65  F00C         	call	_lcd_ecrireDonnees
  2173  001330                     
  2174                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  2175  001330  EC85  F00C         	call	_lcd_strobeEnableBit	;wreg free
  2176  001334                     
  2177                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2178  001334  0E03               	movlw	3
  2179  001336                     u1477:
  2180  001336  2EE8               	decfsz	wreg,f,c
  2181  001338  D7FE               	bra	u1477
  2182  00133A  F000               	nop	
  2183  00133C                     
  2184                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  2185  00133C  0E03               	movlw	3
  2186  00133E  EC65  F00C         	call	_lcd_ecrireDonnees
  2187  001342                     
  2188                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  2189  001342  EC85  F00C         	call	_lcd_strobeEnableBit	;wreg free
  2190  001346                     
  2191                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2192  001346  0E03               	movlw	3
  2193  001348                     u1487:
  2194  001348  2EE8               	decfsz	wreg,f,c
  2195  00134A  D7FE               	bra	u1487
  2196  00134C  F000               	nop	
  2197  00134E                     
  2198                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  2199  00134E  0E02               	movlw	2
  2200  001350  EC65  F00C         	call	_lcd_ecrireDonnees
  2201  001354                     
  2202                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  2203  001354  EC85  F00C         	call	_lcd_strobeEnableBit	;wreg free
  2204  001358                     
  2205                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2206  001358  0E03               	movlw	3
  2207  00135A                     u1497:
  2208  00135A  2EE8               	decfsz	wreg,f,c
  2209  00135C  D7FE               	bra	u1497
  2210  00135E  F000               	nop	
  2211  001360                     
  2212                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  2213  001360  0E0F               	movlw	15
  2214  001362  6E95               	movwf	149,c	;volatile
  2215  001364  0012               	return		;funcret
  2216  001366                     __end_of_lcd_resetSequence:
  2217                           	opt callstack 0
  2218                           
  2219 ;; *************** function _lcd_initCGRam *****************
  2220 ;; Defined at:
  2221 ;;		line 417 in file "Lcd4Lignes.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  j               1    6[COMRAM] unsigned char 
  2226 ;;  i               1    5[COMRAM] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2236 ;;      Params:         0       0       0       0       0       0       0
  2237 ;;      Locals:         2       0       0       0       0       0       0
  2238 ;;      Temps:          2       0       0       0       0       0       0
  2239 ;;      Totals:         4       0       0       0       0       0       0
  2240 ;;Total ram usage:        4 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    5
  2243 ;; This function calls:
  2244 ;;		_lcd_curseurHome
  2245 ;;		_lcd_wrCom
  2246 ;;		_lcd_wrData
  2247 ;; This function is called by:
  2248 ;;		_lcd_init
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text12
  2253  00148A                     __ptext12:
  2254                           	opt callstack 0
  2255  00148A                     _lcd_initCGRam:
  2256                           	opt callstack 24
  2257  00148A                     
  2258                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  2259  00148A  0E40               	movlw	64
  2260  00148C  ECE5  F009         	call	_lcd_wrCom
  2261  001490                     
  2262                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  2263  001490  0E00               	movlw	0
  2264  001492  6E06               	movwf	lcd_initCGRam@i^0,c
  2265  001494                     l2298:
  2266                           
  2267                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  2268  001494  0E00               	movlw	0
  2269  001496  6E07               	movwf	lcd_initCGRam@j^0,c
  2270  001498                     l2304:
  2271                           
  2272                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2273  001498  5006               	movf	lcd_initCGRam@i^0,w,c
  2274  00149A  0D08               	mullw	8
  2275  00149C  0E00               	movlw	low _matCGRAM
  2276  00149E  6E04               	movwf	??_lcd_initCGRam^0,c
  2277  0014A0  0E01               	movlw	high _matCGRAM
  2278  0014A2  6E05               	movwf	(??_lcd_initCGRam+1)^0,c
  2279  0014A4  50F3               	movf	243,w,c
  2280  0014A6  2604               	addwf	??_lcd_initCGRam^0,f,c
  2281  0014A8  50F4               	movf	244,w,c
  2282  0014AA  2205               	addwfc	(??_lcd_initCGRam+1)^0,f,c
  2283  0014AC  5007               	movf	lcd_initCGRam@j^0,w,c
  2284  0014AE  2404               	addwf	??_lcd_initCGRam^0,w,c
  2285  0014B0  6ED9               	movwf	fsr2l,c
  2286  0014B2  0E00               	movlw	0
  2287  0014B4  2005               	addwfc	(??_lcd_initCGRam+1)^0,w,c
  2288  0014B6  6EDA               	movwf	fsr2h,c
  2289  0014B8  50DF               	movf	indf2,w,c
  2290  0014BA  ECF8  F00B         	call	_lcd_wrData
  2291  0014BE  2A07               	incf	lcd_initCGRam@j^0,f,c
  2292  0014C0  0E07               	movlw	7
  2293  0014C2  6407               	cpfsgt	lcd_initCGRam@j^0,c
  2294  0014C4  EF66  F00A         	goto	u1061
  2295  0014C8  EF68  F00A         	goto	u1060
  2296  0014CC                     u1061:
  2297  0014CC  EF4C  F00A         	goto	l2304
  2298  0014D0                     u1060:
  2299  0014D0  2A06               	incf	lcd_initCGRam@i^0,f,c
  2300  0014D2  0E07               	movlw	7
  2301  0014D4  6406               	cpfsgt	lcd_initCGRam@i^0,c
  2302  0014D6  EF6F  F00A         	goto	u1071
  2303  0014DA  EF71  F00A         	goto	u1070
  2304  0014DE                     u1071:
  2305  0014DE  EF4A  F00A         	goto	l2298
  2306  0014E2                     u1070:
  2307  0014E2                     
  2308                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2309  0014E2  EC7D  F00C         	call	_lcd_curseurHome	;wreg free
  2310  0014E6  0012               	return		;funcret
  2311  0014E8                     __end_of_lcd_initCGRam:
  2312                           	opt callstack 0
  2313                           
  2314 ;; *************** function _lcd_curseurHome *****************
  2315 ;; Defined at:
  2316 ;;		line 288 in file "Lcd4Lignes.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, status,0, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2330 ;;      Params:         0       0       0       0       0       0       0
  2331 ;;      Locals:         0       0       0       0       0       0       0
  2332 ;;      Temps:          0       0       0       0       0       0       0
  2333 ;;      Totals:         0       0       0       0       0       0       0
  2334 ;;Total ram usage:        0 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    4
  2337 ;; This function calls:
  2338 ;;		_lcd_wrCom
  2339 ;; This function is called by:
  2340 ;;		_lcd_initCGRam
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text13
  2345  0018FA                     __ptext13:
  2346                           	opt callstack 0
  2347  0018FA                     _lcd_curseurHome:
  2348                           	opt callstack 24
  2349  0018FA                     
  2350                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2351  0018FA  0E02               	movlw	2
  2352  0018FC  ECE5  F009         	call	_lcd_wrCom
  2353  001900  0012               	return		;funcret
  2354  001902                     __end_of_lcd_curseurHome:
  2355                           	opt callstack 0
  2356                           
  2357 ;; *************** function _lcd_cacheCurseur *****************
  2358 ;; Defined at:
  2359 ;;		line 401 in file "Lcd4Lignes.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;		None
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2373 ;;      Params:         0       0       0       0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0
  2376 ;;      Totals:         0       0       0       0       0       0       0
  2377 ;;Total ram usage:        0 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    4
  2380 ;; This function calls:
  2381 ;;		_lcd_wrCom
  2382 ;; This function is called by:
  2383 ;;		_main
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text14
  2388  001902                     __ptext14:
  2389                           	opt callstack 0
  2390  001902                     _lcd_cacheCurseur:
  2391                           	opt callstack 26
  2392  001902                     
  2393                           ;Lcd4Lignes.c: 403: lcd_wrCom(0x0C);
  2394  001902  0E0C               	movlw	12
  2395  001904  ECE5  F009         	call	_lcd_wrCom
  2396  001908  0012               	return		;funcret
  2397  00190A                     __end_of_lcd_cacheCurseur:
  2398                           	opt callstack 0
  2399                           
  2400 ;; *************** function _initialisation *****************
  2401 ;; Defined at:
  2402 ;;		line 388 in file "main.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2416 ;;      Params:         0       0       0       0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0
  2419 ;;      Totals:         0       0       0       0       0       0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    2
  2423 ;; This function calls:
  2424 ;;		_srand
  2425 ;; This function is called by:
  2426 ;;		_main
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text15
  2431  001598                     __ptext15:
  2432                           	opt callstack 0
  2433  001598                     _initialisation:
  2434                           	opt callstack 28
  2435  001598                     
  2436                           ;main.c: 390: TRISD = 0;
  2437  001598  0E00               	movlw	0
  2438  00159A  6E95               	movwf	149,c	;volatile
  2439                           
  2440                           ;main.c: 392: ANSELH = 0;
  2441  00159C  0E00               	movlw	0
  2442  00159E  6E7F               	movwf	127,c	;volatile
  2443  0015A0                     
  2444                           ;main.c: 393: TRISB = 0xFF;
  2445  0015A0  6893               	setf	147,c	;volatile
  2446                           
  2447                           ;main.c: 395: ANSEL = 0;
  2448  0015A2  0E00               	movlw	0
  2449  0015A4  6E7E               	movwf	126,c	;volatile
  2450                           
  2451                           ;main.c: 396: TRISA = 0;
  2452  0015A6  0E00               	movlw	0
  2453  0015A8  6E92               	movwf	146,c	;volatile
  2454  0015AA                     
  2455                           ;main.c: 400: T1CONbits.TMR1ON = 1;
  2456  0015AA  80CD               	bsf	205,0,c	;volatile
  2457  0015AC                     
  2458                           ;main.c: 401: srand(TMR1);
  2459  0015AC  CFCE F001          	movff	4046,srand@x	;volatile
  2460  0015B0  CFCF F002          	movff	4047,srand@x+1	;volatile
  2461  0015B4  EC6F  F00C         	call	_srand	;wreg free
  2462  0015B8                     
  2463                           ;main.c: 404: ANSELbits.ANS7 = 1;
  2464  0015B8  8E7E               	bsf	126,7,c	;volatile
  2465  0015BA                     
  2466                           ;main.c: 406: ADCON0bits.ADON = 1;
  2467  0015BA  80C2               	bsf	194,0,c	;volatile
  2468  0015BC                     
  2469                           ;main.c: 407: ADCON1 = 0;
  2470  0015BC  0E00               	movlw	0
  2471  0015BE  6EC1               	movwf	193,c	;volatile
  2472  0015C0                     
  2473                           ;main.c: 409: ADCON2bits.ADFM = 0;
  2474  0015C0  9EC0               	bcf	192,7,c	;volatile
  2475  0015C2                     
  2476                           ;main.c: 410: ADCON2bits.ACQT = 0;
  2477  0015C2  0EC7               	movlw	-57
  2478  0015C4  16C0               	andwf	192,f,c	;volatile
  2479  0015C6                     
  2480                           ;main.c: 411: ADCON2bits.ADCS = 0;
  2481  0015C6  0EF8               	movlw	-8
  2482  0015C8  16C0               	andwf	192,f,c	;volatile
  2483  0015CA                     
  2484                           ;main.c: 415: T0CONbits.TMR0ON = 1;
  2485  0015CA  8ED5               	bsf	213,7,c	;volatile
  2486  0015CC                     
  2487                           ;main.c: 416: T0CONbits.T08BIT = 0;
  2488  0015CC  9CD5               	bcf	213,6,c	;volatile
  2489  0015CE                     
  2490                           ;main.c: 417: T0CONbits.T0CS = 0;
  2491  0015CE  9AD5               	bcf	213,5,c	;volatile
  2492  0015D0                     
  2493                           ;main.c: 418: T0CONbits.PSA = 0;
  2494  0015D0  96D5               	bcf	213,3,c	;volatile
  2495  0015D2                     
  2496                           ;main.c: 419: T0CONbits.T0PS = 0b010;
  2497  0015D2  50D5               	movf	213,w,c	;volatile
  2498  0015D4  0BF8               	andlw	-8
  2499  0015D6  0902               	iorlw	2
  2500  0015D8  6ED5               	movwf	213,c	;volatile
  2501  0015DA                     
  2502                           ;main.c: 420: TMR0 = 0x0000;
  2503  0015DA  0E00               	movlw	0
  2504  0015DC  6ED7               	movwf	215,c	;volatile
  2505  0015DE  0E00               	movlw	0
  2506  0015E0  6ED6               	movwf	214,c	;volatile
  2507  0015E2                     
  2508                           ;main.c: 421: INTCONbits.TMR0IE = 1;
  2509  0015E2  8AF2               	bsf	242,5,c	;volatile
  2510  0015E4                     
  2511                           ;main.c: 422: INTCONbits.TMR0IF = 0;
  2512  0015E4  94F2               	bcf	242,2,c	;volatile
  2513  0015E6                     
  2514                           ;main.c: 423: INTCONbits.PEIE = 1;
  2515  0015E6  8CF2               	bsf	242,6,c	;volatile
  2516  0015E8                     
  2517                           ;main.c: 424: INTCONbits.GIE = 1;
  2518  0015E8  8EF2               	bsf	242,7,c	;volatile
  2519  0015EA  0012               	return		;funcret
  2520  0015EC                     __end_of_initialisation:
  2521                           	opt callstack 0
  2522                           
  2523 ;; *************** function _srand *****************
  2524 ;; Defined at:
  2525 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  x               2    0[COMRAM] unsigned int 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;		None
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		status,2
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2539 ;;      Params:         2       0       0       0       0       0       0
  2540 ;;      Locals:         0       0       0       0       0       0       0
  2541 ;;      Temps:          0       0       0       0       0       0       0
  2542 ;;      Totals:         2       0       0       0       0       0       0
  2543 ;;Total ram usage:        2 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; Hardware stack levels required when called:    1
  2546 ;; This function calls:
  2547 ;;		Nothing
  2548 ;; This function is called by:
  2549 ;;		_initialisation
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text16
  2554  0018DE                     __ptext16:
  2555                           	opt callstack 0
  2556  0018DE                     _srand:
  2557                           	opt callstack 28
  2558  0018DE  C001  F04A         	movff	srand@x,_randx
  2559  0018E2  C002  F04B         	movff	srand@x+1,_randx+1
  2560  0018E6  6A4C               	clrf	(_randx+2)^0,c
  2561  0018E8  6A4D               	clrf	(_randx+3)^0,c
  2562  0018EA  0012               	return		;funcret
  2563  0018EC                     __end_of_srand:
  2564                           	opt callstack 0
  2565                           
  2566 ;; *************** function _init_serie *****************
  2567 ;; Defined at:
  2568 ;;		line 29 in file "serie.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2582 ;;      Params:         0       0       0       0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0
  2585 ;;      Totals:         0       0       0       0       0       0       0
  2586 ;;Total ram usage:        0 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    1
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_main
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text17
  2597  001894                     __ptext17:
  2598                           	opt callstack 0
  2599  001894                     _init_serie:
  2600                           	opt callstack 29
  2601  001894                     
  2602                           ;serie.c: 32: TRISCbits.TRISC7=1;
  2603  001894  8E94               	bsf	148,7,c	;volatile
  2604                           
  2605                           ;serie.c: 33: TRISCbits.TRISC6=1;
  2606  001896  8C94               	bsf	148,6,c	;volatile
  2607  001898                     
  2608                           ;serie.c: 37: SPBRGH=0x00;
  2609  001898  0E00               	movlw	0
  2610  00189A  6EB0               	movwf	176,c	;volatile
  2611                           
  2612                           ;serie.c: 38: SPBRG=25;
  2613  00189C  0E19               	movlw	25
  2614  00189E  6EAF               	movwf	175,c	;volatile
  2615  0018A0                     
  2616                           ;serie.c: 39: BAUDCONbits.BRG16=1;
  2617  0018A0  86B8               	bsf	184,3,c	;volatile
  2618  0018A2                     
  2619                           ;serie.c: 40: TXSTAbits.BRGH=1;
  2620  0018A2  84AC               	bsf	172,2,c	;volatile
  2621  0018A4                     
  2622                           ;serie.c: 43: TXSTAbits.SYNC=0;
  2623  0018A4  98AC               	bcf	172,4,c	;volatile
  2624  0018A6                     
  2625                           ;serie.c: 44: TXSTAbits.TXEN=1;
  2626  0018A6  8AAC               	bsf	172,5,c	;volatile
  2627  0018A8                     
  2628                           ;serie.c: 45: RCSTAbits.CREN = 1;
  2629  0018A8  88AB               	bsf	171,4,c	;volatile
  2630  0018AA                     
  2631                           ;serie.c: 46: RCSTAbits.SPEN=1;
  2632  0018AA  8EAB               	bsf	171,7,c	;volatile
  2633                           
  2634                           ;serie.c: 47: ANSEL = 0;
  2635  0018AC  0E00               	movlw	0
  2636  0018AE  6E7E               	movwf	126,c	;volatile
  2637  0018B0  0012               	return		;funcret
  2638  0018B2                     __end_of_init_serie:
  2639                           	opt callstack 0
  2640                           
  2641 ;; *************** function _feu *****************
  2642 ;; Defined at:
  2643 ;;		line 283 in file "main.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  x               1    wreg     unsigned char 
  2646 ;;  pts             2    6[COMRAM] PTR int 
  2647 ;;		 -> main@pointage(2), 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  x               1   13[COMRAM] unsigned char 
  2650 ;;  i               2   14[COMRAM] int 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2660 ;;      Params:         2       0       0       0       0       0       0
  2661 ;;      Locals:         3       0       0       0       0       0       0
  2662 ;;      Temps:          5       0       0       0       0       0       0
  2663 ;;      Totals:        10       0       0       0       0       0       0
  2664 ;;Total ram usage:       10 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    5
  2667 ;; This function calls:
  2668 ;;		___wmul
  2669 ;;		_lcd_ecritChar
  2670 ;;		_lcd_gotoXY
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text18
  2677  000938                     __ptext18:
  2678                           	opt callstack 0
  2679  000938                     _feu:
  2680                           	opt callstack 25
  2681                           
  2682                           ;incstack = 0
  2683                           ;feu@x stored from wreg
  2684  000938  6E0E               	movwf	feu@x^0,c
  2685  00093A                     
  2686                           ;main.c: 285: for(int i = 2 ; i>= 0 ; i--)
  2687  00093A  0E00               	movlw	0
  2688  00093C  6E10               	movwf	(feu@i+1)^0,c
  2689  00093E  0E02               	movlw	2
  2690  000940  6E0F               	movwf	feu@i^0,c
  2691  000942                     l2572:
  2692                           
  2693                           ;main.c: 286: {;main.c: 287: if(m_aliens[i][x-1] != ' ')
  2694  000942  C00F  F001         	movff	feu@i,___wmul@multiplier
  2695  000946  C010  F002         	movff	feu@i+1,___wmul@multiplier+1
  2696  00094A  0E00               	movlw	0
  2697  00094C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2698  00094E  0E15               	movlw	21
  2699  000950  6E03               	movwf	___wmul@multiplicand^0,c
  2700  000952  EC37  F00C         	call	___wmul	;wreg free
  2701  000956  0EFF               	movlw	255
  2702  000958  6E09               	movwf	??_feu^0,c
  2703  00095A  0EFF               	movlw	255
  2704  00095C  6E0A               	movwf	(??_feu+1)^0,c
  2705  00095E  0E60               	movlw	low _m_aliens
  2706  000960  6E0B               	movwf	(??_feu+2)^0,c
  2707  000962  0E00               	movlw	high _m_aliens
  2708  000964  6E0C               	movwf	(??_feu+3)^0,c
  2709  000966  5009               	movf	??_feu^0,w,c
  2710  000968  260B               	addwf	(??_feu+2)^0,f,c
  2711  00096A  500A               	movf	(??_feu+1)^0,w,c
  2712  00096C  220C               	addwfc	(??_feu+3)^0,f,c
  2713  00096E  5001               	movf	?___wmul^0,w,c
  2714  000970  260B               	addwf	(??_feu+2)^0,f,c
  2715  000972  5002               	movf	(?___wmul+1)^0,w,c
  2716  000974  220C               	addwfc	(??_feu+3)^0,f,c
  2717  000976  500E               	movf	feu@x^0,w,c
  2718  000978  240B               	addwf	(??_feu+2)^0,w,c
  2719  00097A  6ED9               	movwf	fsr2l,c
  2720  00097C  0E00               	movlw	0
  2721  00097E  200C               	addwfc	(??_feu+3)^0,w,c
  2722  000980  6EDA               	movwf	fsr2h,c
  2723  000982  0E20               	movlw	32
  2724  000984  18DE               	xorwf	postinc2,w,c
  2725  000986  B4D8               	btfsc	status,2,c
  2726  000988  EFC8  F004         	goto	u1311
  2727  00098C  EFCA  F004         	goto	u1310
  2728  000990                     u1311:
  2729  000990  EFAC  F005         	goto	l2592
  2730  000994                     u1310:
  2731  000994                     
  2732                           ;main.c: 288: {;main.c: 290: if(m_aliens[i][x-1] == 1)
  2733  000994  C00F  F001         	movff	feu@i,___wmul@multiplier
  2734  000998  C010  F002         	movff	feu@i+1,___wmul@multiplier+1
  2735  00099C  0E00               	movlw	0
  2736  00099E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2737  0009A0  0E15               	movlw	21
  2738  0009A2  6E03               	movwf	___wmul@multiplicand^0,c
  2739  0009A4  EC37  F00C         	call	___wmul	;wreg free
  2740  0009A8  0EFF               	movlw	255
  2741  0009AA  6E09               	movwf	??_feu^0,c
  2742  0009AC  0EFF               	movlw	255
  2743  0009AE  6E0A               	movwf	(??_feu+1)^0,c
  2744  0009B0  0E60               	movlw	low _m_aliens
  2745  0009B2  6E0B               	movwf	(??_feu+2)^0,c
  2746  0009B4  0E00               	movlw	high _m_aliens
  2747  0009B6  6E0C               	movwf	(??_feu+3)^0,c
  2748  0009B8  5009               	movf	??_feu^0,w,c
  2749  0009BA  260B               	addwf	(??_feu+2)^0,f,c
  2750  0009BC  500A               	movf	(??_feu+1)^0,w,c
  2751  0009BE  220C               	addwfc	(??_feu+3)^0,f,c
  2752  0009C0  5001               	movf	?___wmul^0,w,c
  2753  0009C2  260B               	addwf	(??_feu+2)^0,f,c
  2754  0009C4  5002               	movf	(?___wmul+1)^0,w,c
  2755  0009C6  220C               	addwfc	(??_feu+3)^0,f,c
  2756  0009C8  500E               	movf	feu@x^0,w,c
  2757  0009CA  240B               	addwf	(??_feu+2)^0,w,c
  2758  0009CC  6ED9               	movwf	fsr2l,c
  2759  0009CE  0E00               	movlw	0
  2760  0009D0  200C               	addwfc	(??_feu+3)^0,w,c
  2761  0009D2  6EDA               	movwf	fsr2h,c
  2762  0009D4  04DE               	decf	postinc2,w,c
  2763  0009D6  A4D8               	btfss	status,2,c
  2764  0009D8  EFF0  F004         	goto	u1321
  2765  0009DC  EFF2  F004         	goto	u1320
  2766  0009E0                     u1321:
  2767  0009E0  EF06  F005         	goto	l2578
  2768  0009E4                     u1320:
  2769  0009E4                     
  2770                           ;main.c: 291: {;main.c: 292: *pts = *pts + 1;
  2771  0009E4  C007  FFD9         	movff	feu@pts,fsr2l
  2772  0009E8  C008  FFDA         	movff	feu@pts+1,fsr2h
  2773  0009EC  CFDE F009          	movff	postinc2,??_feu
  2774  0009F0  CFDD F00A          	movff	postdec2,??_feu+1
  2775  0009F4  0E01               	movlw	1
  2776  0009F6  2609               	addwf	??_feu^0,f,c
  2777  0009F8  0E00               	movlw	0
  2778  0009FA  220A               	addwfc	(??_feu+1)^0,f,c
  2779  0009FC  C007  FFD9         	movff	feu@pts,fsr2l
  2780  000A00  C008  FFDA         	movff	feu@pts+1,fsr2h
  2781  000A04  C009  FFDE         	movff	??_feu,postinc2
  2782  000A08  C00A  FFDD         	movff	??_feu+1,postdec2
  2783  000A0C                     l2578:
  2784                           
  2785                           ;main.c: 293: };main.c: 294: if(m_aliens[i][x-1] == 2)
  2786  000A0C  C00F  F001         	movff	feu@i,___wmul@multiplier
  2787  000A10  C010  F002         	movff	feu@i+1,___wmul@multiplier+1
  2788  000A14  0E00               	movlw	0
  2789  000A16  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2790  000A18  0E15               	movlw	21
  2791  000A1A  6E03               	movwf	___wmul@multiplicand^0,c
  2792  000A1C  EC37  F00C         	call	___wmul	;wreg free
  2793  000A20  0EFF               	movlw	255
  2794  000A22  6E09               	movwf	??_feu^0,c
  2795  000A24  0EFF               	movlw	255
  2796  000A26  6E0A               	movwf	(??_feu+1)^0,c
  2797  000A28  0E60               	movlw	low _m_aliens
  2798  000A2A  6E0B               	movwf	(??_feu+2)^0,c
  2799  000A2C  0E00               	movlw	high _m_aliens
  2800  000A2E  6E0C               	movwf	(??_feu+3)^0,c
  2801  000A30  5009               	movf	??_feu^0,w,c
  2802  000A32  260B               	addwf	(??_feu+2)^0,f,c
  2803  000A34  500A               	movf	(??_feu+1)^0,w,c
  2804  000A36  220C               	addwfc	(??_feu+3)^0,f,c
  2805  000A38  5001               	movf	?___wmul^0,w,c
  2806  000A3A  260B               	addwf	(??_feu+2)^0,f,c
  2807  000A3C  5002               	movf	(?___wmul+1)^0,w,c
  2808  000A3E  220C               	addwfc	(??_feu+3)^0,f,c
  2809  000A40  500E               	movf	feu@x^0,w,c
  2810  000A42  240B               	addwf	(??_feu+2)^0,w,c
  2811  000A44  6ED9               	movwf	fsr2l,c
  2812  000A46  0E00               	movlw	0
  2813  000A48  200C               	addwfc	(??_feu+3)^0,w,c
  2814  000A4A  6EDA               	movwf	fsr2h,c
  2815  000A4C  0E02               	movlw	2
  2816  000A4E  18DE               	xorwf	postinc2,w,c
  2817  000A50  A4D8               	btfss	status,2,c
  2818  000A52  EF2D  F005         	goto	u1331
  2819  000A56  EF2F  F005         	goto	u1330
  2820  000A5A                     u1331:
  2821  000A5A  EF43  F005         	goto	l2582
  2822  000A5E                     u1330:
  2823  000A5E                     
  2824                           ;main.c: 295: {;main.c: 296: *pts = *pts + 2;
  2825  000A5E  C007  FFD9         	movff	feu@pts,fsr2l
  2826  000A62  C008  FFDA         	movff	feu@pts+1,fsr2h
  2827  000A66  CFDE F009          	movff	postinc2,??_feu
  2828  000A6A  CFDD F00A          	movff	postdec2,??_feu+1
  2829  000A6E  0E02               	movlw	2
  2830  000A70  2609               	addwf	??_feu^0,f,c
  2831  000A72  0E00               	movlw	0
  2832  000A74  220A               	addwfc	(??_feu+1)^0,f,c
  2833  000A76  C007  FFD9         	movff	feu@pts,fsr2l
  2834  000A7A  C008  FFDA         	movff	feu@pts+1,fsr2h
  2835  000A7E  C009  FFDE         	movff	??_feu,postinc2
  2836  000A82  C00A  FFDD         	movff	??_feu+1,postdec2
  2837  000A86                     l2582:
  2838                           
  2839                           ;main.c: 297: };main.c: 298: if(m_aliens[i][x-1] == 3)
  2840  000A86  C00F  F001         	movff	feu@i,___wmul@multiplier
  2841  000A8A  C010  F002         	movff	feu@i+1,___wmul@multiplier+1
  2842  000A8E  0E00               	movlw	0
  2843  000A90  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2844  000A92  0E15               	movlw	21
  2845  000A94  6E03               	movwf	___wmul@multiplicand^0,c
  2846  000A96  EC37  F00C         	call	___wmul	;wreg free
  2847  000A9A  0EFF               	movlw	255
  2848  000A9C  6E09               	movwf	??_feu^0,c
  2849  000A9E  0EFF               	movlw	255
  2850  000AA0  6E0A               	movwf	(??_feu+1)^0,c
  2851  000AA2  0E60               	movlw	low _m_aliens
  2852  000AA4  6E0B               	movwf	(??_feu+2)^0,c
  2853  000AA6  0E00               	movlw	high _m_aliens
  2854  000AA8  6E0C               	movwf	(??_feu+3)^0,c
  2855  000AAA  5009               	movf	??_feu^0,w,c
  2856  000AAC  260B               	addwf	(??_feu+2)^0,f,c
  2857  000AAE  500A               	movf	(??_feu+1)^0,w,c
  2858  000AB0  220C               	addwfc	(??_feu+3)^0,f,c
  2859  000AB2  5001               	movf	?___wmul^0,w,c
  2860  000AB4  260B               	addwf	(??_feu+2)^0,f,c
  2861  000AB6  5002               	movf	(?___wmul+1)^0,w,c
  2862  000AB8  220C               	addwfc	(??_feu+3)^0,f,c
  2863  000ABA  500E               	movf	feu@x^0,w,c
  2864  000ABC  240B               	addwf	(??_feu+2)^0,w,c
  2865  000ABE  6ED9               	movwf	fsr2l,c
  2866  000AC0  0E00               	movlw	0
  2867  000AC2  200C               	addwfc	(??_feu+3)^0,w,c
  2868  000AC4  6EDA               	movwf	fsr2h,c
  2869  000AC6  0E03               	movlw	3
  2870  000AC8  18DE               	xorwf	postinc2,w,c
  2871  000ACA  A4D8               	btfss	status,2,c
  2872  000ACC  EF6A  F005         	goto	u1341
  2873  000AD0  EF6C  F005         	goto	u1340
  2874  000AD4                     u1341:
  2875  000AD4  EF80  F005         	goto	l2586
  2876  000AD8                     u1340:
  2877  000AD8                     
  2878                           ;main.c: 299: {;main.c: 300: *pts = *pts + 3;
  2879  000AD8  C007  FFD9         	movff	feu@pts,fsr2l
  2880  000ADC  C008  FFDA         	movff	feu@pts+1,fsr2h
  2881  000AE0  CFDE F009          	movff	postinc2,??_feu
  2882  000AE4  CFDD F00A          	movff	postdec2,??_feu+1
  2883  000AE8  0E03               	movlw	3
  2884  000AEA  2609               	addwf	??_feu^0,f,c
  2885  000AEC  0E00               	movlw	0
  2886  000AEE  220A               	addwfc	(??_feu+1)^0,f,c
  2887  000AF0  C007  FFD9         	movff	feu@pts,fsr2l
  2888  000AF4  C008  FFDA         	movff	feu@pts+1,fsr2h
  2889  000AF8  C009  FFDE         	movff	??_feu,postinc2
  2890  000AFC  C00A  FFDD         	movff	??_feu+1,postdec2
  2891  000B00                     l2586:
  2892                           
  2893                           ;main.c: 301: };main.c: 302: m_aliens[i][x-1] = ' ';
  2894  000B00  C00F  F001         	movff	feu@i,___wmul@multiplier
  2895  000B04  C010  F002         	movff	feu@i+1,___wmul@multiplier+1
  2896  000B08  0E00               	movlw	0
  2897  000B0A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2898  000B0C  0E15               	movlw	21
  2899  000B0E  6E03               	movwf	___wmul@multiplicand^0,c
  2900  000B10  EC37  F00C         	call	___wmul	;wreg free
  2901  000B14  0EFF               	movlw	255
  2902  000B16  6E09               	movwf	??_feu^0,c
  2903  000B18  0EFF               	movlw	255
  2904  000B1A  6E0A               	movwf	(??_feu+1)^0,c
  2905  000B1C  0E60               	movlw	low _m_aliens
  2906  000B1E  6E0B               	movwf	(??_feu+2)^0,c
  2907  000B20  0E00               	movlw	high _m_aliens
  2908  000B22  6E0C               	movwf	(??_feu+3)^0,c
  2909  000B24  5009               	movf	??_feu^0,w,c
  2910  000B26  260B               	addwf	(??_feu+2)^0,f,c
  2911  000B28  500A               	movf	(??_feu+1)^0,w,c
  2912  000B2A  220C               	addwfc	(??_feu+3)^0,f,c
  2913  000B2C  5001               	movf	?___wmul^0,w,c
  2914  000B2E  260B               	addwf	(??_feu+2)^0,f,c
  2915  000B30  5002               	movf	(?___wmul+1)^0,w,c
  2916  000B32  220C               	addwfc	(??_feu+3)^0,f,c
  2917  000B34  500E               	movf	feu@x^0,w,c
  2918  000B36  240B               	addwf	(??_feu+2)^0,w,c
  2919  000B38  6ED9               	movwf	fsr2l,c
  2920  000B3A  0E00               	movlw	0
  2921  000B3C  200C               	addwfc	(??_feu+3)^0,w,c
  2922  000B3E  6EDA               	movwf	fsr2h,c
  2923  000B40  0E20               	movlw	32
  2924  000B42  6EDF               	movwf	indf2,c
  2925  000B44                     
  2926                           ;main.c: 303: lcd_gotoXY(x, i+1);
  2927  000B44  280F               	incf	feu@i^0,w,c
  2928  000B46  6E04               	movwf	lcd_gotoXY@y^0,c
  2929  000B48  500E               	movf	feu@x^0,w,c
  2930  000B4A  EC4E  F009         	call	_lcd_gotoXY
  2931  000B4E                     
  2932                           ;main.c: 304: lcd_ecritChar(' ');
  2933  000B4E  0E20               	movlw	32
  2934  000B50  EC1F  F00B         	call	_lcd_ecritChar
  2935                           
  2936                           ;main.c: 306: break;
  2937  000B54  EFB6  F005         	goto	l142
  2938  000B58                     l2592:
  2939  000B58  060F               	decf	feu@i^0,f,c
  2940  000B5A  A0D8               	btfss	status,0,c
  2941  000B5C  0610               	decf	(feu@i+1)^0,f,c
  2942  000B5E  BE10               	btfsc	(feu@i+1)^0,7,c
  2943  000B60  EFB6  F005         	goto	u1350
  2944  000B64  EFB4  F005         	goto	u1351
  2945  000B68                     u1351:
  2946  000B68  EFA1  F004         	goto	l2572
  2947  000B6C                     u1350:
  2948  000B6C                     l142:
  2949  000B6C  0012               	return		;funcret
  2950  000B6E                     __end_of_feu:
  2951                           	opt callstack 0
  2952                           
  2953 ;; *************** function _deplace *****************
  2954 ;; Defined at:
  2955 ;;		line 247 in file "main.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  x               2    9[COMRAM] PTR unsigned char 
  2958 ;;		 -> main@posX(2), 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  effaceJoueur   21   12[COMRAM] const unsigned char [21]
  2961 ;;  tension         2   33[COMRAM] int 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2971 ;;      Params:         2       0       0       0       0       0       0
  2972 ;;      Locals:        23       0       0       0       0       0       0
  2973 ;;      Temps:          1       0       0       0       0       0       0
  2974 ;;      Totals:        26       0       0       0       0       0       0
  2975 ;;Total ram usage:       26 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    6
  2978 ;; This function calls:
  2979 ;;		_getAnalog
  2980 ;;		_lcd_ecritChar
  2981 ;;		_lcd_gotoXY
  2982 ;;		_lcd_putMessage
  2983 ;; This function is called by:
  2984 ;;		_main
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text19
  2989  000E3E                     __ptext19:
  2990                           	opt callstack 0
  2991  000E3E                     _deplace:
  2992                           	opt callstack 24
  2993  000E3E                     
  2994                           ;main.c: 249: int tension;;main.c: 251: const char effaceJoueur[21] = {"                
      +                              "};
  2995  000E3E  0E16               	movlw	low deplace@F2880
  2996  000E40  6EF6               	movwf	tblptrl,c
  2997  000E42                     	if	1	;There is more than 1 active tblptr byte
  2998  000E42  0E06               	movlw	high deplace@F2880
  2999  000E44  6EF7               	movwf	tblptrh,c
  3000  000E46                     	endif
  3001  000E46                     	if	0	;There are less than 3 active tblptr bytes
  3002  000E46                     	endif
  3003  000E46  EE20  F00D         	lfsr	2,deplace@effaceJoueur
  3004  000E4A  0E14               	movlw	20
  3005  000E4C                     u1260:
  3006  000E4C  0009               	tblrd		*+
  3007  000E4E  CFF5 FFDE          	movff	tablat,postinc2
  3008  000E52  06E8               	decf	wreg,f,c
  3009  000E54  E2FB               	bc	u1260
  3010  000E56                     
  3011                           ;main.c: 253: tension = getAnalog(7);
  3012  000E56  0E07               	movlw	7
  3013  000E58  EC23  F00C         	call	_getAnalog
  3014  000E5C  6E0C               	movwf	??_deplace^0,c
  3015  000E5E  500C               	movf	??_deplace^0,w,c
  3016  000E60  6E22               	movwf	deplace@tension^0,c
  3017  000E62  6A23               	clrf	(deplace@tension+1)^0,c
  3018  000E64                     
  3019                           ;main.c: 256: if(tension > 200)
  3020  000E64  BE23               	btfsc	(deplace@tension+1)^0,7,c
  3021  000E66  EF3E  F007         	goto	u1271
  3022  000E6A  5023               	movf	(deplace@tension+1)^0,w,c
  3023  000E6C  E109               	bnz	u1270
  3024  000E6E  0EC9               	movlw	201
  3025  000E70  5C22               	subwf	deplace@tension^0,w,c
  3026  000E72  A0D8               	btfss	status,0,c
  3027  000E74  EF3E  F007         	goto	u1271
  3028  000E78  EF40  F007         	goto	u1270
  3029  000E7C                     u1271:
  3030  000E7C  EF4E  F007         	goto	l2548
  3031  000E80                     u1270:
  3032  000E80                     
  3033                           ;main.c: 257: {;main.c: 258: *x = *x + 1;
  3034  000E80  C00A  FFD9         	movff	deplace@x,fsr2l
  3035  000E84  C00B  FFDA         	movff	deplace@x+1,fsr2h
  3036  000E88  50DF               	movf	indf2,w,c
  3037  000E8A  6E0C               	movwf	??_deplace^0,c
  3038  000E8C  280C               	incf	??_deplace^0,w,c
  3039  000E8E  C00A  FFD9         	movff	deplace@x,fsr2l
  3040  000E92  C00B  FFDA         	movff	deplace@x+1,fsr2h
  3041  000E96  6EDF               	movwf	indf2,c
  3042                           
  3043                           ;main.c: 259: }
  3044  000E98  EF68  F007         	goto	l129
  3045  000E9C                     l2548:
  3046                           
  3047                           ;main.c: 260: else if(tension < 50)
  3048  000E9C  BE23               	btfsc	(deplace@tension+1)^0,7,c
  3049  000E9E  EF5C  F007         	goto	u1280
  3050  000EA2  5023               	movf	(deplace@tension+1)^0,w,c
  3051  000EA4  E107               	bnz	u1281
  3052  000EA6  0E32               	movlw	50
  3053  000EA8  5C22               	subwf	deplace@tension^0,w,c
  3054  000EAA  B0D8               	btfsc	status,0,c
  3055  000EAC  EF5A  F007         	goto	u1281
  3056  000EB0  EF5C  F007         	goto	u1280
  3057  000EB4                     u1281:
  3058  000EB4  EF68  F007         	goto	l129
  3059  000EB8                     u1280:
  3060  000EB8                     
  3061                           ;main.c: 261: {;main.c: 262: *x = *x - 1;
  3062  000EB8  C00A  FFD9         	movff	deplace@x,fsr2l
  3063  000EBC  C00B  FFDA         	movff	deplace@x+1,fsr2h
  3064  000EC0  50DF               	movf	indf2,w,c
  3065  000EC2  6E0C               	movwf	??_deplace^0,c
  3066  000EC4  040C               	decf	??_deplace^0,w,c
  3067  000EC6  C00A  FFD9         	movff	deplace@x,fsr2l
  3068  000ECA  C00B  FFDA         	movff	deplace@x+1,fsr2h
  3069  000ECE  6EDF               	movwf	indf2,c
  3070  000ED0                     l129:
  3071                           
  3072                           ;main.c: 263: };main.c: 266: if(*x == 21)
  3073  000ED0  C00A  FFD9         	movff	deplace@x,fsr2l
  3074  000ED4  C00B  FFDA         	movff	deplace@x+1,fsr2h
  3075  000ED8  0E15               	movlw	21
  3076  000EDA  18DE               	xorwf	postinc2,w,c
  3077  000EDC  A4D8               	btfss	status,2,c
  3078  000EDE  EF73  F007         	goto	u1291
  3079  000EE2  EF75  F007         	goto	u1290
  3080  000EE6                     u1291:
  3081  000EE6  EF7B  F007         	goto	l2554
  3082  000EEA                     u1290:
  3083  000EEA                     
  3084                           ;main.c: 267: *x = 1;
  3085  000EEA  C00A  FFD9         	movff	deplace@x,fsr2l
  3086  000EEE  C00B  FFDA         	movff	deplace@x+1,fsr2h
  3087  000EF2  0E01               	movlw	1
  3088  000EF4  6EDF               	movwf	indf2,c
  3089  000EF6                     l2554:
  3090                           
  3091                           ;main.c: 268: if(*x == 0)
  3092  000EF6  C00A  FFD9         	movff	deplace@x,fsr2l
  3093  000EFA  C00B  FFDA         	movff	deplace@x+1,fsr2h
  3094  000EFE  50DF               	movf	indf2,w,c
  3095  000F00  A4D8               	btfss	status,2,c
  3096  000F02  EF85  F007         	goto	u1301
  3097  000F06  EF87  F007         	goto	u1300
  3098  000F0A                     u1301:
  3099  000F0A  EF8D  F007         	goto	l2558
  3100  000F0E                     u1300:
  3101  000F0E                     
  3102                           ;main.c: 269: *x = 20;
  3103  000F0E  C00A  FFD9         	movff	deplace@x,fsr2l
  3104  000F12  C00B  FFDA         	movff	deplace@x+1,fsr2h
  3105  000F16  0E14               	movlw	20
  3106  000F18  6EDF               	movwf	indf2,c
  3107  000F1A                     l2558:
  3108                           
  3109                           ;main.c: 272: lcd_gotoXY(1, 4);
  3110  000F1A  0E04               	movlw	4
  3111  000F1C  6E04               	movwf	lcd_gotoXY@y^0,c
  3112  000F1E  0E01               	movlw	1
  3113  000F20  EC4E  F009         	call	_lcd_gotoXY
  3114  000F24                     
  3115                           ;main.c: 273: lcd_putMessage(effaceJoueur);
  3116  000F24  0E0D               	movlw	low deplace@effaceJoueur
  3117  000F26  6E07               	movwf	lcd_putMessage@chaine^0,c
  3118  000F28  0E00               	movlw	high deplace@effaceJoueur
  3119  000F2A  6E08               	movwf	(lcd_putMessage@chaine+1)^0,c
  3120  000F2C  ECA6  F00B         	call	_lcd_putMessage	;wreg free
  3121  000F30                     
  3122                           ;main.c: 274: lcd_gotoXY(*x, 4);
  3123  000F30  0E04               	movlw	4
  3124  000F32  6E04               	movwf	lcd_gotoXY@y^0,c
  3125  000F34  C00A  FFD9         	movff	deplace@x,fsr2l
  3126  000F38  C00B  FFDA         	movff	deplace@x+1,fsr2h
  3127  000F3C  50DF               	movf	indf2,w,c
  3128  000F3E  EC4E  F009         	call	_lcd_gotoXY
  3129  000F42                     
  3130                           ;main.c: 275: lcd_ecritChar('A');
  3131  000F42  0E41               	movlw	65
  3132  000F44  EC1F  F00B         	call	_lcd_ecritChar
  3133  000F48  0012               	return		;funcret
  3134  000F4A                     __end_of_deplace:
  3135                           	opt callstack 0
  3136                           
  3137 ;; *************** function _getAnalog *****************
  3138 ;; Defined at:
  3139 ;;		line 374 in file "main.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  canal           1    wreg     unsigned char 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  canal           1    1[COMRAM] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      unsigned char 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3153 ;;      Params:         0       0       0       0       0       0       0
  3154 ;;      Locals:         1       0       0       0       0       0       0
  3155 ;;      Temps:          1       0       0       0       0       0       0
  3156 ;;      Totals:         2       0       0       0       0       0       0
  3157 ;;Total ram usage:        2 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    1
  3160 ;; This function calls:
  3161 ;;		Nothing
  3162 ;; This function is called by:
  3163 ;;		_deplace
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text20
  3168  001846                     __ptext20:
  3169                           	opt callstack 0
  3170  001846                     _getAnalog:
  3171                           	opt callstack 28
  3172                           
  3173                           ;incstack = 0
  3174                           ;getAnalog@canal stored from wreg
  3175  001846  6E02               	movwf	getAnalog@canal^0,c
  3176  001848                     
  3177                           ;main.c: 376: ADCON0bits.CHS = canal;
  3178  001848  C002  F001         	movff	getAnalog@canal,??_getAnalog
  3179  00184C  4601               	rlncf	??_getAnalog^0,f,c
  3180  00184E  4601               	rlncf	??_getAnalog^0,f,c
  3181  001850  50C2               	movf	194,w,c	;volatile
  3182  001852  1801               	xorwf	??_getAnalog^0,w,c
  3183  001854  0BC3               	andlw	-61
  3184  001856  1801               	xorwf	??_getAnalog^0,w,c
  3185  001858  6EC2               	movwf	194,c	;volatile
  3186  00185A                     
  3187                           ;main.c: 378: ADCON0bits.GO_DONE = 1;
  3188  00185A  82C2               	bsf	194,1,c	;volatile
  3189  00185C                     l159:
  3190  00185C  B2C2               	btfsc	194,1,c	;volatile
  3191  00185E  EF33  F00C         	goto	u891
  3192  001862  EF35  F00C         	goto	u890
  3193  001866                     u891:
  3194  001866  EF2E  F00C         	goto	l159
  3195  00186A                     u890:
  3196  00186A                     
  3197                           ;main.c: 380: return ADRESH;
  3198  00186A  50C4               	movf	196,w,c	;volatile
  3199  00186C  0012               	return		;funcret
  3200  00186E                     __end_of_getAnalog:
  3201                           	opt callstack 0
  3202                           
  3203 ;; *************** function _affichePerdu *****************
  3204 ;; Defined at:
  3205 ;;		line 339 in file "main.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  pts             2   31[COMRAM] int 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  gameOver       13   35[COMRAM] const unsigned char [13]
  3210 ;;  ptsChar         3   48[COMRAM] unsigned char [3]
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3220 ;;      Params:         2       0       0       0       0       0       0
  3221 ;;      Locals:        16       0       0       0       0       0       0
  3222 ;;      Temps:          2       0       0       0       0       0       0
  3223 ;;      Totals:        20       0       0       0       0       0       0
  3224 ;;Total ram usage:       20 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    6
  3227 ;; This function calls:
  3228 ;;		_lcd_effaceAffichage
  3229 ;;		_lcd_gotoXY
  3230 ;;		_lcd_putMessage
  3231 ;;		_sprintf
  3232 ;; This function is called by:
  3233 ;;		_main
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text21
  3238  000F4A                     __ptext21:
  3239                           	opt callstack 0
  3240  000F4A                     _affichePerdu:
  3241                           	opt callstack 24
  3242  000F4A                     
  3243                           ;main.c: 341: const char gameOver[] = "LOL you lost";
  3244  000F4A  0E40               	movlw	low affichePerdu@F2889
  3245  000F4C  6EF6               	movwf	tblptrl,c
  3246  000F4E                     	if	1	;There is more than 1 active tblptr byte
  3247  000F4E  0E06               	movlw	high affichePerdu@F2889
  3248  000F50  6EF7               	movwf	tblptrh,c
  3249  000F52                     	endif
  3250  000F52                     	if	0	;There are less than 3 active tblptr bytes
  3251  000F52                     	endif
  3252  000F52  EE20  F024         	lfsr	2,affichePerdu@gameOver
  3253  000F56  0E0C               	movlw	12
  3254  000F58                     u1210:
  3255  000F58  0009               	tblrd		*+
  3256  000F5A  CFF5 FFDE          	movff	tablat,postinc2
  3257  000F5E  06E8               	decf	wreg,f,c
  3258  000F60  E2FB               	bc	u1210
  3259  000F62                     
  3260                           ;main.c: 342: char ptsChar[3];;main.c: 344: sprintf(ptsChar, "Score = %3d", pts);
  3261  000F62  0E31               	movlw	low affichePerdu@ptsChar
  3262  000F64  6E0D               	movwf	sprintf@sp^0,c
  3263  000F66  0E00               	movlw	high affichePerdu@ptsChar
  3264  000F68  6E0E               	movwf	(sprintf@sp+1)^0,c
  3265  000F6A  0E57               	movlw	low STR_1
  3266  000F6C  6E0F               	movwf	sprintf@f^0,c
  3267  000F6E  0E06               	movlw	high STR_1
  3268  000F70  6E10               	movwf	(sprintf@f+1)^0,c
  3269  000F72  C020  F011         	movff	affichePerdu@pts,?_sprintf+4
  3270  000F76  C021  F012         	movff	affichePerdu@pts+1,?_sprintf+5
  3271  000F7A  EC32  F003         	call	_sprintf	;wreg free
  3272  000F7E                     
  3273                           ;main.c: 347: lcd_effaceAffichage();
  3274  000F7E  EC76  F00C         	call	_lcd_effaceAffichage	;wreg free
  3275  000F82                     
  3276                           ;main.c: 348: lcd_gotoXY(4, 1);
  3277  000F82  0E01               	movlw	1
  3278  000F84  6E04               	movwf	lcd_gotoXY@y^0,c
  3279  000F86  0E04               	movlw	4
  3280  000F88  EC4E  F009         	call	_lcd_gotoXY
  3281  000F8C                     
  3282                           ;main.c: 349: lcd_putMessage(gameOver);
  3283  000F8C  0E24               	movlw	low affichePerdu@gameOver
  3284  000F8E  6E07               	movwf	lcd_putMessage@chaine^0,c
  3285  000F90  0E00               	movlw	high affichePerdu@gameOver
  3286  000F92  6E08               	movwf	(lcd_putMessage@chaine+1)^0,c
  3287  000F94  ECA6  F00B         	call	_lcd_putMessage	;wreg free
  3288  000F98                     
  3289                           ;main.c: 350: lcd_gotoXY(4, 3);
  3290  000F98  0E03               	movlw	3
  3291  000F9A  6E04               	movwf	lcd_gotoXY@y^0,c
  3292  000F9C  0E04               	movlw	4
  3293  000F9E  EC4E  F009         	call	_lcd_gotoXY
  3294  000FA2                     
  3295                           ;main.c: 351: lcd_putMessage(ptsChar);
  3296  000FA2  0E31               	movlw	low affichePerdu@ptsChar
  3297  000FA4  6E07               	movwf	lcd_putMessage@chaine^0,c
  3298  000FA6  0E00               	movlw	high affichePerdu@ptsChar
  3299  000FA8  6E08               	movwf	(lcd_putMessage@chaine+1)^0,c
  3300  000FAA  ECA6  F00B         	call	_lcd_putMessage	;wreg free
  3301  000FAE                     
  3302                           ;main.c: 352: _delay((unsigned long)((2000)*(1000000/4000.0)));
  3303  000FAE  0E03               	movlw	3
  3304  000FB0  6E23               	movwf	(??_affichePerdu+1)^0,c
  3305  000FB2  0E8A               	movlw	138
  3306  000FB4  6E22               	movwf	??_affichePerdu^0,c
  3307  000FB6  0E56               	movlw	86
  3308  000FB8                     u1507:
  3309  000FB8  2EE8               	decfsz	wreg,f,c
  3310  000FBA  D7FE               	bra	u1507
  3311  000FBC  2E22               	decfsz	??_affichePerdu^0,f,c
  3312  000FBE  D7FC               	bra	u1507
  3313  000FC0  2E23               	decfsz	(??_affichePerdu+1)^0,f,c
  3314  000FC2  D7FA               	bra	u1507
  3315  000FC4                     
  3316                           ;main.c: 353: lcd_effaceAffichage();
  3317  000FC4  EC76  F00C         	call	_lcd_effaceAffichage	;wreg free
  3318  000FC8                     
  3319                           ;main.c: 357: if(pts > 10)
  3320  000FC8  BE21               	btfsc	(affichePerdu@pts+1)^0,7,c
  3321  000FCA  EFF0  F007         	goto	u1221
  3322  000FCE  5021               	movf	(affichePerdu@pts+1)^0,w,c
  3323  000FD0  E109               	bnz	u1220
  3324  000FD2  0E0B               	movlw	11
  3325  000FD4  5C20               	subwf	affichePerdu@pts^0,w,c
  3326  000FD6  A0D8               	btfss	status,0,c
  3327  000FD8  EFF0  F007         	goto	u1221
  3328  000FDC  EFF2  F007         	goto	u1220
  3329  000FE0                     u1221:
  3330  000FE0  EF06  F008         	goto	l156
  3331  000FE4                     u1220:
  3332  000FE4                     
  3333                           ;main.c: 358: {;main.c: 359: m_niveau++;
  3334  000FE4  4A4E               	infsnz	_m_niveau^0,f,c
  3335  000FE6  2A4F               	incf	(_m_niveau+1)^0,f,c
  3336  000FE8                     
  3337                           ;main.c: 360: if(m_niveau> (20-2) )
  3338  000FE8  BE4F               	btfsc	(_m_niveau+1)^0,7,c
  3339  000FEA  EF00  F008         	goto	u1231
  3340  000FEE  504F               	movf	(_m_niveau+1)^0,w,c
  3341  000FF0  E109               	bnz	u1230
  3342  000FF2  0E13               	movlw	19
  3343  000FF4  5C4E               	subwf	_m_niveau^0,w,c
  3344  000FF6  A0D8               	btfss	status,0,c
  3345  000FF8  EF00  F008         	goto	u1231
  3346  000FFC  EF02  F008         	goto	u1230
  3347  001000                     u1231:
  3348  001000  EF06  F008         	goto	l156
  3349  001004                     u1230:
  3350  001004                     
  3351                           ;main.c: 361: {;main.c: 362: m_niveau = (20-2);
  3352  001004  0E00               	movlw	0
  3353  001006  6E4F               	movwf	(_m_niveau+1)^0,c
  3354  001008  0E12               	movlw	18
  3355  00100A  6E4E               	movwf	_m_niveau^0,c
  3356  00100C                     l156:
  3357  00100C  0012               	return		;funcret
  3358  00100E                     __end_of_affichePerdu:
  3359                           	opt callstack 0
  3360                           
  3361 ;; *************** function _sprintf *****************
  3362 ;; Defined at:
  3363 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  sp              2   12[COMRAM] PTR unsigned char 
  3366 ;;		 -> affichePerdu@ptsChar(3), 
  3367 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3368 ;;		 -> STR_1(12), 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  tmpval          4    0        struct .
  3371 ;;  cp              3    0        PTR const unsigned char 
  3372 ;;  width           2   28[COMRAM] int 
  3373 ;;  val             2   26[COMRAM] unsigned int 
  3374 ;;  ap              2   22[COMRAM] PTR void [1]
  3375 ;;		 -> ?_sprintf(2), 
  3376 ;;  len             2    0        unsigned int 
  3377 ;;  c               1   30[COMRAM] unsigned char 
  3378 ;;  flag            1   25[COMRAM] unsigned char 
  3379 ;;  prec            1   24[COMRAM] char 
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  2   12[COMRAM] int 
  3382 ;; Registers used:
  3383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3389 ;;      Params:         6       0       0       0       0       0       0
  3390 ;;      Locals:         9       0       0       0       0       0       0
  3391 ;;      Temps:          4       0       0       0       0       0       0
  3392 ;;      Totals:        19       0       0       0       0       0       0
  3393 ;;Total ram usage:       19 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    2
  3396 ;; This function calls:
  3397 ;;		___lwdiv
  3398 ;;		___lwmod
  3399 ;;		___wmul
  3400 ;;		_isdigit
  3401 ;; This function is called by:
  3402 ;;		_affichePerdu
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text22
  3407  000664                     __ptext22:
  3408                           	opt callstack 0
  3409  000664                     _sprintf:
  3410                           	opt callstack 27
  3411  000664                     
  3412                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  3413  000664  0E11               	movlw	low (?_sprintf+4)
  3414  000666  6E17               	movwf	sprintf@ap^0,c
  3415  000668  0E00               	movlw	high (?_sprintf+4)
  3416  00066A  6E18               	movwf	(sprintf@ap+1)^0,c
  3417                           
  3418                           ;doprnt.c: 553: while((c = *f++)) {
  3419  00066C  EF84  F004         	goto	l2248
  3420  000670                     l2164:
  3421                           
  3422                           ;doprnt.c: 555: if(c != '%')
  3423  000670  0E25               	movlw	37
  3424  000672  181F               	xorwf	sprintf@c^0,w,c
  3425  000674  B4D8               	btfsc	status,2,c
  3426  000676  EF3F  F003         	goto	u921
  3427  00067A  EF41  F003         	goto	u920
  3428  00067E                     u921:
  3429  00067E  EF4B  F003         	goto	l2170
  3430  000682                     u920:
  3431  000682                     
  3432                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  3433  000682  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3434  000686  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3435  00068A  C01F  FFDF         	movff	sprintf@c,indf2
  3436  00068E  4A0D               	infsnz	sprintf@sp^0,f,c
  3437  000690  2A0E               	incf	(sprintf@sp+1)^0,f,c
  3438                           
  3439                           ;doprnt.c: 559: continue;
  3440  000692  EF84  F004         	goto	l2248
  3441  000696                     l2170:
  3442                           
  3443                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  3444  000696  0E00               	movlw	0
  3445  000698  6E1E               	movwf	(sprintf@width+1)^0,c
  3446  00069A  0E00               	movlw	0
  3447  00069C  6E1D               	movwf	sprintf@width^0,c
  3448                           
  3449                           ;doprnt.c: 565: flag = 0;
  3450  00069E  0E00               	movlw	0
  3451  0006A0  6E1A               	movwf	sprintf@flag^0,c
  3452  0006A2                     
  3453                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  3454  0006A2  C00F  FFF6         	movff	sprintf@f,tblptrl
  3455  0006A6  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3456  0006AA                     	if	0	;tblptru may be non-zero
  3457  0006AA                     	endif
  3458  0006AA                     	if	0	;tblptru may be non-zero
  3459  0006AA                     	endif
  3460  0006AA  0008               	tblrd		*
  3461  0006AC  50F5               	movf	tablat,w,c
  3462  0006AE  ECDF  F00B         	call	_isdigit
  3463  0006B2  A0D8               	btfss	status,0,c
  3464  0006B4  EF5E  F003         	goto	u931
  3465  0006B8  EF60  F003         	goto	u930
  3466  0006BC                     u931:
  3467  0006BC  EF97  F003         	goto	l2186
  3468  0006C0                     u930:
  3469  0006C0                     
  3470                           ;doprnt.c: 615: width = 0;
  3471  0006C0  0E00               	movlw	0
  3472  0006C2  6E1E               	movwf	(sprintf@width+1)^0,c
  3473  0006C4  0E00               	movlw	0
  3474  0006C6  6E1D               	movwf	sprintf@width^0,c
  3475  0006C8                     l2176:
  3476                           
  3477                           ;doprnt.c: 617: width *= 10;
  3478  0006C8  C01D  F001         	movff	sprintf@width,___wmul@multiplier
  3479  0006CC  C01E  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  3480  0006D0  0E00               	movlw	0
  3481  0006D2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3482  0006D4  0E0A               	movlw	10
  3483  0006D6  6E03               	movwf	___wmul@multiplicand^0,c
  3484  0006D8  EC37  F00C         	call	___wmul	;wreg free
  3485  0006DC  C001  F01D         	movff	?___wmul,sprintf@width
  3486  0006E0  C002  F01E         	movff	?___wmul+1,sprintf@width+1
  3487  0006E4                     
  3488                           ;doprnt.c: 618: width += *f++ - '0';
  3489  0006E4  0ED0               	movlw	208
  3490  0006E6  6E13               	movwf	??_sprintf^0,c
  3491  0006E8  0EFF               	movlw	255
  3492  0006EA  6E14               	movwf	(??_sprintf+1)^0,c
  3493  0006EC  C00F  FFF6         	movff	sprintf@f,tblptrl
  3494  0006F0  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3495  0006F4                     	if	0	;tblptru may be non-zero
  3496  0006F4                     	endif
  3497  0006F4                     	if	0	;tblptru may be non-zero
  3498  0006F4                     	endif
  3499  0006F4  0008               	tblrd		*
  3500  0006F6  50F5               	movf	tablat,w,c
  3501  0006F8  6E15               	movwf	(??_sprintf+2)^0,c
  3502  0006FA  6A16               	clrf	(??_sprintf+3)^0,c
  3503  0006FC  5013               	movf	??_sprintf^0,w,c
  3504  0006FE  2615               	addwf	(??_sprintf+2)^0,f,c
  3505  000700  5014               	movf	(??_sprintf+1)^0,w,c
  3506  000702  2216               	addwfc	(??_sprintf+3)^0,f,c
  3507  000704  5015               	movf	(??_sprintf+2)^0,w,c
  3508  000706  261D               	addwf	sprintf@width^0,f,c
  3509  000708  5016               	movf	(??_sprintf+3)^0,w,c
  3510  00070A  221E               	addwfc	(sprintf@width+1)^0,f,c
  3511  00070C  4A0F               	infsnz	sprintf@f^0,f,c
  3512  00070E  2A10               	incf	(sprintf@f+1)^0,f,c
  3513  000710                     
  3514                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  3515  000710  C00F  FFF6         	movff	sprintf@f,tblptrl
  3516  000714  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3517  000718                     	if	0	;tblptru may be non-zero
  3518  000718                     	endif
  3519  000718                     	if	0	;tblptru may be non-zero
  3520  000718                     	endif
  3521  000718  0008               	tblrd		*
  3522  00071A  50F5               	movf	tablat,w,c
  3523  00071C  ECDF  F00B         	call	_isdigit
  3524  000720  B0D8               	btfsc	status,0,c
  3525  000722  EF95  F003         	goto	u941
  3526  000726  EF97  F003         	goto	u940
  3527  00072A                     u941:
  3528  00072A  EF64  F003         	goto	l2176
  3529  00072E                     u940:
  3530  00072E                     l2186:
  3531  00072E  C00F  FFF6         	movff	sprintf@f,tblptrl
  3532  000732  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3533  000736  4A0F               	infsnz	sprintf@f^0,f,c
  3534  000738  2A10               	incf	(sprintf@f+1)^0,f,c
  3535  00073A                     	if	0	;tblptru may be non-zero
  3536  00073A                     	endif
  3537  00073A                     	if	0	;tblptru may be non-zero
  3538  00073A                     	endif
  3539  00073A  0008               	tblrd		*
  3540  00073C  CFF5 F01F          	movff	tablat,sprintf@c
  3541  000740  501F               	movf	sprintf@c^0,w,c
  3542                           
  3543                           ; Switch size 1, requested type "simple"
  3544                           ; Number of cases is 3, Range of values is 0 to 105
  3545                           ; switch strategies available:
  3546                           ; Name         Instructions Cycles
  3547                           ; simple_byte           10     6 (average)
  3548                           ;	Chosen strategy is simple_byte
  3549  000742  0A00               	xorlw	0	; case 0
  3550  000744  B4D8               	btfsc	status,2,c
  3551  000746  EF95  F004         	goto	l2250
  3552  00074A  0A64               	xorlw	100	; case 100
  3553  00074C  B4D8               	btfsc	status,2,c
  3554  00074E  EFAF  F003         	goto	l2188
  3555  000752  0A0D               	xorlw	13	; case 105
  3556  000754  B4D8               	btfsc	status,2,c
  3557  000756  EFAF  F003         	goto	l2188
  3558  00075A  EF84  F004         	goto	l2248
  3559  00075E                     l2188:
  3560                           
  3561                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3562  00075E  C017  FFD9         	movff	sprintf@ap,fsr2l
  3563  000762  C018  FFDA         	movff	sprintf@ap+1,fsr2h
  3564  000766  CFDE F01B          	movff	postinc2,sprintf@val
  3565  00076A  CFDD F01C          	movff	postdec2,sprintf@val+1
  3566  00076E  0E02               	movlw	2
  3567  000770  2617               	addwf	sprintf@ap^0,f,c
  3568  000772  0E00               	movlw	0
  3569  000774  2218               	addwfc	(sprintf@ap+1)^0,f,c
  3570  000776                     
  3571                           ;doprnt.c: 1287: if((int)val < 0) {
  3572  000776  BE1C               	btfsc	(sprintf@val+1)^0,7,c
  3573  000778  EFC2  F003         	goto	u950
  3574  00077C  EFC0  F003         	goto	u951
  3575  000780                     u951:
  3576  000780  EFC8  F003         	goto	l2198
  3577  000784                     u950:
  3578  000784                     
  3579                           ;doprnt.c: 1288: flag |= 0x03;
  3580  000784  0E03               	movlw	3
  3581  000786  121A               	iorwf	sprintf@flag^0,f,c
  3582  000788                     
  3583                           ;doprnt.c: 1289: val = -val;
  3584  000788  6C1B               	negf	sprintf@val^0,c
  3585  00078A  1E1C               	comf	(sprintf@val+1)^0,f,c
  3586  00078C  B0D8               	btfsc	status,0,c
  3587  00078E  2A1C               	incf	(sprintf@val+1)^0,f,c
  3588  000790                     l2198:
  3589                           
  3590                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  3591  000790  0E01               	movlw	1
  3592  000792  6E1F               	movwf	sprintf@c^0,c
  3593  000794                     l2204:
  3594                           
  3595                           ;doprnt.c: 1332: if(val < dpowers[c])
  3596  000794  501F               	movf	sprintf@c^0,w,c
  3597  000796  0D02               	mullw	2
  3598  000798  0E4D               	movlw	low _dpowers
  3599  00079A  24F3               	addwf	243,w,c
  3600  00079C  6EF6               	movwf	tblptrl,c
  3601  00079E  0E06               	movlw	high _dpowers
  3602  0007A0  20F4               	addwfc	244,w,c
  3603  0007A2  6EF7               	movwf	tblptrh,c
  3604  0007A4                     	if	0	;There are less than 3 active tblptr bytes
  3605  0007A4                     	endif
  3606  0007A4  0009               	tblrd		*+
  3607  0007A6  50F5               	movf	tablat,w,c
  3608  0007A8  5C1B               	subwf	sprintf@val^0,w,c
  3609  0007AA  0009               	tblrd		*+
  3610  0007AC  50F5               	movf	tablat,w,c
  3611  0007AE  581C               	subwfb	(sprintf@val+1)^0,w,c
  3612  0007B0  B0D8               	btfsc	status,0,c
  3613  0007B2  EFDD  F003         	goto	u961
  3614  0007B6  EFDF  F003         	goto	u960
  3615  0007BA                     u961:
  3616  0007BA  EFE1  F003         	goto	l2208
  3617  0007BE                     u960:
  3618  0007BE  EFEB  F003         	goto	l2212
  3619  0007C2                     l2208:
  3620  0007C2  2A1F               	incf	sprintf@c^0,f,c
  3621  0007C4  0E05               	movlw	5
  3622  0007C6  181F               	xorwf	sprintf@c^0,w,c
  3623  0007C8  A4D8               	btfss	status,2,c
  3624  0007CA  EFE9  F003         	goto	u971
  3625  0007CE  EFEB  F003         	goto	u970
  3626  0007D2                     u971:
  3627  0007D2  EFCA  F003         	goto	l2204
  3628  0007D6                     u970:
  3629  0007D6                     l2212:
  3630                           
  3631                           ;doprnt.c: 1371: if(width && flag & 0x03)
  3632  0007D6  501D               	movf	sprintf@width^0,w,c
  3633  0007D8  101E               	iorwf	(sprintf@width+1)^0,w,c
  3634  0007DA  B4D8               	btfsc	status,2,c
  3635  0007DC  EFF2  F003         	goto	u981
  3636  0007E0  EFF4  F003         	goto	u980
  3637  0007E4                     u981:
  3638  0007E4  EF02  F004         	goto	l2218
  3639  0007E8                     u980:
  3640  0007E8  C01A  F013         	movff	sprintf@flag,??_sprintf
  3641  0007EC  0E03               	movlw	3
  3642  0007EE  1613               	andwf	??_sprintf^0,f,c
  3643  0007F0  B4D8               	btfsc	status,2,c
  3644  0007F2  EFFD  F003         	goto	u991
  3645  0007F6  EFFF  F003         	goto	u990
  3646  0007FA                     u991:
  3647  0007FA  EF02  F004         	goto	l2218
  3648  0007FE                     u990:
  3649  0007FE                     
  3650                           ;doprnt.c: 1372: width--;
  3651  0007FE  061D               	decf	sprintf@width^0,f,c
  3652  000800  A0D8               	btfss	status,0,c
  3653  000802  061E               	decf	(sprintf@width+1)^0,f,c
  3654  000804                     l2218:
  3655                           
  3656                           ;doprnt.c: 1407: if(width > c)
  3657  000804  501F               	movf	sprintf@c^0,w,c
  3658  000806  6E13               	movwf	??_sprintf^0,c
  3659  000808  6A14               	clrf	(??_sprintf+1)^0,c
  3660  00080A  501D               	movf	sprintf@width^0,w,c
  3661  00080C  5C13               	subwf	??_sprintf^0,w,c
  3662  00080E  5014               	movf	(??_sprintf+1)^0,w,c
  3663  000810  0A80               	xorlw	128
  3664  000812  6E15               	movwf	(??_sprintf+2)^0,c
  3665  000814  501E               	movf	(sprintf@width+1)^0,w,c
  3666  000816  0A80               	xorlw	128
  3667  000818  5815               	subwfb	(??_sprintf+2)^0,w,c
  3668  00081A  B0D8               	btfsc	status,0,c
  3669  00081C  EF12  F004         	goto	u1001
  3670  000820  EF14  F004         	goto	u1000
  3671  000824                     u1001:
  3672  000824  EF1A  F004         	goto	l2222
  3673  000828                     u1000:
  3674  000828                     
  3675                           ;doprnt.c: 1408: width -= c;
  3676  000828  501F               	movf	sprintf@c^0,w,c
  3677  00082A  5E1D               	subwf	sprintf@width^0,f,c
  3678  00082C  0E00               	movlw	0
  3679  00082E  5A1E               	subwfb	(sprintf@width+1)^0,f,c
  3680  000830  EF1E  F004         	goto	l2224
  3681  000834                     l2222:
  3682                           
  3683                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  3684  000834  0E00               	movlw	0
  3685  000836  6E1E               	movwf	(sprintf@width+1)^0,c
  3686  000838  0E00               	movlw	0
  3687  00083A  6E1D               	movwf	sprintf@width^0,c
  3688  00083C                     l2224:
  3689                           
  3690                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  3691  00083C  501D               	movf	sprintf@width^0,w,c
  3692  00083E  101E               	iorwf	(sprintf@width+1)^0,w,c
  3693  000840  B4D8               	btfsc	status,2,c
  3694  000842  EF25  F004         	goto	u1011
  3695  000846  EF27  F004         	goto	u1010
  3696  00084A                     u1011:
  3697  00084A  EF3B  F004         	goto	l2232
  3698  00084E                     u1010:
  3699  00084E                     l2226:
  3700                           
  3701                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  3702  00084E  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3703  000852  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3704  000856  0E20               	movlw	32
  3705  000858  6EDF               	movwf	indf2,c
  3706  00085A  4A0D               	infsnz	sprintf@sp^0,f,c
  3707  00085C  2A0E               	incf	(sprintf@sp+1)^0,f,c
  3708  00085E                     
  3709                           ;doprnt.c: 1457: while(--width);
  3710  00085E  061D               	decf	sprintf@width^0,f,c
  3711  000860  A0D8               	btfss	status,0,c
  3712  000862  061E               	decf	(sprintf@width+1)^0,f,c
  3713  000864  501D               	movf	sprintf@width^0,w,c
  3714  000866  101E               	iorwf	(sprintf@width+1)^0,w,c
  3715  000868  A4D8               	btfss	status,2,c
  3716  00086A  EF39  F004         	goto	u1021
  3717  00086E  EF3B  F004         	goto	u1020
  3718  000872                     u1021:
  3719  000872  EF27  F004         	goto	l2226
  3720  000876                     u1020:
  3721  000876                     l2232:
  3722                           
  3723                           ;doprnt.c: 1464: if(flag & 0x03)
  3724  000876  C01A  F013         	movff	sprintf@flag,??_sprintf
  3725  00087A  0E03               	movlw	3
  3726  00087C  1613               	andwf	??_sprintf^0,f,c
  3727  00087E  B4D8               	btfsc	status,2,c
  3728  000880  EF44  F004         	goto	u1031
  3729  000884  EF46  F004         	goto	u1030
  3730  000888                     u1031:
  3731  000888  EF4E  F004         	goto	l2238
  3732  00088C                     u1030:
  3733  00088C                     
  3734                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  3735  00088C  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3736  000890  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3737  000894  0E2D               	movlw	45
  3738  000896  6EDF               	movwf	indf2,c
  3739  000898  4A0D               	infsnz	sprintf@sp^0,f,c
  3740  00089A  2A0E               	incf	(sprintf@sp+1)^0,f,c
  3741  00089C                     l2238:
  3742                           
  3743                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3744  00089C  C01F  F019         	movff	sprintf@c,sprintf@prec
  3745                           
  3746                           ;doprnt.c: 1500: while(prec--) {
  3747  0008A0  EF7B  F004         	goto	l2246
  3748  0008A4                     l2240:
  3749                           
  3750                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  3751  0008A4  5019               	movf	sprintf@prec^0,w,c
  3752  0008A6  0D02               	mullw	2
  3753  0008A8  0E4D               	movlw	low _dpowers
  3754  0008AA  24F3               	addwf	243,w,c
  3755  0008AC  6EF6               	movwf	tblptrl,c
  3756  0008AE  0E06               	movlw	high _dpowers
  3757  0008B0  20F4               	addwfc	244,w,c
  3758  0008B2  6EF7               	movwf	tblptrh,c
  3759  0008B4                     	if	0	;There are less than 3 active tblptr bytes
  3760  0008B4                     	endif
  3761  0008B4  0009               	tblrd		*+
  3762  0008B6  CFF5 F003          	movff	tablat,___lwdiv@divisor
  3763  0008BA  000A               	tblrd		*-
  3764  0008BC  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  3765  0008C0  C01B  F001         	movff	sprintf@val,___lwdiv@dividend
  3766  0008C4  C01C  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  3767  0008C8  ECDF  F008         	call	___lwdiv	;wreg free
  3768  0008CC  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3769  0008D0  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3770  0008D4  0E00               	movlw	0
  3771  0008D6  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3772  0008D8  0E0A               	movlw	10
  3773  0008DA  6E0A               	movwf	___lwmod@divisor^0,c
  3774  0008DC  ECB3  F009         	call	___lwmod	;wreg free
  3775  0008E0  5008               	movf	?___lwmod^0,w,c
  3776  0008E2  0F30               	addlw	48
  3777  0008E4  6E1F               	movwf	sprintf@c^0,c
  3778  0008E6                     
  3779                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  3780  0008E6  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3781  0008EA  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3782  0008EE  C01F  FFDF         	movff	sprintf@c,indf2
  3783  0008F2  4A0D               	infsnz	sprintf@sp^0,f,c
  3784  0008F4  2A0E               	incf	(sprintf@sp+1)^0,f,c
  3785  0008F6                     l2246:
  3786  0008F6  0619               	decf	sprintf@prec^0,f,c
  3787  0008F8  2819               	incf	sprintf@prec^0,w,c
  3788  0008FA  A4D8               	btfss	status,2,c
  3789  0008FC  EF82  F004         	goto	u1041
  3790  000900  EF84  F004         	goto	u1040
  3791  000904                     u1041:
  3792  000904  EF52  F004         	goto	l2240
  3793  000908                     u1040:
  3794  000908                     l2248:
  3795  000908  C00F  FFF6         	movff	sprintf@f,tblptrl
  3796  00090C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3797  000910  4A0F               	infsnz	sprintf@f^0,f,c
  3798  000912  2A10               	incf	(sprintf@f+1)^0,f,c
  3799  000914                     	if	0	;tblptru may be non-zero
  3800  000914                     	endif
  3801  000914                     	if	0	;tblptru may be non-zero
  3802  000914                     	endif
  3803  000914  0008               	tblrd		*
  3804  000916  CFF5 F01F          	movff	tablat,sprintf@c
  3805  00091A  501F               	movf	sprintf@c^0,w,c
  3806  00091C  A4D8               	btfss	status,2,c
  3807  00091E  EF93  F004         	goto	u1051
  3808  000922  EF95  F004         	goto	u1050
  3809  000926                     u1051:
  3810  000926  EF38  F003         	goto	l2164
  3811  00092A                     u1050:
  3812  00092A                     l2250:
  3813                           
  3814                           ;doprnt.c: 1564: *sp = 0;
  3815  00092A  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3816  00092E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3817  000932  0E00               	movlw	0
  3818  000934  6EDF               	movwf	indf2,c
  3819  000936  0012               	return		;funcret
  3820  000938                     __end_of_sprintf:
  3821                           	opt callstack 0
  3822                           
  3823 ;; *************** function _isdigit *****************
  3824 ;; Defined at:
  3825 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  c               1    wreg     unsigned char 
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;  c               1    2[COMRAM] unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;		None               void
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3839 ;;      Params:         0       0       0       0       0       0       0
  3840 ;;      Locals:         2       0       0       0       0       0       0
  3841 ;;      Temps:          1       0       0       0       0       0       0
  3842 ;;      Totals:         3       0       0       0       0       0       0
  3843 ;;Total ram usage:        3 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    1
  3846 ;; This function calls:
  3847 ;;		Nothing
  3848 ;; This function is called by:
  3849 ;;		_sprintf
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text23
  3854  0017BE                     __ptext23:
  3855                           	opt callstack 0
  3856  0017BE                     _isdigit:
  3857                           	opt callstack 27
  3858                           
  3859                           ;incstack = 0
  3860                           ;isdigit@c stored from wreg
  3861  0017BE  6E03               	movwf	isdigit@c^0,c
  3862  0017C0  0E00               	movlw	0
  3863  0017C2  6E02               	movwf	_isdigit$1464^0,c
  3864  0017C4  0E3A               	movlw	58
  3865  0017C6  6003               	cpfslt	isdigit@c^0,c
  3866  0017C8  EFE8  F00B         	goto	u771
  3867  0017CC  EFEA  F00B         	goto	u770
  3868  0017D0                     u771:
  3869  0017D0  EFF4  F00B         	goto	l2044
  3870  0017D4                     u770:
  3871  0017D4  0E2F               	movlw	47
  3872  0017D6  6403               	cpfsgt	isdigit@c^0,c
  3873  0017D8  EFF0  F00B         	goto	u781
  3874  0017DC  EFF2  F00B         	goto	u780
  3875  0017E0                     u781:
  3876  0017E0  EFF4  F00B         	goto	l2044
  3877  0017E4                     u780:
  3878  0017E4  0E01               	movlw	1
  3879  0017E6  6E02               	movwf	_isdigit$1464^0,c
  3880  0017E8                     l2044:
  3881  0017E8  C002  F001         	movff	_isdigit$1464,??_isdigit
  3882  0017EC  3001               	rrcf	??_isdigit^0,w,c
  3883  0017EE  0012               	return		;funcret
  3884  0017F0                     __end_of_isdigit:
  3885                           	opt callstack 0
  3886                           
  3887 ;; *************** function ___lwmod *****************
  3888 ;; Defined at:
  3889 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  dividend        2    7[COMRAM] unsigned int 
  3892 ;;  divisor         2    9[COMRAM] unsigned int 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  counter         1   11[COMRAM] unsigned char 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  2    7[COMRAM] unsigned int 
  3897 ;; Registers used:
  3898 ;;		wreg, status,2, status,0
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3904 ;;      Params:         4       0       0       0       0       0       0
  3905 ;;      Locals:         1       0       0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0       0       0
  3907 ;;      Totals:         5       0       0       0       0       0       0
  3908 ;;Total ram usage:        5 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:    1
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_sprintf
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text24
  3919  001366                     __ptext24:
  3920                           	opt callstack 0
  3921  001366                     ___lwmod:
  3922                           	opt callstack 27
  3923  001366  500A               	movf	___lwmod@divisor^0,w,c
  3924  001368  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  3925  00136A  B4D8               	btfsc	status,2,c
  3926  00136C  EFBA  F009         	goto	u841
  3927  001370  EFBC  F009         	goto	u840
  3928  001374                     u841:
  3929  001374  EFE0  F009         	goto	l845
  3930  001378                     u840:
  3931  001378  0E01               	movlw	1
  3932  00137A  6E0C               	movwf	___lwmod@counter^0,c
  3933  00137C  EFC4  F009         	goto	l2092
  3934  001380                     l2090:
  3935  001380  90D8               	bcf	status,0,c
  3936  001382  360A               	rlcf	___lwmod@divisor^0,f,c
  3937  001384  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  3938  001386  2A0C               	incf	___lwmod@counter^0,f,c
  3939  001388                     l2092:
  3940  001388  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  3941  00138A  EFC9  F009         	goto	u851
  3942  00138E  EFCB  F009         	goto	u850
  3943  001392                     u851:
  3944  001392  EFC0  F009         	goto	l2090
  3945  001396                     u850:
  3946  001396                     l2094:
  3947  001396  500A               	movf	___lwmod@divisor^0,w,c
  3948  001398  5C08               	subwf	___lwmod@dividend^0,w,c
  3949  00139A  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3950  00139C  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  3951  00139E  A0D8               	btfss	status,0,c
  3952  0013A0  EFD4  F009         	goto	u861
  3953  0013A4  EFD6  F009         	goto	u860
  3954  0013A8                     u861:
  3955  0013A8  EFDA  F009         	goto	l2098
  3956  0013AC                     u860:
  3957  0013AC  500A               	movf	___lwmod@divisor^0,w,c
  3958  0013AE  5E08               	subwf	___lwmod@dividend^0,f,c
  3959  0013B0  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3960  0013B2  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  3961  0013B4                     l2098:
  3962  0013B4  90D8               	bcf	status,0,c
  3963  0013B6  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  3964  0013B8  320A               	rrcf	___lwmod@divisor^0,f,c
  3965  0013BA  2E0C               	decfsz	___lwmod@counter^0,f,c
  3966  0013BC  EFCB  F009         	goto	l2094
  3967  0013C0                     l845:
  3968  0013C0  C008  F008         	movff	___lwmod@dividend,?___lwmod
  3969  0013C4  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  3970  0013C8  0012               	return		;funcret
  3971  0013CA                     __end_of___lwmod:
  3972                           	opt callstack 0
  3973                           
  3974 ;; *************** function ___lwdiv *****************
  3975 ;; Defined at:
  3976 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  dividend        2    0[COMRAM] unsigned int 
  3979 ;;  divisor         2    2[COMRAM] unsigned int 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  quotient        2    4[COMRAM] unsigned int 
  3982 ;;  counter         1    6[COMRAM] unsigned char 
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  2    0[COMRAM] unsigned int 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3992 ;;      Params:         4       0       0       0       0       0       0
  3993 ;;      Locals:         3       0       0       0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0
  3995 ;;      Totals:         7       0       0       0       0       0       0
  3996 ;;Total ram usage:        7 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    1
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		_sprintf
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text25
  4007  0011BE                     __ptext25:
  4008                           	opt callstack 0
  4009  0011BE                     ___lwdiv:
  4010                           	opt callstack 27
  4011  0011BE  0E00               	movlw	0
  4012  0011C0  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  4013  0011C2  0E00               	movlw	0
  4014  0011C4  6E05               	movwf	___lwdiv@quotient^0,c
  4015  0011C6  5003               	movf	___lwdiv@divisor^0,w,c
  4016  0011C8  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4017  0011CA  B4D8               	btfsc	status,2,c
  4018  0011CC  EFEA  F008         	goto	u811
  4019  0011D0  EFEC  F008         	goto	u810
  4020  0011D4                     u811:
  4021  0011D4  EF14  F009         	goto	l835
  4022  0011D8                     u810:
  4023  0011D8  0E01               	movlw	1
  4024  0011DA  6E07               	movwf	___lwdiv@counter^0,c
  4025  0011DC  EFF4  F008         	goto	l2072
  4026  0011E0                     l2070:
  4027  0011E0  90D8               	bcf	status,0,c
  4028  0011E2  3603               	rlcf	___lwdiv@divisor^0,f,c
  4029  0011E4  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4030  0011E6  2A07               	incf	___lwdiv@counter^0,f,c
  4031  0011E8                     l2072:
  4032  0011E8  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  4033  0011EA  EFF9  F008         	goto	u821
  4034  0011EE  EFFB  F008         	goto	u820
  4035  0011F2                     u821:
  4036  0011F2  EFF0  F008         	goto	l2070
  4037  0011F6                     u820:
  4038  0011F6                     l2074:
  4039  0011F6  90D8               	bcf	status,0,c
  4040  0011F8  3605               	rlcf	___lwdiv@quotient^0,f,c
  4041  0011FA  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4042  0011FC  5003               	movf	___lwdiv@divisor^0,w,c
  4043  0011FE  5C01               	subwf	___lwdiv@dividend^0,w,c
  4044  001200  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4045  001202  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4046  001204  A0D8               	btfss	status,0,c
  4047  001206  EF07  F009         	goto	u831
  4048  00120A  EF09  F009         	goto	u830
  4049  00120E                     u831:
  4050  00120E  EF0E  F009         	goto	l2082
  4051  001212                     u830:
  4052  001212  5003               	movf	___lwdiv@divisor^0,w,c
  4053  001214  5E01               	subwf	___lwdiv@dividend^0,f,c
  4054  001216  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4055  001218  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4056  00121A  8005               	bsf	___lwdiv@quotient^0,0,c
  4057  00121C                     l2082:
  4058  00121C  90D8               	bcf	status,0,c
  4059  00121E  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4060  001220  3203               	rrcf	___lwdiv@divisor^0,f,c
  4061  001222  2E07               	decfsz	___lwdiv@counter^0,f,c
  4062  001224  EFFB  F008         	goto	l2074
  4063  001228                     l835:
  4064  001228  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4065  00122C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4066  001230  0012               	return		;funcret
  4067  001232                     __end_of___lwdiv:
  4068                           	opt callstack 0
  4069                           
  4070 ;; *************** function _afficheAliens *****************
  4071 ;; Defined at:
  4072 ;;		line 211 in file "main.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;		None
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  i               2    9[COMRAM] int 
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4086 ;;      Params:         0       0       0       0       0       0       0
  4087 ;;      Locals:         2       0       0       0       0       0       0
  4088 ;;      Temps:          0       0       0       0       0       0       0
  4089 ;;      Totals:         2       0       0       0       0       0       0
  4090 ;;Total ram usage:        2 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    6
  4093 ;; This function calls:
  4094 ;;		___wmul
  4095 ;;		_lcd_effaceAffichage
  4096 ;;		_lcd_gotoXY
  4097 ;;		_lcd_putMessage
  4098 ;; This function is called by:
  4099 ;;		_main
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text26
  4104  0014E8                     __ptext26:
  4105                           	opt callstack 0
  4106  0014E8                     _afficheAliens:
  4107                           	opt callstack 24
  4108  0014E8                     
  4109                           ;main.c: 213: lcd_effaceAffichage();
  4110  0014E8  EC76  F00C         	call	_lcd_effaceAffichage	;wreg free
  4111  0014EC                     
  4112                           ;main.c: 215: for(int i = 0 ; i < 4 ; i++)
  4113  0014EC  0E00               	movlw	0
  4114  0014EE  6E0B               	movwf	(afficheAliens@i+1)^0,c
  4115  0014F0  0E00               	movlw	0
  4116  0014F2  6E0A               	movwf	afficheAliens@i^0,c
  4117  0014F4                     l2422:
  4118                           
  4119                           ;main.c: 216: {;main.c: 217: lcd_gotoXY(1, i+1);
  4120  0014F4  280A               	incf	afficheAliens@i^0,w,c
  4121  0014F6  6E04               	movwf	lcd_gotoXY@y^0,c
  4122  0014F8  0E01               	movlw	1
  4123  0014FA  EC4E  F009         	call	_lcd_gotoXY
  4124  0014FE                     
  4125                           ;main.c: 218: lcd_putMessage(m_aliens[i]);
  4126  0014FE  C00A  F001         	movff	afficheAliens@i,___wmul@multiplier
  4127  001502  C00B  F002         	movff	afficheAliens@i+1,___wmul@multiplier+1
  4128  001506  0E00               	movlw	0
  4129  001508  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4130  00150A  0E15               	movlw	21
  4131  00150C  6E03               	movwf	___wmul@multiplicand^0,c
  4132  00150E  EC37  F00C         	call	___wmul	;wreg free
  4133  001512  0E60               	movlw	low _m_aliens
  4134  001514  2401               	addwf	?___wmul^0,w,c
  4135  001516  6E07               	movwf	lcd_putMessage@chaine^0,c
  4136  001518  0E00               	movlw	high _m_aliens
  4137  00151A  2002               	addwfc	(?___wmul+1)^0,w,c
  4138  00151C  6E08               	movwf	(lcd_putMessage@chaine+1)^0,c
  4139  00151E  ECA6  F00B         	call	_lcd_putMessage	;wreg free
  4140  001522  4A0A               	infsnz	afficheAliens@i^0,f,c
  4141  001524  2A0B               	incf	(afficheAliens@i+1)^0,f,c
  4142  001526  BE0B               	btfsc	(afficheAliens@i+1)^0,7,c
  4143  001528  EF9F  F00A         	goto	u1141
  4144  00152C  500B               	movf	(afficheAliens@i+1)^0,w,c
  4145  00152E  E109               	bnz	u1140
  4146  001530  0E04               	movlw	4
  4147  001532  5C0A               	subwf	afficheAliens@i^0,w,c
  4148  001534  A0D8               	btfss	status,0,c
  4149  001536  EF9F  F00A         	goto	u1141
  4150  00153A  EFA1  F00A         	goto	u1140
  4151  00153E                     u1141:
  4152  00153E  EF7A  F00A         	goto	l2422
  4153  001542                     u1140:
  4154  001542  0012               	return		;funcret
  4155  001544                     __end_of_afficheAliens:
  4156                           	opt callstack 0
  4157                           
  4158 ;; *************** function _lcd_putMessage *****************
  4159 ;; Defined at:
  4160 ;;		line 387 in file "Lcd4Lignes.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  chaine          2    6[COMRAM] PTR const unsigned char 
  4163 ;;		 -> affichePerdu@ptsChar(3), affichePerdu@gameOver(13), deplace@effaceJoueur(21), m_aliens(84), 
  4164 ;;		 -> main@afficheNom(21), 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  j               1    8[COMRAM] unsigned char 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4176 ;;      Params:         2       0       0       0       0       0       0
  4177 ;;      Locals:         1       0       0       0       0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0
  4179 ;;      Totals:         3       0       0       0       0       0       0
  4180 ;;Total ram usage:        3 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; Hardware stack levels required when called:    5
  4183 ;; This function calls:
  4184 ;;		_lcd_ecritChar
  4185 ;; This function is called by:
  4186 ;;		_main
  4187 ;;		_afficheAliens
  4188 ;;		_deplace
  4189 ;;		_affichePerdu
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text27
  4194  00174C                     __ptext27:
  4195                           	opt callstack 0
  4196  00174C                     _lcd_putMessage:
  4197                           	opt callstack 25
  4198  00174C                     
  4199                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  4200  00174C  0E00               	movlw	0
  4201  00174E  6E09               	movwf	lcd_putMessage@j^0,c
  4202  001750  EFB4  F00B         	goto	l2122
  4203  001754                     l2118:
  4204                           
  4205                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  4206  001754  5009               	movf	lcd_putMessage@j^0,w,c
  4207  001756  2407               	addwf	lcd_putMessage@chaine^0,w,c
  4208  001758  6ED9               	movwf	fsr2l,c
  4209  00175A  0E00               	movlw	0
  4210  00175C  2008               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
  4211  00175E  6EDA               	movwf	fsr2h,c
  4212  001760  50DF               	movf	indf2,w,c
  4213  001762  EC1F  F00B         	call	_lcd_ecritChar
  4214  001766  2A09               	incf	lcd_putMessage@j^0,f,c
  4215  001768                     l2122:
  4216  001768  5009               	movf	lcd_putMessage@j^0,w,c
  4217  00176A  2407               	addwf	lcd_putMessage@chaine^0,w,c
  4218  00176C  6ED9               	movwf	fsr2l,c
  4219  00176E  0E00               	movlw	0
  4220  001770  2008               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
  4221  001772  6EDA               	movwf	fsr2h,c
  4222  001774  50DF               	movf	indf2,w,c
  4223  001776  A4D8               	btfss	status,2,c
  4224  001778  EFC0  F00B         	goto	u871
  4225  00177C  EFC2  F00B         	goto	u870
  4226  001780                     u871:
  4227  001780  EFAA  F00B         	goto	l2118
  4228  001784                     u870:
  4229  001784  0012               	return		;funcret
  4230  001786                     __end_of_lcd_putMessage:
  4231                           	opt callstack 0
  4232                           
  4233 ;; *************** function _lcd_ecritChar *****************
  4234 ;; Defined at:
  4235 ;;		line 359 in file "Lcd4Lignes.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  car             1    wreg     unsigned char 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  car             1    3[COMRAM] unsigned char 
  4240 ;;  posRam          1    4[COMRAM] unsigned char 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4250 ;;      Params:         0       0       0       0       0       0       0
  4251 ;;      Locals:         2       0       0       0       0       0       0
  4252 ;;      Temps:          0       0       0       0       0       0       0
  4253 ;;      Totals:         2       0       0       0       0       0       0
  4254 ;;Total ram usage:        2 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    4
  4257 ;; This function calls:
  4258 ;;		_lcd_wrCom
  4259 ;;		_lcd_wrData
  4260 ;; This function is called by:
  4261 ;;		_main
  4262 ;;		_deplace
  4263 ;;		_feu
  4264 ;;		_lcd_putMessage
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text28
  4269  00163E                     __ptext28:
  4270                           	opt callstack 0
  4271  00163E                     _lcd_ecritChar:
  4272                           	opt callstack 25
  4273                           
  4274                           ;incstack = 0
  4275                           ;lcd_ecritChar@car stored from wreg
  4276  00163E  6E04               	movwf	lcd_ecritChar@car^0,c
  4277  001640                     
  4278                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  4279  001640  5004               	movf	lcd_ecritChar@car^0,w,c
  4280  001642  ECF8  F00B         	call	_lcd_wrData
  4281  001646  6E05               	movwf	lcd_ecritChar@posRam^0,c
  4282                           
  4283                           ;Lcd4Lignes.c: 364: switch(posRam)
  4284  001648  EF35  F00B         	goto	l2032
  4285  00164C                     l2024:
  4286                           
  4287                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  4288  00164C  0EC0               	movlw	192
  4289  00164E  ECE5  F009         	call	_lcd_wrCom
  4290                           
  4291                           ;Lcd4Lignes.c: 368: break;
  4292  001652  EF44  F00B         	goto	l245
  4293  001656                     l2026:
  4294                           
  4295                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  4296  001656  0E94               	movlw	148
  4297  001658  ECE5  F009         	call	_lcd_wrCom
  4298                           
  4299                           ;Lcd4Lignes.c: 371: break;
  4300  00165C  EF44  F00B         	goto	l245
  4301  001660                     l2028:
  4302                           
  4303                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  4304  001660  0ED4               	movlw	212
  4305  001662  ECE5  F009         	call	_lcd_wrCom
  4306                           
  4307                           ;Lcd4Lignes.c: 374: break;
  4308  001666  EF44  F00B         	goto	l245
  4309  00166A                     l2032:
  4310  00166A  5005               	movf	lcd_ecritChar@posRam^0,w,c
  4311                           
  4312                           ; Switch size 1, requested type "simple"
  4313                           ; Number of cases is 3, Range of values is 148 to 212
  4314                           ; switch strategies available:
  4315                           ; Name         Instructions Cycles
  4316                           ; simple_byte           10     6 (average)
  4317                           ;	Chosen strategy is simple_byte
  4318  00166C  0A94               	xorlw	148	; case 148
  4319  00166E  B4D8               	btfsc	status,2,c
  4320  001670  EF26  F00B         	goto	l2024
  4321  001674  0A54               	xorlw	84	; case 192
  4322  001676  B4D8               	btfsc	status,2,c
  4323  001678  EF30  F00B         	goto	l2028
  4324  00167C  0A14               	xorlw	20	; case 212
  4325  00167E  B4D8               	btfsc	status,2,c
  4326  001680  EF2B  F00B         	goto	l2026
  4327  001684  EF44  F00B         	goto	l245
  4328  001688                     l245:
  4329  001688  0012               	return		;funcret
  4330  00168A                     __end_of_lcd_ecritChar:
  4331                           	opt callstack 0
  4332                           
  4333 ;; *************** function _lcd_wrData *****************
  4334 ;; Defined at:
  4335 ;;		line 188 in file "Lcd4Lignes.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  caractere       1    wreg     unsigned char 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  caractere       1    2[COMRAM] unsigned char 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      unsigned char 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0, cstack
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4349 ;;      Params:         0       0       0       0       0       0       0
  4350 ;;      Locals:         1       0       0       0       0       0       0
  4351 ;;      Temps:          0       0       0       0       0       0       0
  4352 ;;      Totals:         1       0       0       0       0       0       0
  4353 ;;Total ram usage:        1 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    3
  4356 ;; This function calls:
  4357 ;;		_lcd_busy
  4358 ;;		_lcd_ecrireDonnees
  4359 ;;		_lcd_strobeEnableBit
  4360 ;; This function is called by:
  4361 ;;		_lcd_ecritChar
  4362 ;;		_lcd_initCGRam
  4363 ;;		_lcd_effaceChar
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text29
  4368  0017F0                     __ptext29:
  4369                           	opt callstack 0
  4370  0017F0                     _lcd_wrData:
  4371                           	opt callstack 25
  4372                           
  4373                           ;incstack = 0
  4374                           ;lcd_wrData@caractere stored from wreg
  4375  0017F0  6E03               	movwf	lcd_wrData@caractere^0,c
  4376  0017F2                     
  4377                           ;Lcd4Lignes.c: 190: lcd_busy();
  4378  0017F2  ECC3  F00B         	call	_lcd_busy	;wreg free
  4379  0017F6                     
  4380                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  4381  0017F6  0E00               	movlw	0
  4382  0017F8  6E95               	movwf	149,c	;volatile
  4383  0017FA                     
  4384                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  4385  0017FA  8080               	bsf	128,0,c	;volatile
  4386  0017FC                     
  4387                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  4388  0017FC  9280               	bcf	128,1,c	;volatile
  4389  0017FE                     
  4390                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  4391  0017FE  3803               	swapf	lcd_wrData@caractere^0,w,c
  4392  001800  0B0F               	andlw	15
  4393  001802  EC65  F00C         	call	_lcd_ecrireDonnees
  4394  001806                     
  4395                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  4396  001806  EC85  F00C         	call	_lcd_strobeEnableBit	;wreg free
  4397  00180A                     
  4398                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  4399  00180A  5003               	movf	lcd_wrData@caractere^0,w,c
  4400  00180C  EC65  F00C         	call	_lcd_ecrireDonnees
  4401  001810                     
  4402                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  4403  001810  EC85  F00C         	call	_lcd_strobeEnableBit	;wreg free
  4404  001814                     
  4405                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  4406  001814  0E0F               	movlw	15
  4407  001816  6E95               	movwf	149,c	;volatile
  4408  001818                     
  4409                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  4410                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  4411  001818  ECC3  F00B         	call	_lcd_busy	;wreg free
  4412  00181C  0012               	return		;funcret
  4413  00181E                     __end_of_lcd_wrData:
  4414                           	opt callstack 0
  4415                           
  4416 ;; *************** function _lcd_gotoXY *****************
  4417 ;; Defined at:
  4418 ;;		line 314 in file "Lcd4Lignes.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;  x               1    wreg     unsigned char 
  4421 ;;  y               1    3[COMRAM] unsigned char 
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;  x               1    4[COMRAM] unsigned char 
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1    wreg      void 
  4426 ;; Registers used:
  4427 ;;		wreg, status,2, status,0, cstack
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4433 ;;      Params:         1       0       0       0       0       0       0
  4434 ;;      Locals:         1       0       0       0       0       0       0
  4435 ;;      Temps:          0       0       0       0       0       0       0
  4436 ;;      Totals:         2       0       0       0       0       0       0
  4437 ;;Total ram usage:        2 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    4
  4440 ;; This function calls:
  4441 ;;		_lcd_wrCom
  4442 ;; This function is called by:
  4443 ;;		_main
  4444 ;;		_afficheAliens
  4445 ;;		_deplace
  4446 ;;		_feu
  4447 ;;		_affichePerdu
  4448 ;;		_lcd_effaceLigne
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text30
  4453  00129C                     __ptext30:
  4454                           	opt callstack 0
  4455  00129C                     _lcd_gotoXY:
  4456                           	opt callstack 26
  4457                           
  4458                           ;incstack = 0
  4459                           ;lcd_gotoXY@x stored from wreg
  4460  00129C  6E05               	movwf	lcd_gotoXY@x^0,c
  4461  00129E                     
  4462                           ;Lcd4Lignes.c: 316: switch(y)
  4463  00129E  EF6D  F009         	goto	l2114
  4464  0012A2                     l2104:
  4465                           
  4466                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  4467  0012A2  5005               	movf	lcd_gotoXY@x^0,w,c
  4468  0012A4  0F7F               	addlw	127
  4469  0012A6  0980               	iorlw	128
  4470  0012A8  ECE5  F009         	call	_lcd_wrCom
  4471                           
  4472                           ;Lcd4Lignes.c: 320: break;
  4473  0012AC  EF80  F009         	goto	l234
  4474  0012B0                     l2106:
  4475                           
  4476                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  4477  0012B0  5005               	movf	lcd_gotoXY@x^0,w,c
  4478  0012B2  0FBF               	addlw	191
  4479  0012B4  0980               	iorlw	128
  4480  0012B6  ECE5  F009         	call	_lcd_wrCom
  4481                           
  4482                           ;Lcd4Lignes.c: 323: break;
  4483  0012BA  EF80  F009         	goto	l234
  4484  0012BE                     l2108:
  4485                           
  4486                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  4487  0012BE  5005               	movf	lcd_gotoXY@x^0,w,c
  4488  0012C0  0F93               	addlw	147
  4489  0012C2  0980               	iorlw	128
  4490  0012C4  ECE5  F009         	call	_lcd_wrCom
  4491                           
  4492                           ;Lcd4Lignes.c: 326: break;
  4493  0012C8  EF80  F009         	goto	l234
  4494  0012CC                     l2110:
  4495                           
  4496                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  4497  0012CC  5005               	movf	lcd_gotoXY@x^0,w,c
  4498  0012CE  0FD3               	addlw	211
  4499  0012D0  0980               	iorlw	128
  4500  0012D2  ECE5  F009         	call	_lcd_wrCom
  4501                           
  4502                           ;Lcd4Lignes.c: 329: break;
  4503  0012D6  EF80  F009         	goto	l234
  4504  0012DA                     l2114:
  4505  0012DA  5004               	movf	lcd_gotoXY@y^0,w,c
  4506                           
  4507                           ; Switch size 1, requested type "simple"
  4508                           ; Number of cases is 4, Range of values is 1 to 4
  4509                           ; switch strategies available:
  4510                           ; Name         Instructions Cycles
  4511                           ; simple_byte           13     7 (average)
  4512                           ;	Chosen strategy is simple_byte
  4513  0012DC  0A01               	xorlw	1	; case 1
  4514  0012DE  B4D8               	btfsc	status,2,c
  4515  0012E0  EF51  F009         	goto	l2104
  4516  0012E4  0A03               	xorlw	3	; case 2
  4517  0012E6  B4D8               	btfsc	status,2,c
  4518  0012E8  EF58  F009         	goto	l2106
  4519  0012EC  0A01               	xorlw	1	; case 3
  4520  0012EE  B4D8               	btfsc	status,2,c
  4521  0012F0  EF5F  F009         	goto	l2108
  4522  0012F4  0A07               	xorlw	7	; case 4
  4523  0012F6  B4D8               	btfsc	status,2,c
  4524  0012F8  EF66  F009         	goto	l2110
  4525  0012FC  EF80  F009         	goto	l234
  4526  001300                     l234:
  4527  001300  0012               	return		;funcret
  4528  001302                     __end_of_lcd_gotoXY:
  4529                           	opt callstack 0
  4530                           
  4531 ;; *************** function _lcd_effaceAffichage *****************
  4532 ;; Defined at:
  4533 ;;		line 276 in file "Lcd4Lignes.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;		None
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;		None
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4547 ;;      Params:         0       0       0       0       0       0       0
  4548 ;;      Locals:         0       0       0       0       0       0       0
  4549 ;;      Temps:          0       0       0       0       0       0       0
  4550 ;;      Totals:         0       0       0       0       0       0       0
  4551 ;;Total ram usage:        0 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    4
  4554 ;; This function calls:
  4555 ;;		_lcd_wrCom
  4556 ;; This function is called by:
  4557 ;;		_afficheAliens
  4558 ;;		_videAliens
  4559 ;;		_affichePerdu
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text31
  4564  0018EC                     __ptext31:
  4565                           	opt callstack 0
  4566  0018EC                     _lcd_effaceAffichage:
  4567                           	opt callstack 25
  4568  0018EC                     
  4569                           ;Lcd4Lignes.c: 278: lcd_wrCom(0x01);
  4570  0018EC  0E01               	movlw	1
  4571  0018EE  ECE5  F009         	call	_lcd_wrCom
  4572                           
  4573                           ;Lcd4Lignes.c: 279: lcd_wrCom(0x80);
  4574  0018F2  0E80               	movlw	128
  4575  0018F4  ECE5  F009         	call	_lcd_wrCom
  4576  0018F8  0012               	return		;funcret
  4577  0018FA                     __end_of_lcd_effaceAffichage:
  4578                           	opt callstack 0
  4579                           
  4580 ;; *************** function _lcd_wrCom *****************
  4581 ;; Defined at:
  4582 ;;		line 156 in file "Lcd4Lignes.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;  commande        1    wreg     unsigned char 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  commande        1    2[COMRAM] unsigned char 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      unsigned char 
  4589 ;; Registers used:
  4590 ;;		wreg, status,2, status,0, cstack
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4596 ;;      Params:         0       0       0       0       0       0       0
  4597 ;;      Locals:         1       0       0       0       0       0       0
  4598 ;;      Temps:          0       0       0       0       0       0       0
  4599 ;;      Totals:         1       0       0       0       0       0       0
  4600 ;;Total ram usage:        1 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    3
  4603 ;; This function calls:
  4604 ;;		_lcd_busy
  4605 ;;		_lcd_ecrireDonnees
  4606 ;;		_lcd_strobeEnableBit
  4607 ;; This function is called by:
  4608 ;;		_lcd_init
  4609 ;;		_lcd_effaceAffichage
  4610 ;;		_lcd_curseurHome
  4611 ;;		_lcd_gotoXY
  4612 ;;		_lcd_ecritChar
  4613 ;;		_lcd_cacheCurseur
  4614 ;;		_lcd_initCGRam
  4615 ;;		_lcd_montreCurseur
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           	psect	text32
  4620  0013CA                     __ptext32:
  4621                           	opt callstack 0
  4622  0013CA                     _lcd_wrCom:
  4623                           	opt callstack 25
  4624                           
  4625                           ;incstack = 0
  4626                           ;lcd_wrCom@commande stored from wreg
  4627  0013CA  6E03               	movwf	lcd_wrCom@commande^0,c
  4628  0013CC                     
  4629                           ;Lcd4Lignes.c: 158: lcd_busy();
  4630  0013CC  ECC3  F00B         	call	_lcd_busy	;wreg free
  4631  0013D0                     
  4632                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  4633  0013D0  0E00               	movlw	0
  4634  0013D2  6E95               	movwf	149,c	;volatile
  4635  0013D4                     
  4636                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  4637  0013D4  9080               	bcf	128,0,c	;volatile
  4638  0013D6                     
  4639                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  4640  0013D6  9280               	bcf	128,1,c	;volatile
  4641  0013D8                     
  4642                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  4643  0013D8  3803               	swapf	lcd_wrCom@commande^0,w,c
  4644  0013DA  0B0F               	andlw	15
  4645  0013DC  EC65  F00C         	call	_lcd_ecrireDonnees
  4646  0013E0                     
  4647                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  4648  0013E0  EC85  F00C         	call	_lcd_strobeEnableBit	;wreg free
  4649  0013E4                     
  4650                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  4651  0013E4  5003               	movf	lcd_wrCom@commande^0,w,c
  4652  0013E6  EC65  F00C         	call	_lcd_ecrireDonnees
  4653  0013EA                     
  4654                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  4655  0013EA  EC85  F00C         	call	_lcd_strobeEnableBit	;wreg free
  4656  0013EE                     
  4657                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  4658  0013EE  0E03               	movlw	3
  4659  0013F0                     u1517:
  4660  0013F0  2EE8               	decfsz	wreg,f,c
  4661  0013F2  D7FE               	bra	u1517
  4662  0013F4  F000               	nop	
  4663  0013F6                     
  4664                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  4665  0013F6  0403               	decf	lcd_wrCom@commande^0,w,c
  4666  0013F8  B4D8               	btfsc	status,2,c
  4667  0013FA  EF01  F00A         	goto	u751
  4668  0013FE  EF03  F00A         	goto	u750
  4669  001402                     u751:
  4670  001402  EF0C  F00A         	goto	l1984
  4671  001406                     u750:
  4672  001406  0E02               	movlw	2
  4673  001408  1803               	xorwf	lcd_wrCom@commande^0,w,c
  4674  00140A  A4D8               	btfss	status,2,c
  4675  00140C  EF0A  F00A         	goto	u761
  4676  001410  EF0C  F00A         	goto	u760
  4677  001414                     u761:
  4678  001414  EF11  F00A         	goto	l1986
  4679  001418                     u760:
  4680  001418                     l1984:
  4681                           
  4682                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  4683  001418  0EA6               	movlw	166
  4684  00141A                     u1527:
  4685  00141A  2EE8               	decfsz	wreg,f,c
  4686  00141C  D7FE               	bra	u1527
  4687  00141E  F000 F000          	nop2	
  4688  001422                     l1986:
  4689                           
  4690                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  4691  001422  0E0F               	movlw	15
  4692  001424  6E95               	movwf	149,c	;volatile
  4693  001426                     
  4694                           ;Lcd4Lignes.c: 179: return(lcd_busy());;	Return value of _lcd_wrCom is never used
  4695  001426  ECC3  F00B         	call	_lcd_busy	;wreg free
  4696  00142A  0012               	return		;funcret
  4697  00142C                     __end_of_lcd_wrCom:
  4698                           	opt callstack 0
  4699                           
  4700 ;; *************** function _lcd_strobeEnableBit *****************
  4701 ;; Defined at:
  4702 ;;		line 431 in file "Lcd4Lignes.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;		None
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;		None
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  1    wreg      void 
  4709 ;; Registers used:
  4710 ;;		None
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4716 ;;      Params:         0       0       0       0       0       0       0
  4717 ;;      Locals:         0       0       0       0       0       0       0
  4718 ;;      Temps:          0       0       0       0       0       0       0
  4719 ;;      Totals:         0       0       0       0       0       0       0
  4720 ;;Total ram usage:        0 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    1
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_lcd_wrCom
  4727 ;;		_lcd_wrData
  4728 ;;		_lcd_resetSequence
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text33
  4733  00190A                     __ptext33:
  4734                           	opt callstack 0
  4735  00190A                     _lcd_strobeEnableBit:
  4736                           	opt callstack 26
  4737  00190A                     
  4738                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  4739  00190A  8480               	bsf	128,2,c	;volatile
  4740                           
  4741                           ;Lcd4Lignes.c: 434: __nop();
  4742  00190C  F000               	nop	
  4743                           
  4744                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  4745  00190E  9480               	bcf	128,2,c	;volatile
  4746  001910  0012               	return		;funcret
  4747  001912                     __end_of_lcd_strobeEnableBit:
  4748                           	opt callstack 0
  4749                           
  4750 ;; *************** function _lcd_ecrireDonnees *****************
  4751 ;; Defined at:
  4752 ;;		line 107 in file "Lcd4Lignes.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  donnee          1    wreg     unsigned char 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  donnee          1    1[COMRAM] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      void 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4766 ;;      Params:         0       0       0       0       0       0       0
  4767 ;;      Locals:         1       0       0       0       0       0       0
  4768 ;;      Temps:          1       0       0       0       0       0       0
  4769 ;;      Totals:         2       0       0       0       0       0       0
  4770 ;;Total ram usage:        2 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    1
  4773 ;; This function calls:
  4774 ;;		Nothing
  4775 ;; This function is called by:
  4776 ;;		_lcd_wrCom
  4777 ;;		_lcd_wrData
  4778 ;;		_lcd_resetSequence
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text34
  4783  0018CA                     __ptext34:
  4784                           	opt callstack 0
  4785  0018CA                     _lcd_ecrireDonnees:
  4786                           	opt callstack 26
  4787                           
  4788                           ;incstack = 0
  4789                           ;lcd_ecrireDonnees@donnee stored from wreg
  4790  0018CA  6E02               	movwf	lcd_ecrireDonnees@donnee^0,c
  4791  0018CC                     
  4792                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  4793  0018CC  CF83 F001          	movff	3971,??_lcd_ecrireDonnees	;volatile
  4794  0018D0  0EF0               	movlw	240
  4795  0018D2  1601               	andwf	??_lcd_ecrireDonnees^0,f,c
  4796  0018D4  5002               	movf	lcd_ecrireDonnees@donnee^0,w,c
  4797  0018D6  0B0F               	andlw	15
  4798  0018D8  1001               	iorwf	??_lcd_ecrireDonnees^0,w,c
  4799  0018DA  6E83               	movwf	131,c	;volatile
  4800  0018DC  0012               	return		;funcret
  4801  0018DE                     __end_of_lcd_ecrireDonnees:
  4802                           	opt callstack 0
  4803                           
  4804 ;; *************** function _lcd_busy *****************
  4805 ;; Defined at:
  4806 ;;		line 124 in file "Lcd4Lignes.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  adresse         1    1[COMRAM] unsigned char 
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      unsigned char 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4820 ;;      Params:         0       0       0       0       0       0       0
  4821 ;;      Locals:         1       0       0       0       0       0       0
  4822 ;;      Temps:          1       0       0       0       0       0       0
  4823 ;;      Totals:         2       0       0       0       0       0       0
  4824 ;;Total ram usage:        2 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    2
  4827 ;; This function calls:
  4828 ;;		_lcd_lireDonnees
  4829 ;; This function is called by:
  4830 ;;		_lcd_wrCom
  4831 ;;		_lcd_wrData
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text35
  4836  001786                     __ptext35:
  4837                           	opt callstack 0
  4838  001786                     _lcd_busy:
  4839                           	opt callstack 25
  4840  001786                     
  4841                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  4842  001786  9080               	bcf	128,0,c	;volatile
  4843                           
  4844                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  4845  001788  8280               	bsf	128,1,c	;volatile
  4846  00178A                     l196:
  4847                           
  4848                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  4849  00178A  8480               	bsf	128,2,c	;volatile
  4850                           
  4851                           ;Lcd4Lignes.c: 134: __nop();
  4852  00178C  F000               	nop	
  4853  00178E                     
  4854                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  4855  00178E  EC89  F00C         	call	_lcd_lireDonnees	;wreg free
  4856  001792  6E01               	movwf	??_lcd_busy^0,c
  4857  001794  3801               	swapf	??_lcd_busy^0,w,c
  4858  001796  0BF0               	andlw	240
  4859  001798  6E02               	movwf	lcd_busy@adresse^0,c
  4860  00179A                     
  4861                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  4862  00179A  9480               	bcf	128,2,c	;volatile
  4863  00179C                     
  4864                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  4865  00179C  8480               	bsf	128,2,c	;volatile
  4866  00179E                     
  4867                           ;Lcd4Lignes.c: 139: __nop();
  4868  00179E  F000               	nop	
  4869                           
  4870                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  4871  0017A0  EC89  F00C         	call	_lcd_lireDonnees	;wreg free
  4872  0017A4  1202               	iorwf	lcd_busy@adresse^0,f,c
  4873  0017A6                     
  4874                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  4875  0017A6  9480               	bcf	128,2,c	;volatile
  4876  0017A8                     
  4877                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  4878  0017A8  BE02               	btfsc	lcd_busy@adresse^0,7,c
  4879  0017AA  EFD9  F00B         	goto	u741
  4880  0017AE  EFDB  F00B         	goto	u740
  4881  0017B2                     u741:
  4882  0017B2  EFC5  F00B         	goto	l196
  4883  0017B6                     u740:
  4884  0017B6                     
  4885                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  4886  0017B6  9280               	bcf	128,1,c	;volatile
  4887  0017B8                     
  4888                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  4889  0017B8  5002               	movf	lcd_busy@adresse^0,w,c
  4890  0017BA  0B7F               	andlw	127
  4891  0017BC  0012               	return		;funcret
  4892  0017BE                     __end_of_lcd_busy:
  4893                           	opt callstack 0
  4894                           
  4895 ;; *************** function _lcd_lireDonnees *****************
  4896 ;; Defined at:
  4897 ;;		line 93 in file "Lcd4Lignes.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;		None
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      unsigned char 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4911 ;;      Params:         0       0       0       0       0       0       0
  4912 ;;      Locals:         0       0       0       0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0
  4914 ;;      Totals:         0       0       0       0       0       0       0
  4915 ;;Total ram usage:        0 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    1
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_lcd_busy
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	text36
  4926  001912                     __ptext36:
  4927                           	opt callstack 0
  4928  001912                     _lcd_lireDonnees:
  4929                           	opt callstack 25
  4930  001912                     
  4931                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  4932  001912  5083               	movf	131,w,c	;volatile
  4933  001914  0B0F               	andlw	15
  4934  001916  0012               	return		;funcret
  4935  001918                     __end_of_lcd_lireDonnees:
  4936                           	opt callstack 0
  4937                           
  4938 ;; *************** function ___wmul *****************
  4939 ;; Defined at:
  4940 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  multiplier      2    0[COMRAM] unsigned int 
  4943 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;  product         2    4[COMRAM] unsigned int 
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  2    0[COMRAM] unsigned int 
  4948 ;; Registers used:
  4949 ;;		wreg, status,2, status,0, prodl, prodh
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4955 ;;      Params:         4       0       0       0       0       0       0
  4956 ;;      Locals:         2       0       0       0       0       0       0
  4957 ;;      Temps:          0       0       0       0       0       0       0
  4958 ;;      Totals:         6       0       0       0       0       0       0
  4959 ;;Total ram usage:        6 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; Hardware stack levels required when called:    1
  4962 ;; This function calls:
  4963 ;;		Nothing
  4964 ;; This function is called by:
  4965 ;;		_afficheAliens
  4966 ;;		_videAliens
  4967 ;;		_feu
  4968 ;;		_sprintf
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text37
  4973  00186E                     __ptext37:
  4974                           	opt callstack 0
  4975  00186E                     ___wmul:
  4976                           	opt callstack 28
  4977  00186E  5001               	movf	___wmul@multiplier^0,w,c
  4978  001870  0203               	mulwf	___wmul@multiplicand^0,c
  4979  001872  CFF3 F005          	movff	prodl,___wmul@product
  4980  001876  CFF4 F006          	movff	prodh,___wmul@product+1
  4981  00187A  5001               	movf	___wmul@multiplier^0,w,c
  4982  00187C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4983  00187E  50F3               	movf	243,w,c
  4984  001880  2606               	addwf	(___wmul@product+1)^0,f,c
  4985  001882  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4986  001884  0203               	mulwf	___wmul@multiplicand^0,c
  4987  001886  50F3               	movf	243,w,c
  4988  001888  2606               	addwf	(___wmul@product+1)^0,f,c
  4989  00188A  C005  F001         	movff	___wmul@product,?___wmul
  4990  00188E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4991  001892  0012               	return		;funcret
  4992  001894                     __end_of___wmul:
  4993                           	opt callstack 0
  4994                           
  4995 ;; *************** function _high_isr *****************
  4996 ;; Defined at:
  4997 ;;		line 434 in file "main.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;		None
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5011 ;;      Params:         0       0       0       0       0       0       0
  5012 ;;      Locals:         0       0       0       0       0       0       0
  5013 ;;      Temps:          0       0       0       0       0       0       0
  5014 ;;      Totals:         0       0       0       0       0       0       0
  5015 ;;Total ram usage:        0 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		Interrupt level 2
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           	psect	intcode
  5025  000008                     __pintcode:
  5026                           	opt callstack 0
  5027  000008                     _high_isr:
  5028                           	opt callstack 24
  5029                           
  5030                           ;incstack = 0
  5031  000008  8250               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5032  00000A                     
  5033                           ;main.c: 436: if (INTCONbits.TMR0IF)
  5034  00000A  A4F2               	btfss	242,2,c	;volatile
  5035  00000C  EF0A  F000         	goto	i2u142_41
  5036  000010  EF0C  F000         	goto	i2u142_40
  5037  000014                     i2u142_41:
  5038  000014  EF14  F000         	goto	i2l171
  5039  000018                     i2u142_40:
  5040  000018                     
  5041                           ;main.c: 437: {;main.c: 438: INTCONbits.TMR0IF = 0;
  5042  000018  94F2               	bcf	242,2,c	;volatile
  5043  00001A                     
  5044                           ;main.c: 440: TMR0 = 0x0000;
  5045  00001A  0E00               	movlw	0
  5046  00001C  6ED7               	movwf	215,c	;volatile
  5047  00001E  0E00               	movlw	0
  5048  000020  6ED6               	movwf	214,c	;volatile
  5049                           
  5050                           ;main.c: 441: m_tempsDAfficher = 1;
  5051  000022  0E01               	movlw	1
  5052  000024  0100               	movlb	0	; () banked
  5053  000026  6FCF               	movwf	_m_tempsDAfficher& (0+255),b
  5054  000028                     i2l171:
  5055  000028  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5056  00002A  0011               	retfie		f
  5057  00002C                     __end_of_high_isr:
  5058                           	opt callstack 0
  5059                           
  5060                           	psect	rparam
  5061  0000                     
  5062                           	psect	temp
  5063  000050                     btemp:
  5064                           	opt callstack 0
  5065  000050                     	ds	1
  5066  0000                     int$flags	set	btemp
  5067  0000                     wtemp8	set	btemp+1
  5068  0000                     ttemp5	set	btemp+1
  5069  0000                     ttemp6	set	btemp+4
  5070  0000                     ttemp7	set	btemp+8
  5071                           tosu	equ	0xFFF
  5072                           tosh	equ	0xFFE
  5073                           tosl	equ	0xFFD
  5074                           stkptr	equ	0xFFC
  5075                           pclatu	equ	0xFFB
  5076                           pclath	equ	0xFFA
  5077                           pcl	equ	0xFF9
  5078                           tblptru	equ	0xFF8
  5079                           tblptrh	equ	0xFF7
  5080                           tblptrl	equ	0xFF6
  5081                           tablat	equ	0xFF5
  5082                           prodh	equ	0xFF4
  5083                           prodl	equ	0xFF3
  5084                           indf0	equ	0xFEF
  5085                           postinc0	equ	0xFEE
  5086                           postdec0	equ	0xFED
  5087                           preinc0	equ	0xFEC
  5088                           plusw0	equ	0xFEB
  5089                           fsr0h	equ	0xFEA
  5090                           fsr0l	equ	0xFE9
  5091                           wreg	equ	0xFE8
  5092                           indf1	equ	0xFE7
  5093                           postinc1	equ	0xFE6
  5094                           postdec1	equ	0xFE5
  5095                           preinc1	equ	0xFE4
  5096                           plusw1	equ	0xFE3
  5097                           fsr1h	equ	0xFE2
  5098                           fsr1l	equ	0xFE1
  5099                           bsr	equ	0xFE0
  5100                           indf2	equ	0xFDF
  5101                           postinc2	equ	0xFDE
  5102                           postdec2	equ	0xFDD
  5103                           preinc2	equ	0xFDC
  5104                           plusw2	equ	0xFDB
  5105                           fsr2h	equ	0xFDA
  5106                           fsr2l	equ	0xFD9
  5107                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    86
    Data        152
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      79
    BANK0           160     27     112
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK0[84]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK0[84]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK0[84]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK0[84]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 21
		 -> perdu@safe(COMRAM[21]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 3
		 -> affichePerdu@ptsChar(COMRAM[3]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 84
		 -> affichePerdu@ptsChar(COMRAM[3]), affichePerdu@gameOver(COMRAM[13]), deplace@effaceJoueur(COMRAM[21]), m_aliens(BANK0[84]), 
		 -> main@afficheNom(BANK0[21]), 

    feu@pts	PTR int  size(2) Largest target is 2
		 -> main@pointage(BANK0[2]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 2
		 -> main@posX(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 84
		 -> m_aliens(BANK0[84]), 


Critical Paths under _main in COMRAM

    _main->_nouveauxAliens
    _videAliens->___wmul
    _perdu->_strcmp
    _nouveauxAliens->___awmod
    _rand->___lmul
    ___awmod->_rand
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _lcd_cacheCurseur->_lcd_wrCom
    _initialisation->_srand
    _feu->___wmul
    _deplace->_lcd_putMessage
    _affichePerdu->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _afficheAliens->_lcd_putMessage
    _lcd_putMessage->___wmul
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_effaceAffichage->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   22530
                                             71 COMRAM     2     2      0
                                              0 BANK0     27    27      0
                      _afficheAliens
                       _affichePerdu
                            _deplace
                                _feu
                         _init_serie
                     _initialisation
                   _lcd_cacheCurseur
                      _lcd_ecritChar
                         _lcd_gotoXY
                           _lcd_init
                     _lcd_putMessage
                     _nouveauxAliens
                              _perdu
                           _testEtat
                         _videAliens
 ---------------------------------------------------------------------------------
 (1) _videAliens                                           6     6      0    1667
                                              6 COMRAM     6     6      0
                             ___wmul
                _lcd_effaceAffichage
 ---------------------------------------------------------------------------------
 (1) _testEtat                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _perdu                                               21    21      0     268
                                              7 COMRAM    21    21      0
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               7     3      4     243
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _nouveauxAliens                                      51    51      0    1778
                                             20 COMRAM    51    51      0
                            ___awmod
                               _rand
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     531
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                             14 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 COMRAM     1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 COMRAM     4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_cacheCurseur                                     0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0      98
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _feu                                                 10     8      2    3460
                                              6 COMRAM    10     8      2
                             ___wmul
                      _lcd_ecritChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (1) _deplace                                             26    24      2    2716
                                              9 COMRAM    26    24      2
                          _getAnalog
                      _lcd_ecritChar
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _affichePerdu                                        20    18      2    5364
                                             31 COMRAM    20    18      2
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             28    22      6    2970
                                             12 COMRAM    19    13      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _afficheAliens                                        2     2      0    3658
                                              9 COMRAM     2     2      0
                             ___wmul
                _lcd_effaceAffichage
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       3     1      2     783
                                              6 COMRAM     3     1      2
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 COMRAM     2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 COMRAM     1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoXY                                           2     1      1    1254
                                              3 COMRAM     2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 COMRAM     1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 COMRAM     2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1375
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheAliens
     ___wmul
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _affichePerdu
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _deplace
     _getAnalog
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _feu
     ___wmul
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _init_serie
   _initialisation
     _srand
   _lcd_cacheCurseur
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_ecritChar
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrData
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_gotoXY
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     ___wmul (ARG)
     _lcd_ecritChar (ARG)
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _nouveauxAliens
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul
     _strcpy
   _perdu
     _strcmp
   _testEtat
   _videAliens
     ___wmul
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1B      70       5       70.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      4F       1       84.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FF      15        0.0%
DATA                 0      0      FF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 08 16:12:22 2019

 nouveauxAliens@verifPosition 0044           ___wmul@multiplicand 0003                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
__size_of_lcd_strobeEnableBit 0008                           l101 18C8                           l111 0E3C  
                         l210 1364                           l123 1146                           l204 142A  
                         l116 1542                           l133 0F48                           l213 1844  
                         l142 0B6C                           l207 181C                           l216 18F8  
                         l129 0ED0                           l234 1300                           l162 186C  
                         l251 1784                           l219 1900                           l156 100C  
                         l148 16D0                           l245 1688                           l165 15EA  
                         l190 1916                           l254 1908                           l159 185C  
                         l264 14E6                           l600 10BC                           l193 18DC  
                         l353 0936                           l290 18B0                           l267 1910  
                         l356 1892                           l196 178A                           l197 17B6  
                         l198 17BC                           l367 128A                           l368 129A  
                         l842 1230                           l835 1228                           l852 13C8  
                         l845 13C0                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         u800 128A                           u801 1286                           u810 11D8  
                         u811 11D4                           u740 17B6                           u820 11F6  
                         u900 1466                           u741 17B2                           u821 11F2  
                         u901 1462                           u750 1406                           u830 1212  
                         u910 147E                           u751 1402                           u831 120E  
                         u911 147A                           u760 1418                           u840 1378  
                         u920 0682                           u761 1414                           u841 1374  
                         u921 067E                           u850 1396                           u770 17D4  
                         u930 06C0                           u851 1392                           u771 17D0  
                         u931 06BC                           u860 13AC                           u780 17E4  
                         u940 072E                           u861 13A8                           u781 17E0  
                         u941 072A                           u870 1784                           u950 0784  
                         u790 1250                           u871 1780                           u951 0780  
                         u791 124C                           u960 07BE                           u880 174A  
                         u961 07BA                           u881 1746                           u970 07D6  
                         u890 186A                           u971 07D2                           u891 1866  
                         u980 07E8                           u981 07E4                           u990 07FE  
                         u991 07FA                           _feu 0938                  __CFG_BORV$18 000000  
                ___awmod@sign 0014                   lcd_gotoXY@x 0005                           wreg 000FE8  
                 lcd_gotoXY@y 0004  __size_of_lcd_effaceAffichage 000E                  __CFG_LVP$OFF 000000  
                        l1020 17EE                          l2000 17FA                          l1025 18EA  
                        l2010 180A                          l2002 17FC                          l1042 174A  
                        l2012 1810                          l2004 17FE                          l2100 13BA  
                        l1028 163C                          l1036 1488                          l2110 12CC  
                        l2102 129E                          l2014 1814                          l2006 1806  
                        l2022 1640                          l2104 12A2                          l2016 1814  
                        l2008 180A                          l2024 164C                          l2032 166A  
                        l2120 1766                          l2040 17D4                          l2050 188A  
                        l2106 12B0                          l2114 12DA                          l2018 1818  
                        l2026 1656                          l2122 1768                          l2042 17E4  
                        l2210 07C4                          l2034 18FA                          l2130 15EC  
                        l2108 12BE                          l2028 1660                          l2116 174C  
                        l2044 17E8                          l2036 17C0                          l2220 0828  
                        l2212 07D6                          l2204 0794                          l2140 1848  
                        l2060 1260                          l2132 1620                          l2124 1712  
                        l2118 1754                          l2070 11E0                          l2038 17C4  
                        l2230 085E                          l2222 0834                          l2214 07E8  
                        l2142 185A                          l2310 14D0                          l2062 126A  
                        l2054 1232                          l2134 1630                          l2126 171E  
                        l2150 142C                          l2048 186E                          l2080 121A  
                        l2072 11E8                          l2064 11BE                          l2240 08A4  
                        l2232 0876                          l2224 083C                          l2216 07FE  
                        l2208 07C2                          l2144 185A                          l2400 18A0  
                        l2312 14D2                          l2304 1498                          l2320 1020  
                        l2056 1242                          l2128 1726                          l2152 1430  
                        l2138 18EC                          l2082 121C                          l2074 11F6  
                        l2066 11C6                          l2090 1380                          l2242 08E6  
                        l2234 088C                          l2226 084E                          l2218 0804  
                        l2250 092A                          l2170 0696                          l2162 0664  
                        l2146 186A                          l2410 18AA                          l2402 18A2  
                        l2314 14E2                          l2306 14BE                          l2330 1054  
                        l2322 1028                          l2058 1250                          l2154 1438  
                        l2084 1222                          l2076 11FC                          l2068 11D8  
                        l2092 1388                          l2244 08F2                          l2236 0898  
                        l2228 085A                          l2180 070C                          l2172 06A2  
                        l2164 0670                          l2500 0F98                          l2404 18A4  
                        l2412 1902                          l2308 14C0                          l2260 1314  
                        l2340 1090                          l2332 105C                          l2324 102C  
                        l2316 100E                          l2156 1466                          l2422 14F4  
                        l2414 14E8                          l2078 1212                          l2094 1396  
                        l2086 1366                          l2246 08F6                          l2238 089C  
                        l2190 076E                          l2182 0710                          l2174 06C0  
                        l2166 0682                          l2510 0FE4                          l2502 0FA2  
                        l2406 18A6                          l2254 18DE                          l2270 132A  
                        l2262 1316                          l2342 1096                          l2334 1064  
                        l2326 103A                          l2318 1012                          l2158 147E  
                        l2430 18B2                          l2424 14FE                          l2416 14EC  
                        l2096 13AC                          l2088 1378                          l2192 0776  
                        l2176 06C8                          l2168 068E                          l2248 0908  
                        l2512 0FE8                          l2504 0FAE                          l2408 18A8  
                        l2360 15B8                          l2352 1598                          l2280 1346  
                        l2272 1330                          l2264 1318                          l2256 1302  
                        l2336 1072                          l2344 109C                          l2328 1042  
                        l2432 18C0                          l2426 1522                          l2098 13B4  
                        l2194 0784                          l2178 06E4                          l2186 072E  
                        l2514 1004                          l2506 0FC4                          l2370 15C6  
                        l2362 15BA                          l2354 15A0                          l2290 148A  
                        l2282 134E                          l2274 1334                          l2266 131E  
                        l2258 1306                          l2346 10AC                          l2338 1088  
                        l2450 0D26                          l2442 0CDA                          l2530 10D2  
                        l2610 0B98                          l2428 1526                          l2196 0788  
                        l2188 075E                          l2508 0FC8                          l2540 0E3E  
                        l2380 15D2                          l2372 15CA                          l2364 15BC  
                        l2356 15AA                          l2292 1490                          l2284 1354  
                        l2276 133C                          l2268 1322                          l2348 10B4  
                        l2460 0D5C                          l2444 0CEA                          l2532 1106  
                        l2524 10CA                          l2516 10BE                          l2620 0BA4  
                        l2612 0B98                          l2604 0B6E                          l2198 0790  
                        l2550 0EB8                          l2542 0E56                          l2390 15E8  
                        l2382 15DA                          l2374 15CC                          l2366 15C0  
                        l2358 15AC                          l2286 1358                          l2278 1342  
                        l2470 0DF4                          l2462 0D7C                          l2446 0CFE  
                        l2438 18C6                          l2534 110A                          l2518 10C2  
                        l2630 0BCE                          l2622 0BA8                          l2614 0B98  
                        l2606 0B86                          ?_feu 0007                          l2560 0F24  
                        l2552 0EEA                          l2544 0E64                          l2384 15E2  
                        l2376 15CE                          l2368 15C2                          l2288 1360  
                        l2392 181E                          l2472 0E0E                          l2464 0D9C  
                        l2456 0D2E                          l2448 0D12                          l2480 16C8  
                        l2536 1126                          l2640 0C04                          l2632 0BD8  
                        l2624 0BB2                          l2616 0B9C                          l2608 0B90  
                        l2490 0F4A                          l2562 0F30                          l2554 0EF6  
                        l2546 0E80                          l2386 15E4                          l2378 15D0  
                        l2298 1494                          l2394 1840                          l2466 0DC0  
                        l2474 0E12                          l2458 0D58                          l2538 112A  
                        l2650 0C2A                          l2642 0C08                          l2634 0BDE  
                        l2626 0BBE                          l2618 0BA0                          l1940 179C  
                        l1932 18CC                          l2492 0F62                          l2564 0F42  
                        l2556 0F0E                          l2548 0E9C                          l2580 0A5E  
                        l2572 0942                          l2396 1894                          l2388 15E6  
                        l2468 0DE4                          l2476 168A                          l2652 0C3E  
                        l2660 0C62                          l2644 0C10                          l2636 0BE8  
                        l2628 0BC8                          l1950 17A8                          l1942 179C  
                        l1934 1786                          l2494 0F7E                          l2558 0F1A  
                        l2590 0B4E                          l2582 0A86                          l2574 0994  
                        l2566 093A                          l2398 1898                          l2486 16CE  
                        l2478 16A2                          l2670 0C8C                          l2662 0C66  
                        l2654 0C4A                          l2646 0C14                          l2638 0BEE  
                        l1928 1912                          l1952 17B8                          l1944 179E  
                        l1936 178E                          l1960 13D0                          l2496 0F82  
                        l2584 0AD8                          l2576 09E4                          l2592 0B58  
                        l2672 0C9E                          l2664 0C72                          l2656 0C54  
                        l2648 0C26                          l1946 17A6                          l1938 179A  
                        l1970 13E0                          l1962 13D4                          l2498 0F8C  
                        l2594 0B5E                          l2586 0B00                          l2578 0A0C  
                        l2674 0CAE                          l2658 0C58                          l2666 0C78  
                        l1948 17A8                          l1956 190A                          l1980 13F6  
                        l1972 13E4                          l1964 13D4                          l2588 0B44  
                        l2676 0CBC                          l2668 0C84                          l1990 1426  
                        l1982 1406                          l1974 13E4                          l1966 13D6  
                        l1958 13CC                          l2678 0CC0                          l1984 1418  
                        l1976 13EA                          l1968 13D8                          l1986 1422  
                        l1978 13EE                          l1994 17F2                          l1988 1426  
                        l1996 17F6                          l1998 17FA                          STR_1 0657  
                        u1000 0828                          u1001 0824                          u1010 084E  
                        u1011 084A                          u1020 0876                          u1100 1054  
                        u1021 0872                          u1101 1050                          u1030 088C  
                        u1110 1072                          u1031 0888                          u1111 106E  
                        u1040 0908                          u1120 1088                          u1200 16C8  
                        u1041 0904                          u1121 1084                          u1201 16C4  
                        u1050 092A                          u1210 0F58                          u1130 10AC  
                        u1051 0926                          u1131 10A8                          u1140 1542  
                        u1220 0FE4                          u1300 0F0E                          u1060 14D0  
                        u1141 153E                          u1221 0FE0                          u1301 0F0A  
                        u1061 14CC                          u1230 1004                          u1310 0994  
                        u1070 14E2                          u1150 18C0                          u1231 1000  
                        u1311 0990                          u1071 14DE                          u1151 18BC  
                        u1320 09E4                          u1080 1020                          u1160 0D78  
                        u1240 1126                          u1400 0C9E                          u1321 09E0  
                        u1081 101C                          u1161 0D74                          u1241 1122  
                        u1401 0C9A                          u1330 0A5E                          u1090 103A  
                        u1170 0DC0                          u1250 1146                          u1410 0CAE  
                        u1331 0A5A                          u1091 1036                          u1171 0DBC  
                        u1251 1142                          u1411 0CAA                          u1260 0E4C  
                        u1340 0AD8                          u1180 0E3C                          u1341 0AD4  
                        u1181 0E38                          u1270 0E80                          u1350 0B6C  
                        u1190 1698                          u1271 0E7C                          u1351 0B68  
                        u1280 0EB8                          u1281 0EB4                          u1290 0EEA  
                        u1370 0B7C                          u1507 0FB8                          u1291 0EE6  
                        u1380 0C26                          u1517 13F0                          u1381 0C22  
                        u1437 0BF8                          u1390 0C3E                          u1527 141A  
                        u1447 0CC6                          u1391 0C3A                          u1457 130C  
                        u1467 1324                          u1477 1336                          u1487 1348  
                        u1497 135A                          _RCIF 007CF5                          _TMR0 000FD6  
                        _TMR1 000FCE              ??_initialisation 0003                          _main 0B6E  
                        _rand 15EC                          feu@i 000F                          feu@x 000E  
                        fsr1h 000FE2                          fsr2h 000FDA                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0050                          prodh 000FF4                          prodl 000FF3  
                        start 002C               ?_lcd_putMessage 0007                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000                         ??_feu 0009  
          __end_ofperdu@F2886 0616               ??_lcd_ecritChar 0004                         ?_main 0001  
                       ?_rand 000D               __end_of___awmod 10BE                         _ANSEL 000F7E  
             __end_of___lwdiv 1232               __end_of___lwmod 13CA                         i2l171 0028  
                       _RCREG 000FAE                         _SPBRG 000FAF                         _PORTD 000F83  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISD 000F95  
                       _TXREG 000FAD                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000               __end_of_deplace 0F4A  
         ___lmul@multiplicand 0005                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 0004  
             __end_of_dpowers 0657               __end_of_isdigit 17F0                         _randx 004A  
                       _perdu 168A                         _srand 18DE                  main@pointage 00CB  
                       tablat 000FF5                         ttemp5 0051                         ttemp6 0054  
                       ttemp7 0058                         status 000FD8                         wtemp8 0051  
             __end_of_sprintf 0938      __end_of_lcd_cacheCurseur 190A                __CFG_HFOFST$ON 000000  
       __size_of_affichePerdu 00C4                __CFG_PBADEN$ON 000000               __initialization 1148  
                __end_of_main 0CDA                  __end_of_rand 163E          lcd_putMessage@chaine 0007  
                      ??_main 0048                        ??_rand 000F                 __activetblptr 000002  
                      _ADCON1 000FC1                  _affichePerdu 0F4A                        _ADRESH 000FC4  
                      ?_perdu 0001                        ?_srand 0001                        _ANSELH 000F7F  
              __CFG_WDTEN$OFF 000000                        i2l2680 000A                        i2l2682 0018  
                      i2l2684 001A                        _SPBRGH 000FB0                __CFG_XINST$OFF 000000  
              lcd_initCGRam@i 0006                lcd_initCGRam@j 0007                getAnalog@canal 0002  
            __end_of_lcd_busy 17BE              __end_of_lcd_init 1846              __end_of_high_isr 002C  
                      ___lmul 1232                        ___wmul 186E                __CFG_STVREN$ON 000000  
                   ??___awmod 0013              ??_nouveauxAliens 0015                     ??___lwdiv 0005  
                   ??___lwmod 000C                        feu@pts 0007               ___awmod@divisor 0011  
                   ??_deplace 000C               ___awmod@counter 0013                        _strcmp 142C  
                      _strcpy 1712                  __pdataCOMRAM 004A                     ??_isdigit 0001  
            __end_of_testEtat 18CA                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                        srand@x 0001  
      __size_of_afficheAliens 005C                     ??_sprintf 0013             _lcd_resetSequence 1302  
         deplace@effaceJoueur 000D                    __accesstop 0060       __end_of__initialization 11B0  
         _lcd_strobeEnableBit 190A            ?_lcd_resetSequence 0001                 ___rparam_used 000001  
              main@afficheNom 00B4                __pcstackCOMRAM 0001           _lcd_effaceAffichage 18EC  
                __pidataBANK0 1544                  __pidataBANK1 16D2           ??_lcd_resetSequence 0003  
               __end_of_perdu 16D2                deplace@tension 0022                 __end_of_srand 18EC  
        ?_lcd_strobeEnableBit 0001            __size_of_getAnalog 0028          ?_lcd_effaceAffichage 0001  
          __size_of_lcd_wrCom 0062                       ??_perdu 0008     __end_of_lcd_resetSequence 1366  
                sprintf@width 001D                       ??_srand 0003      __size_of_lcd_lireDonnees 0006  
           _lcd_ecrireDonnees 18CA                    __pbssBANK0 00CF              ??_lcd_putMessage 0009  
          ?_lcd_ecrireDonnees 0001      __size_of_lcd_curseurHome 0008             affichePerdu@F2889 0640  
         ??_lcd_ecrireDonnees 0001                 _afficheAliens 14E8                       ?___lmul 0001  
                     ?___wmul 0001                main@etatInitSW 00CA                ___lmul@product 0009  
       ??_lcd_strobeEnableBit 0001                       ?_strcmp 0001                       ?_strcpy 0001  
                  _lcd_gotoXY 129C         ??_lcd_effaceAffichage 0004                    _lcd_wrData 17F0  
   __end_of_lcd_ecrireDonnees 18DE                     ?_lcd_busy 0001                     ?_lcd_init 0001  
     lcd_ecrireDonnees@donnee 0002                     ?_high_isr 0001     __end_ofaffichePerdu@F2889 064D  
           __end_of_getAnalog 186E             ?_lcd_cacheCurseur 0001                       __Hparam 0000  
                     __Lparam 0000            ??_lcd_cacheCurseur 0004                ?_afficheAliens 0001  
                   ?_testEtat 0001               nouveauxAliens@i 0040               nouveauxAliens@j 0046  
           __end_of_lcd_wrCom 142C               __size_of___lmul 006A                       ___awmod 100E  
                 videAliens@i 0009                   videAliens@j 000B               __size_of___wmul 0026  
                     ___lwdiv 11BE                       ___lwmod 1366           affichePerdu@ptsChar 0031  
                __psmallconst 0600                       __pcinit 1148                    _init_serie 1894  
                   _ANSELbits 000F7E                       __ramtop 0600                       _deplace 0E3E  
                     __ptext0 0B6E                       __ptext1 10BE                       __ptext2 18B2  
                     __ptext3 168A                       __ptext4 142C                       __ptext5 0CDA  
                     __ptext6 1712                       __ptext7 15EC                       __ptext8 1232  
                     __ptext9 100E         __end_of_lcd_ecritChar 168A                     _T0CONbits 000FD5  
             lcd_busy@adresse 0002               __size_of_strcmp 005E               __size_of_strcpy 003A  
                   _T1CONbits 000FCD                       _dpowers 064D                  __size_of_feu 0236  
                     _isdigit 17BE              ___awmod@dividend 000F              lcd_ecritChar@car 0004  
                     _sprintf 0664                    ??_lcd_busy 0001                    ??_lcd_init 0008  
  __size_of_lcd_resetSequence 0064                    ??_high_isr 0001              _m_tempsDAfficher 00CF  
        end_of_initialization 11B0         __end_of_lcd_initCGRam 14E8                 __Lmediumconst 0000  
           __end_ofmain@F2861 0640                    _videAliens 10BE             ??_lcd_lireDonnees 0001  
                  ??_testEtat 0001                     _RCSTAbits 000FAB                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
     __size_of_initialisation 0054             ??_lcd_curseurHome 0004                       strcmp@r 0007  
         lcd_ecritChar@posRam 0005                     _PORTAbits 000F80                     _PORTBbits 000F81  
                 ?_lcd_gotoXY 0004                     _TRISCbits 000F94                   ?_lcd_wrData 0001  
  __size_of_lcd_ecrireDonnees 0014                     _TXSTAbits 000FAC               ??_afficheAliens 000A  
              __end_of___lmul 129C                __end_of___wmul 1894                   _BAUDCONbits 000FB8  
                 ?_init_serie 0001                 __pidataCOMRAM 1918          __end_ofdeplace@F2880 062B  
              __end_of_strcmp 148A                __end_of_strcpy 174C           start_initialization 1148  
                 __end_of_feu 0B6E                   ?_videAliens 0001           __size_of_lcd_gotoXY 0066  
                    ??___lmul 0009                      ??___wmul 0005           __size_of_lcd_wrData 002E  
                 __pdataBANK0 0060                   __pdataBANK1 0100              __CFG_LPT1OSC$OFF 000000  
                    ??_strcmp 0005                      ??_strcpy 0005                   __pbssCOMRAM 004E  
               __pcstackBANK0 00B4       __size_of_nouveauxAliens 0164                    perdu@F2886 0601  
                _isdigit$1464 0002             __size_of_lcd_busy 0038             __size_of_lcd_init 0028  
           __size_of_high_isr 0024                   sprintf@flag 001A           __size_of_init_serie 001E  
                 sprintf@prec 0019              ___lwdiv@dividend 0001             __CFG_CCP2MX$PORTC 000000  
                   _getAnalog 1846   __end_of_lcd_strobeEnableBit 1912                     __pintcode 0008  
              _initialisation 1598                      ?___awmod 000F                      ?___lwdiv 0001  
             main@etatAfterSW 00C9                      ?___lwmod 0008             __size_of_testEtat 0018  
                    ?_deplace 000A   __end_of_lcd_effaceAffichage 18FA                     _lcd_wrCom 13CA  
   __size_of_lcd_cacheCurseur 0008                   __smallconst 0600        nouveauxAliens@posAlien 0018  
                    ?_isdigit 0001           __size_of_videAliens 008A                 ?_affichePerdu 0020  
            ___lwdiv@quotient 0005               _lcd_lireDonnees 1912                      ?_sprintf 000D  
         lcd_wrData@caractere 0003                __size_of_perdu 0048                __size_of_srand 000E  
             _lcd_curseurHome 18FA                ___wmul@product 0005        __end_of_initialisation 15EC  
                    i2u142_40 0018                      i2u142_41 0014                    ?_getAnalog 0001  
            __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 003A                     main@F2861 062B  
                  ?_lcd_wrCom 0001                    _ADCON0bits 000FC2                    _ADCON2bits 000FC0  
           ___wmul@multiplier 0001                  ??_lcd_gotoXY 0005                ??_affichePerdu 0022  
                ??_lcd_wrData 0003             lcd_wrCom@commande 0003             ___lmul@multiplier 0001  
                   copy_data0 115C                     copy_data1 117C                     copy_data2 119C  
        affichePerdu@gameOver 0024        __size_of_lcd_ecritChar 004C                  deplace@F2880 0616  
                    __Hrparam 0000               ?_initialisation 0001                      __Lrparam 0000  
          __CFG_BOREN$SBORDIS 000000            __end_of_lcd_gotoXY 1302            __end_of_lcd_wrData 181E  
            __size_of___awmod 00B0                  ??_init_serie 0001              __size_of___lwdiv 0074  
            __size_of___lwmod 0064        __size_of_lcd_initCGRam 005E               lcd_putMessage@j 0009  
            __size_of_deplace 010C       __end_of_lcd_lireDonnees 1918                    sprintf@val 001B  
                   perdu@safe 0008                _nouveauxAliens 0CDA              __size_of_isdigit 0032  
             ___lwdiv@divisor 0003                      _matCGRAM 0100               ___lwdiv@counter 0007  
     __end_of_lcd_curseurHome 1902                      __ptext10 181E                      __ptext11 1302  
                    __ptext20 1846                      __ptext12 148A                      __ptext21 0F4A  
                    __ptext13 18FA                      __ptext30 129C                      __ptext22 0664  
                    __ptext14 1902                      __ptext31 18EC                      __ptext23 17BE  
                    __ptext15 1598                      __ptext32 13CA                      __ptext24 1366  
                    __ptext16 18DE                      __ptext33 190A                      __ptext25 11BE  
                    __ptext17 1894                      __ptext34 18CA                      __ptext26 14E8  
                    __ptext18 0938                      __ptext35 1786                      __ptext27 174C  
                    __ptext19 0E3E                      __ptext36 1912                      __ptext28 163E  
                    __ptext37 186E                      __ptext29 17F0               affichePerdu@pts 0020  
                    _m_aliens 0060                      _lcd_busy 1786                      _lcd_init 181E  
                    _high_isr 0008              __size_of_sprintf 02D4                    strcpy@from 0003  
                    _m_niveau 004E         nouveauxAliens@monstre 0042                 __size_of_main 016C  
               __size_of_rand 0052            __end_of_init_serie 18B2                  ??_videAliens 0007  
                    deplace@x 000A                   ??_getAnalog 0001         __end_of_afficheAliens 1544  
                    _testEtat 18B2                      int$flags 0050                      main@posX 00CD  
                 ??_lcd_wrCom 0003              _lcd_cacheCurseur 1902        __end_of_nouveauxAliens 0E3E  
              afficheAliens@i 000A                 _lcd_ecritChar 163E                    _INTCONbits 000FF2  
          __end_of_videAliens 1148                      isdigit@c 0003                      intlevel2 0000  
                   sprintf@ap 0017                     sprintf@sp 000D                 _lcd_initCGRam 148A  
            ___lwmod@dividend 0008                _lcd_putMessage 174C          __end_of_affichePerdu 100E  
              ?_lcd_ecritChar 0001                      sprintf@c 001F                      sprintf@f 000F  
             ?_nouveauxAliens 0001              ?_lcd_lireDonnees 0001                      strcmp@s1 0001  
                    strcmp@s2 0003               ___lwmod@divisor 000A                      strcpy@cp 0005  
                    strcpy@to 0001               ___lwmod@counter 000C              ?_lcd_curseurHome 0001  
              ?_lcd_initCGRam 0001             __CFG_FOSC$INTIO67 000000        __end_of_lcd_putMessage 1786  
